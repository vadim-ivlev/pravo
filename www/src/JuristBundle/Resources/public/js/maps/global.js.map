{"version":3,"sources":["common.js","../node_modules/browser-pack/_prelude.js","../node_modules/101/exists.js","../node_modules/101/is-object.js","../node_modules/keypather/index.js","../node_modules/ractive-transitions-fade/dist/ractive-transitions-fade.js","app/Resources/public/blocks/crosslayouts/b-adfox/scripts/Adfox.js","app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters.ihtml","app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters_doc.ihtml","app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/SearchFilters.js","app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/config.js","app/Resources/public/blocks/crosslayouts/b-search-form/b-search-bar.ihtml","app/Resources/public/blocks/crosslayouts/b-search-form/scripts/SearchBar.js","app/Resources/public/blocks/crosslayouts/b-search-info/scripts/SearchInfo.js","app/Resources/public/blocks/crosslayouts/b-search-info/search-info.ihtml","app/Resources/public/blocks/crosslayouts/b-share/scripts/share.js","app/Resources/public/blocks/crosslayouts/b-tabs/scripts/Tabs.js","app/Resources/public/blocks/crosslayouts/b-tabs/tabs.ihtml","app/Resources/public/blocks/crosslayouts/b-yadirect/scripts/Yadirect.js","app/Resources/public/blocks/forms/b-button/b-button.ihtml","app/Resources/public/blocks/forms/b-button/scripts/Button.js","app/Resources/public/blocks/forms/b-checkbox/b-checkbox.ihtml","app/Resources/public/blocks/forms/b-checkbox/scripts/Checkbox.js","app/Resources/public/blocks/forms/b-email/scripts/Email.js","app/Resources/public/blocks/forms/b-form-message/b-form-message.ihtml","app/Resources/public/blocks/forms/b-form-message/scripts/FormMessage.js","app/Resources/public/blocks/forms/b-form/scripts/Form.js","app/Resources/public/blocks/forms/b-form/scripts/FormTools.js","app/Resources/public/blocks/forms/b-input-notification/b-input-notification.ihtml","app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js","app/Resources/public/blocks/forms/b-input/b-input.ihtml","app/Resources/public/blocks/forms/b-input/scripts/Input.js","app/Resources/public/blocks/forms/b-name/scripts/Name.js","app/Resources/public/blocks/forms/b-select/b-select.ihtml","app/Resources/public/blocks/forms/b-select/scripts/Select.js","app/Resources/public/blocks/forms/b-submit/b-submit.ihtml","app/Resources/public/blocks/forms/b-submit/scripts/Submit.js","app/Resources/public/blocks/forms/b-textarea/b-textarea.ihtml","app/Resources/public/blocks/forms/b-textarea/scripts/Textarea.js","app/Resources/public/blocks/header/b-menu/scripts/b-menu.js","app/Resources/public/blocks/main/b-live-reload/scripts/LiveReload.js","app/Resources/public/scripts/config.js","app/Resources/public/scripts/global.js","app/Resources/public/scripts/global/components.js","app/Resources/public/scripts/global/decorators.js","app/Resources/public/scripts/global/extends.js","app/Resources/public/scripts/global/modules.js","app/Resources/public/scripts/modules/Ads/Adfox.js","app/Resources/public/scripts/modules/Ads/Ads.js","app/Resources/public/scripts/modules/Ads/Ivengo.js","app/Resources/public/scripts/modules/Ads/NativeRoll.js","app/Resources/public/scripts/modules/Ads/Teads.js","app/Resources/public/scripts/modules/Ads/Turboroller.js","app/Resources/public/scripts/modules/Ads/YaDirect.js","app/Resources/public/scripts/modules/Analytics/Analytics.js","app/Resources/public/scripts/modules/Analytics/Contentinsights.js","app/Resources/public/scripts/modules/Analytics/Ga.js","app/Resources/public/scripts/modules/BlocksShifter.js","app/Resources/public/scripts/modules/ContentHandler.js","app/Resources/public/scripts/modules/ContentToggler.js","app/Resources/public/scripts/modules/Counters.js","app/Resources/public/scripts/modules/DateTime.js","app/Resources/public/scripts/modules/Events.js","app/Resources/public/scripts/modules/ListHeadToSelect.js","app/Resources/public/scripts/modules/LiveReload.js","app/Resources/public/scripts/modules/Logger.js","app/Resources/public/scripts/modules/Meta.js","app/Resources/public/scripts/modules/Parser.js","app/Resources/public/scripts/modules/Query.js","app/Resources/public/scripts/modules/ScreenViewer.js","app/Resources/public/scripts/modules/Selection.js","app/Resources/public/scripts/modules/Services/Geolocation.js","app/Resources/public/scripts/modules/Services/Place.js","app/Resources/public/scripts/modules/Services/RegionalNews.js","app/Resources/public/scripts/modules/Services/Saved.js","app/Resources/public/scripts/modules/Services/Subscribe.js","app/Resources/public/scripts/modules/Services/Viewed.js","app/Resources/public/scripts/modules/Services/config.js","app/Resources/public/scripts/modules/Session.js","app/Resources/public/scripts/modules/Storage.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","e","t","n","r","s","o","u","a","require","f","Error","code","l","exports","call","/var/www/pravo/node_modules/101/exists.js","module","exists","val","undefined","/var/www/pravo/node_modules/101/is-object.js","isObject","Array","isArray","RegExp","String","Number","./exists","/var/www/pravo/node_modules/keypather/index.js","global","Keypather","force","this","Boolean","parseBracketKey","replace","JSON","parse","err","last","arrOrStr","makeArray","trim","str","escapeRegExp","keypather","opts","get","create","_get","apply","arguments","set","obj","keypath","value","fnArgs","slice","map","match","keypathSplit","splitKeypath","lastKey","getLastKey","getLastObj","has","hasOwnProperty","del","flatten","delimeter","preKeypath","init","arr","def","self","keys","reduce","out","join","arrKeypath","expand","flatObj","arrSoFar","delimeterRegex","test","getValue","bind","parenBuffer","bracketBuffer","preParen","preBracket","dotSplit","split","openParen","openBracket","forEach","groupParens","part","parenSplit","leftover","bracketSplit","indexOf","shift","push","keyPart","indexOpenParen","indexCloseParen","indexOpenBracket","indexCloseBracket","keyHasParens","keyHasBrackets","lastVal","handleFunction","handleBrackets","handleKey","createPath","ctx","subKey","argsStr","parseFunctionArgs","bracketKey","lastKeyPart","pop","lastIndexOf","args","setOperation","getArgs","replacementArgs","argsSplit","arg","parsed","ReferenceError","window","101/is-object","/var/www/pravo/node_modules/ractive-transitions-fade/dist/ractive-transitions-fade.js","factory","define","amd","Ractive","transitions","fade","params","targetOpacity","processParams","DEFAULTS","isIntro","getStyle","setStyle","animateStyle","then","complete","ractive_transitions_fade","delay","duration","easing","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-adfox/scripts/Adfox.js","_getId","Math","random","toString","substring","template","Component","extend","data","uri","appear","screentype","banner","id","content","oninit","RG","logger","debug","onrender","screentypeList","events","subscribe","ScreenViewer","_modulePrefix","topic","checkForScreenType","getScreenInfo","type","prepareRun","screenInfo","setAppear","adfox","prepareUri","adsUri","meta","getPlatform","initBanner","tgNS","ADFOX","RELOAD_CODE","initData","adfoxParam","html","log","loadBanner","pr1","sessionId","globalScreenType","callb","$","each","item","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters.ihtml","v","class","x","click","m","change","d","disabled","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters_doc.ihtml","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/SearchFilters.js","searchFilters","documentsFilters","searchTemplate","documentTemplate","SearchFilters","paper","period","loading","hide","_this","query","resultFilters","themes","materialTypes","projects","origin","doctype","statuses","org","on","addFilter","setPeriod","setPaper","find","publish","setOrigin","_","isEmpty","isString","from","to","filters","index","filter","checked","inst","info","moment","format","Date","reverse","diff","emitFilters","filterToggleTopic","toggle","event","name","context","splice","findIndex","original","preventDefault","stopPropagation","subtract","objFilter","elem","../b-search-filters.ihtml","../b-search-filters_doc.ihtml","./config","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/config.js","Config","check","subDepartments","origins","periods","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/b-search-bar.ihtml","twoway","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/scripts/SearchBar.js","SearchBar","keywords","_this2","observe","nVal","oVal","sugestion","word","location","encodeURI","nodes","searchInput","focus","../b-search-bar.ihtml","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/scripts/SearchInfo.js","SearchInfo","sort","_this3","count","../search-info.ihtml","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/search-info.ihtml","href","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-share/scripts/share.js","decorators","yandexShare","node","Ya","share","options","theme","services","lang","size","share2","teardown","destroy","owner","classes","_this4","updateContent","url","title","description","image","error","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/scripts/Tabs.js","Tabs","selected","items","_this5","tab","findAll","selectHandler","debounce","setPosition","element","$element","left","position","width","../tabs.ihtml","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/tabs.ihtml","style","/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-yadirect/scripts/Yadirect.js","_getRandomItem","list","rateMap","rand","min","max","randomNum","weightSum","rateList","iterator","listLength","fullRate","_getStatId","param","statId","screenInfoMap","mobile","tablet","tabletLandscape","desktop","desktopFull","project","place","Yadirect","initDirect","directPlaceId","containerId","prop","resolution","blocks","getRateMap","yaDirect","ad_format","yandex_context_callbacks","stat_id","Direct","insertInto","loadLib","empty","libSrc","getScript","rate","/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/b-button.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/scripts/Button.js","Button","_this6","../b-button.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/b-checkbox.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/scripts/Checkbox.js","FormTools","Checkbox","highlight","highlighted","_this7","form","reset","../../b-form/scripts/FormTools","../b-checkbox.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-email/scripts/Email.js","Input","Email","placeholder","label","../../b-input/scripts/Input","/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/b-form-message.ihtml","txt","/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/scripts/FormMessage.js","FormMessage","components","rg-button","_this8","../../b-button/scripts/Button.js","../b-form-message.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/Form.js","Form","el","formData","tmpl","_getTemplate","parser","findComponents","registerEvents","fields","renderComponents","renderForm","_this9","field","form_id","parseInt","article_id","getMaterial","user_id","session","getUserData","_this10","findAllComponents","component","forms","instances","render","tag","concat","_this11","_submit","updateFormData","valid","isFunction","validate","ajax","success","async","_this12","addClass","method","getFormData","trace","action","response","resetField","/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js","checkMaxLength","_this13","maxNum","maxlengthback","show","showMsg","removeClass","errorMsg","config","messages","_highlight","attr","/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/b-input-notification.ihtml","t0","/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js","InputNotification","timeOut","msg","_this14","clearTimeout","setTimeout","../b-input-notification.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/b-input.ihtml","off","/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/scripts/Input.js","input-notification","_this15","pattern","formats","../../b-input-notification/scripts/InputNotification","../b-input.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-name/scripts/Name.js","Name","/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/b-select.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/scripts/Select.js","Select","selectedOption","hasClass","itemsDefault","itemsNew","rubrics","itemsList","console","_this16","select","document","../b-select.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/b-submit.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/scripts/Submit.js","Submit","_this17","../b-submit.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/b-textarea.ihtml","/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/scripts/Textarea.js","Textarea","_this18","../b-textarea.ihtml","/var/www/pravo/www/app/Resources/public/blocks/header/b-menu/scripts/b-menu.js","ready","mobileMenuDisplay","menuMobileLink","menuMobile","searchBarDisplay","searchIcon","/var/www/pravo/www/app/Resources/public/blocks/main/b-live-reload/scripts/LiveReload.js","LiveReload","dateFormat","datetime","parseVmDate","/var/www/pravo/www/app/Resources/public/scripts/config.js","root","outer","paths","fresh","accountInclude","popularMaterials","popularCommentMaterials","fascicles","supersp","lastNews","broadcastSport","broadcastOnline","partners","bFeed","bNewsInner","bNewsInner_doc","bNews","bNews_broadsides","bPartners","regions","env","email","conformAtionCode","inputNotValid","emailNotValid","nameNotValid","codeIsSent","codeNotValid","/var/www/pravo/www/app/Resources/public/scripts/global.js","ajaxSetup","xhrFields","withCredentials","setBodyFixed","unsetBodyFixed","login","social","$cbox","$cboxOverlay","colorbox","onComplete","Auth","run","resize","innerWidth","innerHeight","onLoad","onCleanup","returnFocus","scrolling","opacity","initialWidth","initialHeight","transition","searchOverlayShow","load","height","onClosed","className","followedOverlayShow","top","offset","right","viewedOverlayShow","_regionOverlayShow","unsubscribe","Region","_overlayShow","$overlay","setFixedMenu","scrollStart","scrollCurrent","scrollTop","menu","querySelector","classList","add","remove","Viewed","$windowHeight","$windowWidth","$scrollTop","pageYOffset","$datepicker","datepicker","showOn","buttonText","showButtonPanel","showOtherMonths","selectOtherMonths","beforeShow","onClose","regional","stick_in_parent","parent","spacer","mCustomScrollbar","autoHideScrollbar","Subscribe","getSujet","subscribed","sujet","Saved","Analytics","$printBtn","print","Counters","Ads","Adfox_modulePrefix","YaDirect","BlocksShifter","Place","RegionalNews","onOpen","inline","footerContentToggler","infoBefore","screenWidth","initialHide","ContentToggler","btn","opened","slick","dots","infinite","speed","slidesToShow","responsive","breakpoint","settings","variableWidth","centerMode","hash","registerList","search.overlay.show","region.overlay.show","followed.show","viewed.show","session.confirm.required","overlay.resize","$list","css","colorbox.opened","colorbox.closed","overlay.show","overlay.hide","session.user.authorized","destruct","close","scroll.init","scroll.destroy","livereload.init","ContentHandler","labelList","ScrollTopBroadcast","geolocation.region.changed","ListHeadToSelect","counter","./global/components","./global/decorators","./global/extends","./global/modules","/var/www/pravo/www/app/Resources/public/scripts/global/components.js","tabs","search-bar","rg-search-info","rg-search-filters","rg-input","rg-email","rg-name","rg-checkbox","rg-select","rg-textarea","rg-submit","rg-form","rg-yadirect","rg-form-message","rg-adfox","../../blocks/crosslayouts/b-adfox/scripts/Adfox","../../blocks/crosslayouts/b-search-filters/scripts/SearchFilters","../../blocks/crosslayouts/b-search-form/scripts/SearchBar","../../blocks/crosslayouts/b-search-info/scripts/SearchInfo","../../blocks/crosslayouts/b-share/scripts/share","../../blocks/crosslayouts/b-tabs/scripts/Tabs","../../blocks/crosslayouts/b-yadirect/scripts/Yadirect","../../blocks/forms/b-checkbox/scripts/Checkbox","../../blocks/forms/b-email/scripts/Email","../../blocks/forms/b-form-message/scripts/FormMessage","../../blocks/forms/b-form/scripts/Form","../../blocks/forms/b-input-notification/scripts/InputNotification","../../blocks/forms/b-input/scripts/Input","../../blocks/forms/b-name/scripts/Name","../../blocks/forms/b-select/scripts/Select","../../blocks/forms/b-submit/scripts/Submit","../../blocks/forms/b-textarea/scripts/Textarea","/var/www/pravo/www/app/Resources/public/scripts/global/decorators.js","date-picker","ractive","onSelect","dateValue","updateModel","constrainInput","maxDate","scroll-bar","/var/www/pravo/www/app/Resources/public/scripts/global/extends.js","mixin","getQueryParam","toLowerCase","regex","results","exec","decodeURIComponent","objMap","input","mapper","k","objReject","jQuery","closeText","prevText","nextText","currentText","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","weekHeader","firstDay","isRTL","showMonthAfterYear","yearSuffix","setDefaults","ractive-transitions-fade","/var/www/pravo/www/app/Resources/public/scripts/global/modules.js","getEnv","DEBUG","storage","selection","Geolocation","Menu","../../blocks/header/b-menu/scripts/b-menu","../config","../modules/Ads/Ads","../modules/Analytics/Analytics","../modules/BlocksShifter","../modules/ContentHandler","../modules/ContentToggler","../modules/Counters","../modules/DateTime","../modules/Events","../modules/ListHeadToSelect","../modules/LiveReload","../modules/Logger","../modules/Meta","../modules/Parser","../modules/Query","../modules/ScreenViewer","../modules/Selection","../modules/Services/Geolocation","../modules/Services/Place","../modules/Services/RegionalNews","../modules/Services/Saved","../modules/Services/Subscribe","../modules/Services/Viewed","../modules/Session","../modules/Storage","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Adfox.js","initAdFoxBanner","$ads","banners","append","adsId","$adsWrapper","scroll","closest","one","$all_appeared_elements","force_appear","setPlaces","places","$place","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ads.js","Adfox","Teads","Ivengo","Turboroller","NativeRoll","filterResolution","filteredPlaces","Teads_modulePrefix","YaDirect_modulePrefix","Ivengo_modulePrefix","Turboroller_modulePrefix","./Adfox","./Ivengo","./NativeRoll","./Teads","./Turboroller","./YaDirect","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ivengo.js","_ENV","_placeId","prod","dev","initLib","done","setup","typeScreen","iVengo","appId","logLevel","fillSlot","adType","mobileOnly","showInterstitial","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/NativeRoll.js","onError","gid","SeedrPlayer","b","c","g","h","createElement","src","getElementsByTagName","parentNode","insertBefore","protocol","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Teads.js","inread","inboard","adsElementsClasses","pid","slot","skip","mutable","minSlot","_ttf","bannersGroup","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Turboroller.js","placeId","$dummy","elId","prefixId","postfixId","urlReq","escape","floor","defaultCharset","characterSet","turboroller","/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/YaDirect.js","adsLoadedElementsClasses","getStatId","stat_store","placeAdsId","runBanners","yadirect","$direct","directElId","../ScreenViewer","/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Analytics.js","Ga","Contentinsights","./Contentinsights","./Ga","/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Contentinsights.js","_moduleId","sf","_ain","getMaterialUrl","postid","getMaterialTitle","pubdate","getPubTime","authors","getAuthorName","sections","getSectionName","/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Ga.js","_gaId","dimensionsConf","1","dimensionsSet","dimension","targetLabel","ga","customGaId","getGaId","customGaURI","getProjectUri","q","register","tagLabel","sendTracker","hitType","eventCategory","eventAction","eventLabel","eventValue","paramItem","nonInteraction","/var/www/pravo/www/app/Resources/public/scripts/modules/BlocksShifter.js","_shiftContainerLabel","_shiftContainerActiveClass","_shiftContainerId","_shiftContainerWidthHash","_callbackList","shiftBlocks","screenProp","$shiftContainer","checkToShift","screenType","$el","shiftContainerWidthHashValue","shiftContainerIdValue","$activeBlock","processBlock","activeClass","children","appendTo","callback","setCallback","callbackList","callbackParam","blockId","screenTypeItem","/var/www/pravo/www/app/Resources/public/scripts/modules/ContentHandler.js","Module","$root","_options","defaults","contentList","active","attrFind","$labelList","$contentList","$activeBtn","$activeCtx","fn","$btn","ctxLabel","$ctx","deselect","storeBtn","storeCtx","storeActiveEl","/var/www/pravo/www/app/Resources/public/scripts/modules/ContentToggler.js","background-color","setHeight","outerHeight","showHide","initialShow","/var/www/pravo/www/app/Resources/public/scripts/modules/Counters.js","counters","targetId","elementId","_tmr","$a","$img","start","getTime","alt","border","counterId","getYaMetrikaId","yandex_metrika_callbacks","yaCounter39269930","Metrika","clickmap","trackLinks","accurateTrackBounce","webvisor","trackHash","initCounters","/var/www/pravo/www/app/Resources/public/scripts/modules/DateTime.js","date","time","preparedDate","isSame","/var/www/pravo/www/app/Resources/public/scripts/modules/Events.js","pubsub","PubSub","immediateExceptions","_this19","/var/www/pravo/www/app/Resources/public/scripts/modules/ListHeadToSelect.js","itemClass","containerClass","listClass","appendElement","collectItems","getAttributes","setItems","findWhere","getItems","pathname","setSelected","isolated","/var/www/pravo/www/app/Resources/public/scripts/modules/LiveReload.js","liveReloads","templates","partials","intervals","requested","getBlocks","block","newKey","setStart","json","getData","getTemplate","tmplUrl","request","dataType","jsonp","jsonpCallback","renderComponent","parrent","where","chain","magic","updateInterval","blockData","interval","clearInterval","intervalId","setInterval","intervalTime","../../blocks/main/b-live-reload/scripts/LiveReload","/var/www/pravo/www/app/Resources/public/scripts/modules/Logger.js","getHours","getMinutes","getSeconds","getMilliseconds","warn","/var/www/pravo/www/app/Resources/public/scripts/modules/Meta.js","material","getMaterialImg","img","getSujetTitle","getPage","getAdsHide","getCustomLiveinternet","/var/www/pravo/www/app/Resources/public/scripts/modules/Parser.js","foundComponents","tagName","sortBy","attributes","object","itemValue","text","getComponents","/var/www/pravo/www/app/Resources/public/scripts/modules/Query.js","Query","parameters","queryString","encodeURIComponent","history","pushState","newurl","host","path","search","parameter","/var/www/pravo/www/app/Resources/public/scripts/modules/ScreenViewer.js","_screenSettings","_screenInfo","detectScreenSizeType","getScreenSize","screenMap","checkScreenInfo","/var/www/pravo/www/app/Resources/public/scripts/modules/Selection.js","getSelected","getSelection","createRange","selectText","range","body","createTextRange","moveToElementText","selectNodeContents","removeAllRanges","addRange","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Geolocation.js","geolocationPaths","getGeolocation","getRegion","changeRegion","region","getRegions","geolocation.region.get","geolocation.region.change","geolocation.region.all","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Place.js","_placeMap","preparePlace","placeSrc","placeFiltered","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/RegionalNews.js","currentRegion","news","$target","$active","regional.run","regional.template.get","regional.news.get","getNews","regional.render","geolocation.list","getUserRegion","rgId","result","initEvents","rubricPrepositionalName","link","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Saved.js","savedPaths","subscribe.saved.toggle","subscribe.saved.remove","subscribe.saved.add","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Subscribe.js","sujetsPaths","commentsPaths","freshPaths","docPaths","removeSujet","addSujet","getMaterials","removeComments","addComments","getFollowed","followedList","getTopSujets","addFresh","removeFresh","checkFresh","isAuthorized","status","addDoc","removeDoc","checkDoc","subscribe.sujet.remove","subscribe.sujet.fetch","subscribe.sujet.add","subscribe.sujet.get","subscribe.sujets.top","subscribe.comments.remove","subscribe.comments.add","subscribe.fresh.add","subscribe.fresh.remove","subscribe.fresh.check","subscribe.doc.add","subscribe.doc.remove","subscribe.doc.check","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Viewed.js","viewedPaths","getViewed","materials","setViewed","materialId","current_saved","viewed.get","viewed.set","/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js","rootPath","account","geolocation","typo","/var/www/pravo/www/app/Resources/public/scripts/modules/Session.js","fixData","cookie","Cookies","enabled","cookieCurrent","getCurrentRegion","cookieNew","confirmData","userData","user","/var/www/pravo/www/app/Resources/public/scripts/modules/Storage.js","Storage","Lockr","sadd","all","getAll"],"mappings":"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","file":"global.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/var/www/pravo/node_modules/101/exists.js\":[function(require,module,exports){\n/**\n * @module {function} 101/exists\n * @type {function}\n */\n\n/**\n * Returns false for null and undefined, true for everything else.\n * @function module:101/exists\n * @param val {*} - value to be existance checked\n * @return {boolean} whether the value exists or not\n */\nmodule.exports = exists;\n\nfunction exists (val) {\n  return val !== undefined && val !== null;\n}\n},{}],\"/var/www/pravo/node_modules/101/is-object.js\":[function(require,module,exports){\n/**\n * Functional version of a strict object check (Arrays and RegExps are not objects)\n * @module 101/is-object\n */\n\n/**\n * @function module:101/is-object\n * @param {*} val - value checked to be an object\n * @return {boolean} Whether the value is an object or not\n */\nvar exists = require('./exists');\n\nmodule.exports = isObject;\n\nfunction isObject (val) {\n  return typeof val === 'object' &&\n    exists(val) &&\n    !Array.isArray(val) &&\n    !(val instanceof RegExp) &&\n    !(val instanceof String) &&\n    !(val instanceof Number);\n}\n},{\"./exists\":\"/var/www/pravo/node_modules/101/exists.js\"}],\"/var/www/pravo/node_modules/keypather/index.js\":[function(require,module,exports){\n(function (global){\nvar isObject = require('101/is-object');\n\nvar keypather = module.exports = function (opts) {\n  var keypather = new Keypather(opts && opts.force);\n  return keypather;\n};\n\nif(typeof module !== 'undefined')\n{\n    module.exports = keypather;\n}\n\nfunction Keypather (force) {\n  this.force = (force !== undefined) ? Boolean(force) : true; // force - default: true\n}\nKeypather.prototype.get = function (/* obj, keypath, fnArgs... */) {\n  this.create = false;\n  return this._get.apply(this, arguments);\n};\nKeypather.prototype.set = function (obj, keypath, value  /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = this.force;\n  this.fnArgs = Array.prototype.slice.call(arguments, 3).map(makeArray);\n  if (keypath.match(/\\(\\)$/)) {\n    throw new Error(\"Invalid left-hand side in assignment\");\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments, true);\n  val[lastKey] = value;\n  return value;\n};\nKeypather.prototype.in = function (obj, keypath) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    throw new TypeError('keypath should not end in a function');\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return false;\n  }\n  return lastKey in val;\n};\nKeypather.prototype.has = function (obj, keypath) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    throw new TypeError('keypath should not end in a function');\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return false;\n  }\n  return val.hasOwnProperty(lastKey);\n};\nKeypather.prototype.del = function (obj, keypath  /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    // deletes function result..does nothing. equivalent to invoking function and returning true\n    // this.get(obj, keypath); // not even necessary since this doesnt actually do anything\n    return true;\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  this.fnArgs = Array.prototype.slice.call(arguments, 2).map(makeArray);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return true;\n  }\n  delete val[lastKey];\n  return true;\n};\nKeypather.prototype.flatten = function (obj, delimeter, preKeypath, init) {\n  var arr = Array.isArray(obj);\n  var def = arr ? [] : {};\n  var self = this;\n  return Object.keys(obj).reduce(function (out, key) {\n    var val = obj[key];\n    if (arr) {\n      key = [ '[', key, ']' ].join('');\n    }\n    var keypath = exists(preKeypath) ?\n      [ preKeypath, key ].join(arr ? '' : delimeter) :\n      key;\n    if(Array.isArray(val) || isObject(val)) {\n      delimeter = exists(delimeter) ? delimeter : '.';\n      self.flatten(val, delimeter, keypath, out);\n    }\n    else {\n      out[keypath] = val;\n    }\n\n    return out;\n  }, init || def);\n};\nvar arrKeypath = /^\\[[0-9]+\\]/;\nKeypather.prototype.expand = function (flatObj, delimeter) {\n  var self = this;\n  var arrSoFar = true;\n  if (exists(delimeter)) {\n    var delimeterRegex = new RegExp(escapeRegExp(delimeter), 'g');\n  }\n  var out = Object.keys(flatObj).reduce(function (out, keypath) {\n    if (arrSoFar) {\n      arrSoFar = arrKeypath.test(keypath);\n      if (!arrSoFar) {\n        // change 'out' to an 'obj'\n        out = out.reduce(function (obj, key) {\n          obj[key] = out[key];\n          return out;\n        }, {});\n      }\n    }\n    var val = flatObj[keypath];\n    if (exists(delimeter)) {\n      keypath = keypath.replace(delimeterRegex, '.');\n    }\n    self.set(out, keypath, val);\n    return out;\n  }, []);\n\n  return out;\n};\n\n// internal\nKeypather.prototype._get = function (obj, keypath /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.keypathSplit = this.splitKeypath(keypath);\n  this.fnArgs = Array.prototype.slice.call(arguments, 2).map(makeArray);\n  return this.keypathSplit.reduce(this.getValue.bind(this), obj);\n};\nKeypather.prototype.splitKeypath = function (keypath) {\n  var dotSplit = keypath.split('.');\n  var split = [];\n  var openParen = false;\n  var openBracket = false;\n  var parenBuffer, bracketBuffer, preParen, preBracket;\n  dotSplit.forEach(function groupParens (part) {\n    var parenSplit, leftover, bracketSplit;\n    if (part.length === 0) {\n      return;\n    }\n    else if (!openParen && ~part.indexOf('(')) {\n      openParen = true;\n      parenBuffer = [];\n      parenSplit = part.split('(');\n      preParen = parenSplit.shift() || '';\n      leftover = parenSplit.join('(');\n      if (leftover.length) groupParens(leftover);\n    }\n    else if (openParen) {\n      if (~part.indexOf(')')) {\n        openParen = false;\n        parenSplit = part.split(')');\n        parenBuffer.push(parenSplit.shift());\n        split.push(preParen+'('+parenBuffer.join('.')+')');\n        leftover = parenSplit.join(')');\n        if (leftover.length) groupParens(leftover);\n      }\n      else {\n        parenBuffer.push(part);\n      }\n    }\n    else if (!openBracket && ~part.indexOf('[')) {\n      openBracket = true;\n      bracketBuffer = [];\n      bracketSplit = part.split('[');\n      preBracket = bracketSplit.shift() || '';\n      leftover = bracketSplit.join('[');\n      if (leftover.length) groupParens(leftover);\n    }\n    else if (openBracket) {\n      if (~part.indexOf(']')) {\n        openBracket = false;\n        bracketSplit = part.split(']');\n        bracketBuffer.push(bracketSplit.shift());\n        split.push(preBracket+'['+bracketBuffer.join('.')+']');\n        leftover = bracketSplit.join(']');\n        if (leftover.length) groupParens(leftover);\n      }\n      else {\n        bracketBuffer.push(part);\n      }\n    }\n    else {\n      split.push(part);\n    }\n  });\n  return split;\n};\nKeypather.prototype.getValue = function (val, keyPart) {\n  this.indexOpenParen = keyPart.indexOf('(');\n  this.indexCloseParen = keyPart.indexOf(')');\n  this.indexOpenBracket = keyPart.indexOf('[');\n  this.indexCloseBracket = keyPart.indexOf(']');\n  var keyHasParens = ~this.indexOpenParen && ~this.indexCloseParen && (this.indexOpenParen < this.indexCloseParen);\n  var keyHasBrackets = ~this.indexOpenBracket && ~this.indexCloseBracket && (this.indexOpenBracket < this.indexCloseBracket);\n  this.lastVal = val;\n  if (!keyHasParens && !keyHasBrackets) {\n    return this.handleKey(val, keyPart);\n  }\n  else if (keyHasParens && (!keyHasBrackets || this.indexOpenParen < this.indexOpenBracket)) {\n    return this.handleFunction(val, keyPart);\n  }\n  else {\n    return this.handleBrackets(val, keyPart);\n  }\n};\nKeypather.prototype.handleKey = function (val, key) {\n  if (this.create && !exists(val[key])) {\n    return this.createPath(val, key);\n  }\n  return (this.force && !exists(val)) ?\n      null : val[key];\n};\nKeypather.prototype.handleFunction = function (val, keyPart) {\n  var subKey = keyPart.slice(0, this.indexOpenParen), ctx;\n  var argsStr = keyPart.slice(this.indexOpenParen+1, this.indexCloseParen);\n  if (subKey) {\n    if (this.create && !exists(val[subKey])) {\n      throw new Error('KeypathSetError: cannot force create a path where a function does not exist');\n    }\n    ctx = val;\n    val = (this.force && (!exists(val) || !exists(val[subKey]))) ? null :\n      (this.indexOpenParen+1 === this.indexCloseParen) ?\n        val[subKey].call(ctx) :\n        val[subKey].apply(ctx, this.parseFunctionArgs(argsStr));\n  }\n  else {\n    ctx = this.lastVal || global;\n    val = (this.force && !exists(val)) ? null :\n      (this.indexOpenParen+1 === this.indexCloseParen) ? // maintain context (this.lastVal)\n        val.call(ctx) :\n        val.apply(ctx, this.parseFunctionArgs(argsStr));\n  }\n  keyPart = keyPart.slice(this.indexCloseParen+1); // update key, slice of function\n  return keyPart ? // if keypart left, back to back fn or brackets so recurse\n    this.getValue(val, keyPart) : val;\n};\nKeypather.prototype.handleBrackets = function (val, keyPart) {\n  var subKey = keyPart.slice(0, this.indexOpenBracket);\n  var bracketKey = keyPart.slice(this.indexOpenBracket+1, this.indexCloseBracket);\n  bracketKey = parseBracketKey(bracketKey);\n  if (!exists(bracketKey)) {\n    // invalid bracket structure, use key as is.\n    return this.handleKey(val, keyPart);\n  }\n  else {\n    if (subKey) {\n      if (this.create) {\n        if (!exists(val[subKey])) {\n          return this.createPath(val, subKey, bracketKey);\n        }\n        if (!exists(val[subKey][bracketKey])) {\n          return this.createPath(val[subKey], bracketKey);\n        }\n      }\n      val = (this.force && (!exists(val) || !exists(val[subKey]))) ?\n        null : val[subKey][bracketKey];\n    }\n    else {\n      if (this.create && !exists(val[bracketKey])) {\n        return this.createPath(val, bracketKey);\n      }\n      val = (this.force && !exists(val)) ?\n        null : val[bracketKey];\n    }\n    keyPart = keyPart.slice(this.indexCloseBracket+1); // update key, slice off bracket notation\n    return keyPart ? // if keypart left, back to back fn or brackets so recurse\n      this.getValue(val, keyPart) : val;\n  }\n};\nKeypather.prototype.getLastKey = function () {\n  var lastKeyPart = this.keypathSplit.pop();\n  var indexOpenBracket = lastKeyPart.lastIndexOf('[');\n  var indexCloseBracket = lastKeyPart.lastIndexOf(']');\n  var keyHasBrackets = ~indexOpenBracket && ~indexCloseBracket && (indexOpenBracket < indexCloseBracket);\n\n  if (keyHasBrackets) {\n    var bracketKey = lastKeyPart.slice(indexOpenBracket+1, indexCloseBracket);\n    bracketKey = parseBracketKey(bracketKey);\n    lastKeyPart = lastKeyPart.slice(0, indexOpenBracket);\n    this.keypathSplit.push(lastKeyPart);\n    return bracketKey;\n  }\n  else {\n    return lastKeyPart;\n  }\n};\nKeypather.prototype.getLastObj = function (args, setOperation) {\n  var val;\n  if (this.keypathSplit.length === 0) {\n    val = args[0];\n  }\n  else {\n    var getArgs = Array.prototype.slice.call(args);\n    getArgs[1] = this.keypathSplit.join('.');\n    val = setOperation ?\n      this._get.apply(this, getArgs):\n      this.get.apply(this, getArgs);\n  }\n  return val;\n};\nKeypather.prototype.createPath = function (val /*, keys */) {\n  var keys = Array.prototype.slice.call(arguments, 1);\n  return keys.reduce(function (val, key, i) {\n    if (typeof keys[i+1] === 'number') {\n      val[key] = [];\n    }\n    else {\n      val[key] = {};\n    }\n    return val[key];\n  }, val);\n};\nKeypather.prototype.parseFunctionArgs = function (argsStr) {\n  argsStr = argsStr.trim();\n  if (argsStr.length === 0) {\n    return [];\n  }\n  else if (argsStr==='%') {\n    return this.fnArgs.pop() || [];\n  }\n  var argsSplit = argsStr.split(',').map(trim);\n  var replacementArgs;\n  var self = this;\n  return argsSplit.map(function (arg) {\n    if (arg==='%') {\n      replacementArgs = replacementArgs || self.fnArgs.pop() || [];\n      arg = replacementArgs.pop();\n      return arg;\n    }\n    else {\n      var parsed = parseBracketKey(arg);\n      parsed = exists(parsed) ? parsed : keypather().get(self.obj, arg);\n      if (exists(parsed)) {\n        return parsed;\n      }\n      else {\n        throw new ReferenceError('KeypatherError: Invalid function argument \"'+arg+'\"');\n      }\n    }\n  });\n};\n\nfunction parseBracketKey (key) {\n  key = key.replace(/'/g, '\"'); // single quotes to double\n  try {\n    return JSON.parse(key);\n  }\n  catch (err) { //invalid\n    // console.error(err);\n    return;\n  }\n}\n\nfunction exists (val) {\n  return val !== null && val !== undefined;\n}\nfunction last (arrOrStr) {\n  return arrOrStr[arrOrStr.length - 1];\n}\nfunction makeArray (val) {\n  return Array.isArray(val) ? val : [val];\n}\nfunction trim (str) {\n  return str.trim();\n}\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"101/is-object\":\"/var/www/pravo/node_modules/101/is-object.js\"}],\"/var/www/pravo/node_modules/ractive-transitions-fade/dist/ractive-transitions-fade.js\":[function(require,module,exports){\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.Ractive.transitions.fade = factory()\n}(this, function () { 'use strict';\n\n\tvar ractive_transitions_fade = fade;\n\tvar DEFAULTS = {\n\t\tdelay: 0,\n\t\tduration: 300,\n\t\teasing: \"linear\"\n\t};\n\tfunction fade(t, params) {\n\t\tvar targetOpacity;\n\n\t\tparams = t.processParams(params, DEFAULTS);\n\n\t\tif (t.isIntro) {\n\t\t\ttargetOpacity = t.getStyle(\"opacity\");\n\t\t\tt.setStyle(\"opacity\", 0);\n\t\t} else {\n\t\t\ttargetOpacity = 0;\n\t\t}\n\n\t\tt.animateStyle(\"opacity\", targetOpacity, params).then(t.complete);\n\t}\n\n\treturn ractive_transitions_fade;\n\n}));\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-adfox/scripts/Adfox.js\":[function(require,module,exports){\n/*\n * Компонент adfox баннера\n *\n * Свойства компонента: uri - url ссылка инициализации баннера\n *\n */\n\nvar\n\n    _getId = () => {\n        return Math.random().toString(36).substring(7);\n    },\n\n    // подкючение шаблона\n    template = `{{#banner.content}}<div id=\"{{banner.id}}\" class=\"b-ads b-adfox__item\">{{{banner.content}}}</div>{{/banner.content}}`,\n\n    // Компонент\n    Component = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n\n                // получаем из тега\n                uri: null,\n                appear: null,\n                screentype: null,\n\n                // Активный баннер\n                banner: {\n                    id: null,\n                    content: null\n                }\n\n            }\n        },\n\n        oninit() {\n            RG.logger.debug('Adfox component init');\n        },\n\n        onrender() {\n\n            var self = this,\n                screentype = self.get('screentype'),\n                screentypeList = null;\n\n            // Если баннер должен показываться на определенном типе экрана\n            if (!!screentype) {\n\n                screentypeList = screentype.split(' ');\n\n                // Получаем информацию о экране\n                RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n                    // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n                    self.checkForScreenType(screentypeList, RG.ScreenViewer.getScreenInfo().type, self.prepareRun.bind(self));\n\n                    // Если информация обновилась\n                    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n                        // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n                        self.checkForScreenType(screentypeList, screenInfo.type, self.prepareRun.bind(self));\n                    });\n\n                });\n\n            } else {\n\n                // Подготовка баннера\n                self.prepareRun();\n\n            }\n\n        },\n\n        /*\n         * Методы\n         *\n         */\n\n        // Устанавливаем поведение по показу\n        setAppear(id, adfox) {\n\n            var self = this,\n                appear = null;\n\n            /*$(window).load(function(){\n\n                appear = new Waypoint({\n                    element: $(`#${id}`)[0],\n                    handler: function() {\n\n                        // Загружаем баннер\n                        self.loadBanner(adfox);\n\n                        RG.logger.log(`banner #${id}, appeared`);\n\n                        appear.disable();\n                    },\n                    offset: 'bottom-in-view'\n                });\n\n            });*/\n\n        },\n\n        // Подготовка uri\n        prepareUri() {\n\n            var uri = this.get('uri'),\n                adsUri = RG.meta.getPlatform();\n\n            uri = `${uri}&amp;dl=${adsUri}`;\n\n            this.set('uri', uri);\n        },\n\n        // Инициализация баннера\n        initBanner(uri, appear) {\n\n            var tgNS = window.ADFOX.RELOAD_CODE,\n\n                id = _getId(),\n                initData = null,\n\n                adfoxParam = null;\n\n            // Получаем баннер\n            // через метод AdFox - tgNS\n            initData = tgNS.initBanner(id, uri);\n\n            // Добавляем id\n            this.set('banner.id', id);\n\n            // Вставляем в элемент\n            // контент баннера\n            this.set('banner.content', initData.html);\n\n            // Формуируем объект адфокса\n            // для загрузки баннера\n            adfoxParam = {\n                    tgNS,\n                    initData,\n                    uri\n                };\n\n            RG.logger.log(adfoxParam);\n\n            // Проверяем на догрузку по скроллу\n            if (!appear) {\n\n                // Загружаем баннер\n                //tgNS.loadBanner(initData.pr1, uri, initData.sessionId);\n\n                this.loadBanner(adfoxParam);\n\n            } else {\n\n                // Инициализируем догрузку по скроллу\n                this.setAppear(id, adfoxParam);\n            }\n\n        },\n\n        // Загрузка баннера\n        loadBanner(adfox) {\n\n            // Загружаем баннер\n            adfox.tgNS.loadBanner(adfox.initData.pr1, adfox.uri, adfox.initData.sessionId);\n        },\n\n        // Проверка, подходит ли тип экрана\n        checkForScreenType(screentypeList, globalScreenType, callb) {\n\n            var self = this;\n\n            // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n            $.each(screentypeList, function(i, item){\n\n                // Инициализируем компонент\n                if (item === globalScreenType) {\n\n                    // Если баннера еще нет\n                    if (!self.get('banner.content')) {\n\n                        // Запускаем обратный вызов\n                        callb();\n\n                    }\n                }\n\n            });\n\n        },\n\n        // Предварительная подготовка перед инициализацией баннера\n        prepareRun() {\n\n            // Подготовка uri для баннера\n            this.prepareUri();\n\n            // Инициализация баннера\n            this.initBanner(this.get('uri'), this.get('appear'));\n        }\n\n    });\n\n// Экспортируем компонент\nmodule.exports = Component;\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-filters\\\":\\\"b-search-filters__body\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"is-show\\\":\\\"is-hide\\\"\"}},\" group\"]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_theme group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Темы\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"themes\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.themes\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_projects group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Специальные проекты\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"projects\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.projects\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_period group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Период\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_select b-field_select_select b-search-filters__item_select\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"select\",\"a\":{\"class\":\"b-field__select b-field__select_select\",\"value\":[{\"t\":2,\"r\":\"period\"}],\"type\":\"select\"},\"v\":{\"change\":{\"n\":\"setPeriod\",\"d\":[{\"t\":2,\"r\":\"period\"}]}},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\"value\"}]},\"f\":[{\"t\":2,\"r\":\"name\"}]}],\"r\":\"filters.periods\"}]}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-from b-custom-datepicker_input\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"c\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.from\"}]},\"o\":\"date-picker\"}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-to b-custom-datepicker_input\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"по\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.to\"}]},\"o\":\"date-picker\"}]}]}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__submit group\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit b-field_accent \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":\"Найти\",\"disabled\":[{\"t\":2,\"r\":\"loading\"}]},\"v\":{\"click\":\"find\"}}]}]},\" \"]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters_doc.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-filters b-search-filters_doc\\\":\\\"b-search-filters__body\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"is-show\\\":\\\"is-hide\\\"\"}},\" group\"]},\"f\":[\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-datepub group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Дата публикации\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-from b-custom-datepicker_input\"},\"v\":{\"click\":\"datepiker\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"c\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.from\"}]},\"o\":\"date-picker\"}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-to b-custom-datepicker_input\"},\"v\":{\"click\":\"datepiker\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"по\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.to\"}]},\"o\":\"date-picker\"}]}]}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-type group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Тип документа\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"doctype\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.doctype\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-department group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Ведомства\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"org\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.org\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-theme group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Тема документа\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"themes\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.themes\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__submit group\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":\"Применить\"},\"v\":{\"click\":\"find\"}}]}]},\" \"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__reset group\"},\"f\":[{\"t\":7,\"e\":\"a\",\"a\":{\"class\":\"b-link b-link_blue\"},\"f\":[\"Сбросить фильтр\"]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/SearchFilters.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar searchFilters = require('./config').searchFilters,\n    documentsFilters = require('./config').documentsFilters,\n\n    searchTemplate = require('../b-search-filters.ihtml'),\n    documentTemplate = require('../b-search-filters_doc.ihtml'),\n\n    SearchFilters = Ractive.extend({\n\n        template() {\n            return this.get('type') === 'search' ? searchTemplate : documentTemplate;\n        },\n\n        data() {\n            return {\n                paper: false,\n                period: 'any',\n                loading: false,\n\n                // Добавил Леха\n                hide: false // показать|скрыть блок\n            };\n        },\n\n        oninit() {\n\n            RG.logger.debug('SearchFilters');\n\n            let query = RG.query.get(),\n                resultFilters = {};\n\n            this.set('searchFilters', this.get('type') === 'search' ? {\n                    themes: [],\n                    materialTypes: [],\n                    projects: [],\n                    origin: null\n                } : {\n                    themes: [],\n                    doctype: [],\n                    materialTypes: ['doc'],\n                    statuses: [],\n                    org: []\n                });\n\n            switch(this.get('type')) {\n\n                case 'search':\n\n                    this.set('filters', searchFilters);\n                    break;\n\n                case 'document':\n\n                    this.set('filters', documentsFilters);\n                    break;\n            }\n\n            this.on({\n                'addFilter': this.addFilter.bind(this),\n                'setPeriod': this.setPeriod.bind(this),\n                'paper': this.setPaper.bind(this),\n                'find': RG.events.publish.bind(RG.events, 'search.find'),\n                'setOrigin': RG.events.publish.bind(RG.events, 'search.filters.update', this.get('searchFilters')),\n            });\n\n            if(query && !_.isEmpty(query)) {\n\n                if(query.projects) {\n                    resultFilters.projects = query.projects.split(',');\n                }\n\n                if(query.materialTypes) {\n                    resultFilters.materialTypes = query.materialTypes.split(',');\n                }\n\n                if(query.doctype) {\n                    resultFilters.doctype = query.doctype.split(',');\n                }\n\n                if(query.org) {\n                    resultFilters.org = query.org.split(',');\n                }\n\n                if(query.themes) {\n                    resultFilters.themes = query.themes.split(',');\n                }\n\n                if(query.statuses) {\n                    resultFilters.statuses = query.statuses.split(',');\n                }\n\n                if(_.isString(query.from) && _.isString(query.to)) {\n\n                    resultFilters.from = query.from;\n                    resultFilters.to = query.to;\n                }\n                \n                let filters = this.get('filters'),\n                    searchFilters = _.extend(this.get('searchFilters'), resultFilters);\n\n                this.set('searchFilters', searchFilters);\n\n                _.each(filters, (item, index) => {\n\n                    if(_.isArray(item)) {\n\n                        _.each(item, (filter) => {\n\n                            if(typeof searchFilters[index] != 'undefined' && searchFilters[index].indexOf(filter.value) !== -1) {\n                                filter.checked = true;\n                            }\n                        });\n                    }\n\n                });\n\n                this.set('filters', filters);\n\n                //this.emitFilters();\n            }\n\n            RG.events.subscribe('search.find', (topic) => {\n\n                this.set('loading', true);\n            });\n\n            RG.events.subscribe('search.result.show', (topic) => {\n\n                this.set('showResult',true);\n                this.set('loading', false);\n            });\n\n            RG.events.subscribe('date.picked', (topic, inst) => {\n\n                RG.logger.info(topic);\n\n                let from = inst.get('searchFilters.from') || moment().format('DD.MM.YYYY'),\n                    to = inst.get('searchFilters.to') || moment().format('DD.MM.YYYY');\n\n                from = moment(new Date(from.split('.').reverse().join('/')));\n                to = moment(new Date(to.split('.').reverse().join('/')));\n\n                if(from.diff(to) > 0) {\n\n                    to = from;\n                }\n\n                this.set('searchFilters.from', from.format('DD.MM.YYYY'));\n                this.set('searchFilters.to', to.format('DD.MM.YYYY'));\n\n                this.emitFilters();\n            });\n\n            // Леха добавил\n            let filterToggleTopic = this.get('filterTopic') || 'search.filters';\n\n            RG.logger.log(filterToggleTopic);\n\n            RG.events.subscribe(filterToggleTopic + '.show', (topic) => {\n\n                RG.logger.info(topic + 'user');\n\n                //this.set('show', isShow);\n                this.toggle('show');\n            });\n        },\n\n        addFilter(event, name) {\n\n            let checked = `${event.keypath}.checked`,\n                filters = this.get(`searchFilters.${name}`);\n\n            this.toggle(checked);\n\n            if(this.get(checked)) {\n\n                Array\n                    .prototype\n                    .push\n                    .call(filters, event.context.value);\n\n                this.set(`searchFilters.${name}`, filters);\n            } else {\n\n                Array\n                    .prototype\n                    .splice\n                    .call(filters, _.findIndex(event.context.value), 1);\n\n                this.set(`searchFilters.${name}`, filters);\n            }\n\n            this.emitFilters();\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        setPeriod(event, period) {\n\n            let from = null,\n                to = moment().format('DD.MM.YYYY');\n\n            switch(period) {\n\n                case 'any':\n\n                    break;\n                case 'today':\n\n                    from = moment();\n                    break;\n                case 'yestarday':\n\n                    from = moment().subtract(1, 'days');\n                    to = moment().subtract(1, 'days').format('DD.MM.YYYY');\n                    break;\n                case 'week':\n\n                    from = moment().subtract(1, 'weeks');\n                    break;\n                case 'month':\n\n                    from = moment().subtract(1, 'months');\n                    break;\n                case 'year':\n\n                    from = moment().subtract(1, 'years');\n                    break;\n            }\n\n            this.set('searchFilters.to', to);\n            this.set('searchFilters.from', from.format('DD.MM.YYYY'));\n\n            this.emitFilters();\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        setPaper(event) {\n\n            this.toggle('paper');\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        emitFilters() {\n\n            var data = _.objFilter(this.get('searchFilters'), elem => {\n\n                return !_.isEmpty(elem);\n            });\n\n            RG.events.publish('search.filters.update', data);\n        }\n    });\n\nmodule.exports = SearchFilters;\n},{\"../b-search-filters.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters.ihtml\",\"../b-search-filters_doc.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/b-search-filters_doc.ihtml\",\"./config\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/config.js\"}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/config.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 25.11.2015.\n */\n\n/**\n * Конфигурационный\n * @type {string}\n */\nvar Config = {\n\n        // Фильры страницы документов\n        documentsFilters: {\n            themes: [\n\n                {\n                    value: 'tema/gos',\n                    name: 'Власть'\n                },\n                {\n                    value: 'tema/ekonomika',\n                    name: 'Экономика'\n                },\n                {\n                    value: 'tema/regional',\n                    name: 'В регионах'\n                },\n                {\n                    value: 'tema/mir',\n                    name: 'В мире'\n                },\n                {\n                    value: 'tema/bezopasnost',\n                    name: 'Происшествия'\n                },\n                {\n                    value: 'tema/obshestvo',\n                    name: 'Общество'\n                },\n                {\n                    value: 'tema/sport',\n                    name: 'Спорт'\n                },\n                {\n                    value: 'tema/kultura',\n                    name: 'Культура'\n                }\n            ],\n            org: [\n                {\n                    name: 'Все ведомства',\n                    value: 'all',\n                    check: true,\n                    \n                },\n                {\n                    name: 'Президент',\n                    value: 'org/prezident',\n                    subDepartments: [\n                        {\n                            name: 'Администрация Президента',\n                            value: 'org/prezident/admin',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет Безопасности',\n                            value: 'org/prezident/sovbez',\n                            \n                            \n                        },\n                        {\n                            name: 'Государственный Совет',\n                            value: 'org/prezident/gossovet',\n                            \n                            \n                        },\n                        {\n                            name: 'Полпреды Президента в федеральных округах',\n                            value: 'org/prezident/polpred',\n                            \n                            \n                        },\n                        {\n                            name: 'Главное управление специальных программ',\n                            value: 'org/prezident/gusp',\n                            \n                            \n                        },\n                        {\n                            name: 'Общественная палата',\n                            value: 'org/prezident/palata',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет по правам человека',\n                            value: 'org/prezident/sovet',\n                            \n                            \n                        },\n                        {\n                            name: 'Уполномоченный по правам ребенка',\n                            value: 'org/prezident/detombudsmen',\n                            \n                            \n                        },\n                        {\n                            name: 'Уполномоченный по правам человека',\n                            value: 'org/prezident/prava',\n                            \n                            \n                        },\n                        {\n                            name: 'Управление делами Президента',\n                            value: 'org/prezident/upravdelami',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Законодательная власть',\n                    value: 'org/zakon',\n                    subDepartments: [\n                        {\n                            name: 'Госдума',\n                            value: 'org/zakon/gosduma',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет Федерации',\n                            value: 'org/zakon/sovfed',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Правительство',\n                    value: 'org/pravitelstvo',\n                    subDepartments: [\n                        {\n                            name: 'Председатель Правительства',\n                            value: 'org/pravitelstvo/premier',\n                            \n                            \n                        },\n                        {\n                            name: 'Вице-премьеры',\n                            value: 'org/pravitelstvo/vicepremijery',\n                            \n                            \n                        },\n                        {\n                            name: 'Президиум',\n                            value: 'org/pravitelstvo/prezidium',\n                            \n                            \n                        },\n                        {\n                            name: 'Аппарат Правительства',\n                            value: 'org/pravitelstvo/apparat',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство иностранных дел',\n                            value: 'org/pravitelstvo/mid',\n                            \n                            \n                        },\n                        {\n                            name: 'Государственная фельдъегерская служба (ГФС)',\n                            value: 'org/pravitelstvo/feldegeri',\n                            \n                            \n                        },\n                        {\n                            name: 'Служба внешней разведки (СВР)',\n                            value: 'org/pravitelstvo/razvedka',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба охраны (ФСО)',\n                            value: 'org/pravitelstvo/fso',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по финансовому мониторингу (Росфинмониторинг)',\n                            value: 'org/pravitelstvo/fedmonitoring',\n                            \n                            \n                        },\n                        {\n                            name: 'Генеральная прокуратура',\n                            value: 'org/pravitelstvo/genprok',\n                            \n                            \n                        },\n                        {\n                            name: 'Следственный комитет (СК)',\n                            value: 'org/pravitelstvo/sledkom',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство культуры',\n                            value: 'org/pravitelstvo/minkultmk',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по делам Крыма',\n                            value: 'org/pravitelstvo/minkrym',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по делам Северного Кавказа',\n                            value: 'org/pravitelstvo/minsevkavkaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по развитию Дальнего Востока',\n                            value: 'org/pravitelstvo/daliniy',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство спорта',\n                            value: 'org/pravitelstvo/minsport',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство строительства и жилищно-коммунального хозяйства (Минстрой)',\n                            value: 'org/pravitelstvo/stroitelstvozhkh',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство транспорта',\n                            value: 'org/pravitelstvo/mintranssvyaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство труда и социальной защиты',\n                            value: 'org/pravitelstvo/trud',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство энергетики',\n                            value: 'org/pravitelstvo/minenergo',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная антимонопольная служба (ФАС)',\n                            value: 'org/pravitelstvo/fedantimonopol',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба государственной статистики (Росстат)',\n                            value: 'org/pravitelstvo/statistika',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная миграционная служба (ФМС)',\n                            value: 'org/pravitelstvo/migracia',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по надзору в сфере защиты прав потребителей и благополучия человека (Роспотребнадзор)',\n                            value: 'org/pravitelstvo/potrebnadzor',\n                            \n                            \n                        },\n                        {\n                            name: 'Рособоронзаказ',\n                            value: 'org/pravitelstvo/oboronzakaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по регулированию алкогольного рынка (Росалкогольрегулирование)',\n                            value: 'org/pravitelstvo/posalk',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по финансовым рынкам (ФСФР)',\n                            value: 'org/pravitelstvo/fktsb',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по экологическому, технологическому и атомному надзору (Ростехнадзор)',\n                            value: 'org/pravitelstvo/atom',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное космическое агентство (Роскосмос)',\n                            value: 'org/pravitelstvo/kosmos',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное агентство по обустройству государственной границы (Росграница)',\n                            value: 'org/pravitelstvo/rosgranica',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное агентство научных организаций (ФАНО)',\n                            value: 'org/pravitelstvo/fano',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство внутренних дел',\n                            value: 'org/pravitelstvo/mvd',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по чрезвычайным ситуациям',\n                            value: 'org/pravitelstvo/emercom',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство обороны',\n                            value: 'org/pravitelstvo/minoboroni',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство юстиции',\n                            value: 'org/pravitelstvo/minyust',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба безопасности (ФСБ)',\n                            value: 'org/pravitelstvo/fsb',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по контролю за оборотом наркотиков (ФСКН)',\n                            value: 'org/pravitelstvo/narkomitet',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство здравоохранения и социального развития',\n                            value: 'org/pravitelstvo/minzdravsoc',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство образования и науки',\n                            value: 'org/pravitelstvo/minobrnauka',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство природных ресурсов и экологии',\n                            value: 'org/pravitelstvo/minprirody',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство промышленности и торговли',\n                            value: 'org/pravitelstvo/minpromenergo',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство регионального развития',\n                            value: 'org/pravitelstvo/minreg',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство связи и массовых коммуникаций',\n                            value: 'org/pravitelstvo/svyazj',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство сельского хозяйства',\n                            value: 'org/pravitelstvo/minselhoz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство финансов',\n                            value: 'org/pravitelstvo/minfin',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство экономического развития',\n                            value: 'org/pravitelstvo/minekonom',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная таможенная служба (ФТС)',\n                            value: 'org/pravitelstvo/fts',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по тарифам (ФСТ)',\n                            value: 'org/pravitelstvo/slujba-tarif',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Судебная власть',\n                    value: 'org/sudvlast',\n                    subDepartments: [\n                        {\n                            name: 'Конституционный суд',\n                            value: 'org/sudvlast/konstsud',\n                            \n                            \n                        },\n                        {\n                            name: 'Верховный суд',\n                            value: 'org/sudvlast/sudobshyurisdik/verhsud',\n                            \n                            \n                        },\n                        {\n                            name: 'Суды общей юрисдикции',\n                            value: 'org/sudvlast/sudobshyurisdik',\n                            \n                            \n                        },\n                        {\n                            name: 'Военные суды',\n                            value: 'org/sudvlast/voensud',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Госфонды и контрольные органы',\n                    value: 'org/goskontrol',\n                    subDepartments: [\n                        {\n                            name: 'Агентство стратегических инициатив',\n                            value: 'org/goskontrol/asi',\n                        },\n                        {\n                            name: 'Российский фонд прямых инвестиций',\n                            value: 'org/goskontrol/investicii',\n\n                        },\n                        {\n                            name: 'Российский фонд федерального имущества (РФФИ)',\n                            value: 'org/goskontrol/gosfond',\n\n                        },\n                        {\n                            name: 'Счетная палата',\n                            value: 'org/goskontrol/schet',\n\n                        },\n                        {\n                            name: 'Пенсионный фонд',\n                            value: 'org/goskontrol/pensii',\n                        },\n                        {\n                            name: 'Федеральный фонд обязательного медицинского страхования',\n                            value: 'org/goskontrol/ffomc',\n                        },\n                        {\n                            name: 'Фонд социального страхования',\n                            value: 'org/goskontrol/sotcial',\n                        },\n                        {\n                            name: 'Центральная избирательная комиссия',\n                            value: 'org/goskontrol/cik',\n                        },\n                        {\n                            name: 'Центральный банк России',\n                            value: 'org/goskontrol/zbrf',\n                        }\n                    ]\n                }\n            ],\n            doctype: [\n                {\n                    name: 'Все типы',\n                    value: 'any',\n                },\n                {\n                    name: 'Федеральный закон',\n                    value: 'fedzakon',\n                },\n                {\n                    name: 'Постановление',\n                    value: 'postanov',\n                },\n                {\n                    name: 'Указ',\n                    value: 'ukaz',\n\n                },\n                {\n                    name: 'Приказ',\n                    value: 'prikaz',\n                },\n                {\n                    name: 'Сообщение',\n                    value: 'soobshenie',\n                },\n                {\n                    name: 'Распоряжение',\n                    value: 'raspr',\n\n                },\n                {\n                    name: 'Законопроект',\n                    value: 'zakonoproekt',\n                }\n            ],\n            statuses: [\n                {\n                    value: 'publishing',\n                    name: 'Опубликован'\n                },\n                {\n                    value: 'effective',\n                    name: 'Вступает в силу'\n                },\n                {\n                    value: 'lost',\n                    name: 'Утратил силу'\n                },\n            ]\n        },\n\n        // Фильтры страницы поиска\n        searchFilters: {\n            themes: [\n\n                {\n                    value: 'tema/gos',\n                    name: 'Власть'\n                },\n                {\n                    value: 'tema/ekonomika',\n                    name: 'Экономика'\n                },\n                {\n                    value: 'tema/regional',\n                    name: 'В регионах'\n                },\n                {\n                    value: 'tema/mir',\n                    name: 'В мире'\n                },\n                {\n                    value: 'tema/bezopasnost',\n                    name: 'Происшествия'\n                },\n                {\n                    value: 'tema/obshestvo',\n                    name: 'Общество'\n                },\n                {\n                    value: 'tema/sport',\n                    name: 'Спорт'\n                },\n                {\n                    value: 'tema/kultura',\n                    name: 'Культура'\n                }\n            ],\n            materialTypes: [\n\n                {\n                    value: 'art',\n                    name: 'Новости'\n                },\n                {\n                    value: 'dok',\n                    name: 'Документы'\n                },\n                {\n                    value: 'fot',\n                    name: 'Фоторепортажи'\n                },\n            ],\n\n            origins: [\n\n                {\n                    value: 'rg',\n                    name: 'Российская газета'\n                },\n                {\n                    value: 'rodina',\n                    name: 'Родина'\n                },\n            ],\n\n            projects: [\n\n                {\n                    value: 'sila',\n                    name: 'Русское оружие'\n                },\n                {\n                    value: 'digital',\n                    name: 'Digital'\n                },\n                {\n                    value: 'kino',\n                    name: 'Кинократия'\n                }\n            ],\n\n            periods: [\n                {\n                    value: 'any',\n                    name: 'Любой'\n                },\n                {\n                    value: 'today',\n                    name: 'За сегодня'\n                },\n                {\n                    value: 'yestarday',\n                    name: 'За вчера'\n                },\n                {\n                    value: 'week',\n                    name: 'За неделю'\n                },\n                {\n                    value: 'month',\n                    name: 'За месяц'\n                },\n                {\n                    value: 'year',\n                    name: 'За год'\n                }\n            ]\n\n        }\n    };\n\nmodule.exports = Config;\n\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/b-search-bar.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-bar\"},\"f\":[{\"t\":7,\"e\":\"form\",\"a\":{\"class\":\"b-form b-search-bar__form\"},\"f\":[{\"t\":7,\"e\":\"fieldset\",\"a\":{\"class\":\"b-form__fieldset\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"id\":\"searchInput\",\"value\":[{\"t\":2,\"r\":\"keywords\"}]}}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit b-field_accent \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"i\",\"a\":{\"class\":\"b-icon b-icon_type_search\",\"type\":\"submit\",\"value\":\"Найти\",\"disabled\":[{\"t\":2,\"r\":\"loading\"}],\"twoway\":\"false\"},\"v\":{\"click\":\"find\"}}]}]},\" \"]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/scripts/SearchBar.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar template = require('../b-search-bar.ihtml'),\n    SearchBar = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n                keywords: '',\n                type: null,\n\n            };\n        },\n\n        oninit() {\n            RG.logger.debug('SearchBar');\n\n            this.on({\n                'find': event => {\n\n/*                    switch(this.get('type')) {\n\n                        case 'redirect':\n\n                            let keywords = this.get('keywords');\n\n                            window.location = `${window.location.origin}/search/?keywords=${keywords}`;\n\n                            break;\n\n                        default:\n                            RG.events.publish('search.find');\n                    }*/\n\n                    RG.events.publish('search.bar.find');\n\n                    event.original.preventDefault();\n                    event.original.stopPropagation();\n                }\n            });\n\n            this.observe('keywords', (nVal, oVal) => {\n\n                if(!_.isEmpty(nVal.trim()) && !_.isEmpty(oVal.trim()) && nVal.trim() !== oVal.trim()) {\n\n                    RG.events.publish('search.filters.update', {\n                        keywords: this.get('keywords')\n                    });\n                }\n            });\n\n            RG.events.subscribe('search.keywords', (topic, sugestion) => {\n\n                let word = sugestion || '';\n                \n                this.set('keywords', word);\n                //RG.events.publish('search.find');\n            });\n\n            RG.events.subscribe('search.find', (topic) => {\n\n                this.set('loading', true);\n            });\n\n            RG.events.subscribe('search.result.show', (topic) => {\n\n                this.set('loading', false);\n            });\n\n            RG.events.subscribe('search.bar.find', (topic) => {\n\n                RG.logger.info('search.bar.find');\n\n                switch(this.get('type')) {\n\n                    case 'redirect':\n\n                        let keywords = this.get('keywords');\n\n                        window.location = encodeURI(`${window.location.origin}/search/?keywords=${keywords}`);\n\n                        break;\n\n                    default:\n                        RG.events.publish('search.find');\n                }\n            });\n        },\n\n        onrender() {\n\n            this.nodes.searchInput.focus();\n        }\n    });\n\nmodule.exports = SearchBar;\n},{\"../b-search-bar.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/b-search-bar.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/scripts/SearchInfo.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar\n\n    template = require('../search-info.ihtml'),\n\n    SearchInfo = Ractive.extend({\n        \n        template,\n\n        data() {\n            return {\n                sort: false,\n            };\n        },\n\n        oninit() {\n            RG.logger.debug('SearchInfo');\n\n            this.on({\n\n                sort: event => {\n\n                    let sort = this.get('sort') ? 'date' : 'relevant';\n\n                    RG.events.publish('search.sort', sort);\n\n                    this.toggle('sort');\n\n                    event.original.preventDefault();\n                    event.original.stopPropagation();\n                }\n            });\n\n            RG.events.subscribe('search.result.show', (topic, data) => {\n\n                this.set('showResult', true);\n                this.set('materials', data.count);\n            });\n        }\n    });\n\nmodule.exports = SearchInfo;\n},{\"../search-info.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/search-info.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/search-info.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-info\\\":\\\"b-search-info__body\\\"\"}},\" group\"]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-info__sort\"},\"f\":[\"Сортировать: \",{\"t\":7,\"e\":\"a\",\"a\":{\"class\":\"b-search-info__link b-link b-link_blue\",\"href\":\"#\"},\"v\":{\"click\":\"sort\"},\"f\":[{\"t\":2,\"x\":{\"r\":[\"sort\"],\"s\":\"_0?\\\"По алфавиту\\\":\\\"По рейтингу\\\"\"}}]}]}]}],\"r\":\"showResult\"}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-share/scripts/share.js\":[function(require,module,exports){\n/*\n * Блок шаринга через социальные сети (использует yandex share https://tech.yandex.ru/share/)\n *\n * Принцип работы:\n *  В js коде получаем компонент new Ractive.components.share\n *  В ractive шаблоне это компонент <share options={{ Опции модуля yandex share }} owner={{ Топик издателя }} />\n *  По топику издателя - owner мы вызываем событие обновления данных для шаринга\n *\n */\n\nmodule.exports = Ractive.extend({\n\n\t// Шаблон\n\ttemplate: `<div class=\"b-share__body {{ classes }}\">\n                    {{#if content }}<div class=\"b-share__content b-share__item\">{{{content}}}</div>{{/if}}\n                    <div class=\"b-share_ya-share b-share__item\" decorator=\"yandexShare\"></div>\n                </div>`,\n\n\tdecorators: {\n\t\tyandexShare(node) {\n\n            var\n                // Блок яндекса\n                Ya = window.Ya || null,\n                \n                // Алиас на модуль\n                share = null,\n\n                // Стандартные настройки модуля\n                options = {\n                    theme: {\n                        services: 'facebook,twitter,vkontakte,odnoklassniki,gplus',\n                        lang: 'ru',\n                        size: 's'\n                    }\n                };\n\n            // Устанавливаем опции\n            options = $.extend(true, {}, options, this.get('options'));\n\n            // Инициализируем шаринг\n            if (!!Ya && !!Ya.share2) {\n                share = Ya.share2(node, options);\n            }\n\n            // Сохраняем в данные\n            this.set('share', share);\n\n            return {\n                teardown: () => {\n                    $(node).destroy();\n                }\n            };\n\n        }\n\t},\n\n\t// Данные\n    data: () => {\n    \treturn {\n\n            // Топик подписчика, от которого\n            // получаем данные для шеринга\n            owner: null,\n\n            // Настройки yashare\n            options: null,\n\n            // Кастомный текст в блоке\n            // может быть и с тегами\n            content: null,\n\n            // Модификаторы модуля\n            classes: 'b-share_horizontal'\n    \t}\n    },\n\n    /*\n     * Методы\n     *\n     */\n\n    oninit() {},\n\n    onrender() {\n\n        RG.events.subscribe(this.get('owner'), (topic, data) => {\n\n            if (!!data) {\n\n                try {\n\n                    // ОБновляем данные для шаринга\n                    this.get('share').updateContent({\n                        //url: data.url.replace('beta', 'www') || '',\n                        url: data.url || '',\n                        title: data.title || '',\n                        description: data.description || '',\n                        image: data.image || ''\n                    });\n\n                } catch(error) {\n\n                    RG.logger.error('Share не может обновить данные');\n                    RG.logger.error(error);\n                }\n            }\n\n        });\n    }\n\n});\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/scripts/Tabs.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 10.12.2015.\n */\n\nvar template = require('../tabs.ihtml'), // подкючение шаблона\n\n    Tabs = Ractive.extend({\n\n        template,\n\n        data: () => {\n            return {\n                selected: 0,\n                items: [],\n            }\n        },\n\n        oninit() {\n\n            RG.logger.debug('Tabs');\n        },\n\n        onrender() {\n\n            /**\n             * Получение позиции выбраного элемента\n             */\n            var index = this.get('selected'),\n                tab = this.findAll('.b-tabs__item')[index],\n\n                selectHandler = _.debounce((event, item) => {\n\n                    let items = this.get('items'),\n                        index = _.findIndex(items, item),\n                        topic = item.topic || 'tab.click.${index}',\n                        data = item.data || null;\n\n                    this.set('selected', index);\n\n                    this.setPosition(event.node);\n\n                    /**\n                     * Вызов глобального события\n                     */\n                    RG.events.publish(topic, data);\n                }, 500);\n\n            /**\n             * Установка ползунка на начальную позицию\n             */\n            this.setPosition(tab);\n\n            /**\n             * Инициализация нажатия на элемент\n             */\n\n            this.on('select', selectHandler);\n\n            RG.events.subscribe('tab.selected.set', (topic, element) => {\n\n                RG.logger.info(topic);\n\n                this.setPosition(element);\n            });\n        },\n\n        /**\n         * Установка позиции ползунка\n         */\n        setPosition(element) {\n\n            if(element) {\n\n                var $element = $(element),\n                    left = $element.position().left,\n                    width = $element.width();\n\n                this.set('left', left);\n                this.set('width', width);\n            }\n        }\n    });\n\nmodule.exports = Tabs;\n},{\"../tabs.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/tabs.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/tabs.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-tabs\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-tabs__item b-tabs__item_underline\",\"style\":[\"left: \",{\"t\":2,\"r\":\"left\"},\"px; width: \",{\"t\":2,\"r\":\"width\"},\"px;\"]}},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-tabs__item \",{\"t\":2,\"x\":{\"r\":[\"item.class\",\"i\"],\"s\":\"_0?_0:\\\"b-tab__item_\\\"+_1\"}}]},\"v\":{\"click\":{\"n\":\"select\",\"d\":[{\"t\":2,\"r\":\".\"}]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-tabs__title \",{\"t\":2,\"x\":{\"r\":[\"i\",\"selected\"],\"s\":\"_0===_1?\\\"b-tab__title_selected\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":3,\"r\":\"title\"}]}]}],\"i\":\"i\",\"r\":\"items\"}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-yadirect/scripts/Yadirect.js\":[function(require,module,exports){\n/*\n * Компонент директа\n *\n * Свойства компонента\n *\n\n items = [\n    // объекты по разрешениям\n    {\n        // Разрешение на котором показываем\n        resolution: { desktop: true },\n        \n        // Блоки директа, которые показываем в ротации\n        blocks: [\n            id: ID блока,\n            rate: ПРИОРИТЕТ РОТАЦИИ,\n            yaDirect: ОБЪЕКТ НАСТРОЕКТ ДИРЕКТА\n        ]\n    }\n ]\n \n *\n */\n\nvar \n\n    // Выбрать по приоритету   \n    // @list Array - список элементов\n    // @rateMap Array - карта весов  \n    _getRandomItem = (list, rateMap) => {\n\n        var randomNum = null,\n            weightSum = 0,\n\n            rateList = rateMap.list,\n            iterator = 0,\n            listLength = list.length;\n\n        // Получаем случайное число в пределах\n        // наших баннеров\n        randomNum = rand(0, rateMap.fullRate);\n         \n        // Алгоритм\n        for (; iterator < listLength; iterator++) {\n\n            weightSum += rateList[iterator];\n\n            // Преобразуем в число\n            weightSum = +weightSum;\n             \n            if (randomNum <= weightSum) {\n                return list[iterator];\n            }\n\n        }\n         \n        // Выдать рандомное число от и до\n        function rand(min, max) {\n            return Math.random() * (max - min) + min;\n        };\n    },\n    \n    // Получить STAT_ID\n    _getStatId = (param) => {\n\n        var statId = null,\n            screenInfoMap = {\n                mobile: 1,\n                tablet: 2,\n                tabletLandscape: 3,\n                desktop: 4,\n                desktopFull: 5\n            };\n\n        /*\n         *  ID Проекта (10-99) (Основной сайт - 10) ID места (10-99) ID Эксперимента (1-9)  Разрешение экрана (1-5)\n            \n            Пользовательское разрешение экрана:\n            1 - Телефон\n            2 - Планшет\n            3 - Планшет(ландшат)\n            4 - Монитор\n            5 - Широкоформатный\n            \n            Например: 11 5 2 15\n            \n            Максимальное возможное число 16 777 215 https://yandex.ru/support/partner/products-direct/variables-description.xml\n        *\n        */\n\n        statId = [\n            param.project, // ID Проекта берем из шаблона компонента\n            param.place, // площадка, берем из шаблона компонента\n            param.id, // ID эксперимента, берем из шаблона компонента\n            screenInfoMap[param.screenInfo.type], // разрешение экрана\n        ];\n\n        return statId.join('');\n\n    },\n\n    //template = `{{#items}}<div id=\"{{containerId}}\" class=\"ya-direct-root ya-direct-{{yaDirect.type}}\"></div>{{/items}}`, // подкючение шаблона\n    template = `<div id=\"{{banner.containerId}}\" class=\"ya-direct-root ya-direct-{{banner.yaDirect.type}}\"></div>`, // подкючение шаблона\n\n    // Компонент\n    Yadirect = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n                project: null, // получаем из тега\n                place: null, // получаем из тега\n                items: null, // получаем из тега\n\n                screenInfo: null\n            }\n        },\n\n        oninit() {\n            RG.logger.debug('Yadirect component init');\n        },\n\n        onrender() {\n\n            var self = this;\n\n            // Получаем информацию о экране\n            RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n                self.set('screenInfo', RG.ScreenViewer.getScreenInfo());\n\n                // Инициализируем директ\n                self.initDirect();\n\n                // Если информация обновилась\n                RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n                    self.set('screenInfo', RG.ScreenViewer.getScreenInfo());\n\n                    // Инициализируем директ\n                    self.initDirect();\n                });\n\n            });\n        },\n\n        /*\n         * Методы\n         *\n         */\n\n        // Инициализация компонента баннера\n        initDirect() {\n\n            var self = this,\n                items = this.get('items'),\n                directPlaceId = '29789',\n                screenInfo = self.get('screenInfo'),\n                resolution = null, // разрешение, при котором показываем\n\n                banner = null, // Выбранный баннер\n                containerId = null, // ID контейнера\n                prop = null; // Свойства идут в директ\n\n            // Фильтруем элементы по подходящему разрешению\n            $.each(items, function(index, item){\n\n                var resolution = item.resolution,\n                    blocks = null;\n\n                // Если в карте разрешений, текущее разрешение совпадает, то выводим\n                if (!!resolution[screenInfo.type]) {\n\n                    // Находим баннеры\n                    blocks = item.blocks;\n\n                    // Выбираем баннер\n                    banner = _getRandomItem(blocks, self.getRateMap(blocks));\n\n                    // Свойства идут в директ\n                    prop = banner.yaDirect;\n\n                    // ID контенера, куда инициализируем директ (совпадает с тем, что в шаблоне)\n                    containerId = `${prop.ad_format}_${prop.type}_${banner.id}_${Math.random().toString(36).substring(7)}`;\n\n                    // Устанавливаем свойства для шаблона\n                    self.set('banner.containerId', containerId);\n                    self.set('banner.yaDirect', prop);\n\n                    // Задаем пространство имен\n                    window.yandex_context_callbacks = window.yandex_context_callbacks || [];\n\n                    // Дополняем параметры непонятно, что с этим делаем\n                    // Stat_id\n                    prop.stat_id = _getStatId({\n                        project: self.get('project'),\n                        screenInfo: screenInfo,\n                        id: banner.id,\n                        place: self.get('place'),\n                    });\n\n                    RG.logger.log(prop);\n\n                    // Инициализируем баннер\n                    window.yandex_context_callbacks.push(function() {\n                        Ya.Direct.insertInto(directPlaceId, containerId, prop);\n                    });\n\n                    // Инициализируем библиотеку\n                    self.loadLib();\n\n                } else {\n\n                    $('#' + self.get('banner.containerId')).empty();\n                }\n\n            });\n\n        },\n\n        // Загрузка библиотеки\n        loadLib() {\n\n            var libSrc = '//an.yandex.ru/system/context.js';\n\n            // Грузим библиотеку\n            $.getScript(libSrc);\n\n        },\n\n        // Получаем сумму всех весов\n        // которая будет границей диапазона\n        getRateMap(blocks) {\n\n            var map = {};\n\n            // Заполняем карту весов\n            map.fullRate = 0;\n            map.list = [];\n\n            // Получаем сумму\n            $.each(blocks, function(index, banner) {\n\n                var rate = banner.rate;\n\n                map.list.push(rate);\n                map.fullRate += rate;\n            });\n\n            return map;\n        },\n\n    });\n\n// Экспортируем компонент\nmodule.exports = Yadirect;\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/b-button.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-button\"},\"f\":[{\"t\":7,\"e\":\"button\",\"a\":{\"class\":\"b-button__button b-field__input_submit\"},\"v\":{\"click\":\"press\"},\"f\":[{\"t\":2,\"r\":\"txt\"}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/scripts/Button.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 07.03.2016.\n */\n\nvar template = require('../b-button.ihtml'),\n\n    Button = Ractive.extend({\n\n        template,\n\n        oninit() {\n\n            this.on('press', event => {\n\n                let context = this.get(),\n                    topic = this.get('topic');\n\n                RG.events.publish(topic, context);\n\n                event.original.preventDefault();\n            });\n        }\n    });\n\nmodule.exports = Button;\n\n},{\"../b-button.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/b-button.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/b-checkbox.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_checkbox \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_input_checkbox_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"v\":{\"click\":\"toggle\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":3,\"r\":\"label\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"value\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/scripts/Checkbox.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 29.02.2016.\n */\n\nvar \n    \n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-checkbox.ihtml'),\n\n    Checkbox = Ractive.extend(\n\n        FormTools,\n\n        {\n            \n            template,\n\n            data() {\n                return {\n                    name: 'checkbox',\n                    highlight: true,\n                    highlighted: false,\n                }\n            },\n\n            oninit() {\n\n                let form = this.get('form'),\n                    name = this.get('name');\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n                });\n\n                this.on('toggle', (e) => {\n\n                    this.toggle('value')\n\n                    RG.events.publish(`form.${form}.update.${name}`, this.get('value'));\n\n                    e.original.preventDefault();\n                });\n            },\n\n            reset() {\n\n                this.set('value', false);\n            },\n\n            check() {\n                \n                // Если поле обязательное, проверяем\n                // выбрано ли оно\n                if(this.get('required')) {\n                    return this.get('value');\n                }\n\n                return true;\n            }\n\n        }\n    );\n\nmodule.exports = Checkbox;\n\n},{\"../../b-form/scripts/FormTools\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js\",\"../b-checkbox.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/b-checkbox.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-email/scripts/Email.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar Input = require('../../b-input/scripts/Input'),\n    Email = Input.extend({\n\n        data() {\n            return {\n                name: 'email',\n                type: 'email',\n                placeholder: 'e-mail',\n                format: 'email',\n                label: ''\n            }\n        }\n    });\n\nmodule.exports = Email;\n\n},{\"../../b-input/scripts/Input\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/scripts/Input.js\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/b-form-message.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-form-message b-form-message\",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"_show\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-form-message__content\"},\"f\":[{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-form-message__title\"},\"f\":[{\"t\":3,\"r\":\"title\"}]},\" \",{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-form-message__text\"},\"f\":[{\"t\":3,\"r\":\"txt\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-form-message__button\"},\"f\":[{\"t\":7,\"e\":\"rg-button\",\"a\":{\"txt\":[{\"t\":2,\"r\":\"button\"}],\"topic\":[\"'form.\",{\"t\":2,\"r\":\"form\"},\".message.hide'\"]}}]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/scripts/FormMessage.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 07.03.2016.\n */\n\nvar Button = require('../../b-button/scripts/Button.js'),\n    template = require('../b-form-message.ihtml'),\n\n    FormMessage = Ractive.extend({\n\n        template,\n\n        components: {\n            'rg-button': Button\n        },\n\n        oninit() {\n\n            let form = this.get('form');\n        \n            RG.events.subscribe(`form.${form}.message.show`, topic => {\n\n                RG.logger.info(topic);\n\n                this.set('show', true);\n            }); \n\n            RG.events.subscribe(`form.${form}.message.hide`, topic => {\n                \n                RG.logger.info(topic);\n                \n                this.set('show', false);\n            });\n        }\n    });\n\nmodule.exports = FormMessage;\n\n},{\"../../b-button/scripts/Button.js\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-button/scripts/Button.js\",\"../b-form-message.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/b-form-message.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/Form.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 27.02.2016.\n */\n\nclass Form {\n\n    constructor(options) {\n\n        RG.logger.debug('Form');\n\n        this.el = options.el;\n        this.options = options.data || {};\n        this.template = options.data.template;\n        this.formData = {};\n\n        let components = [];\n\n        if(!_.isEmpty(this.options.tmpl)) {\n\n            this.template = this._getTemplate(this.options.tmpl);\n        }\n\n        if(!_.isEmpty(this.template)) {\n\n            return this.renderForm();\n        } else {\n\n            components = RG.parser.findComponents(this.el);\n\n            this.registerEvents(components);\n            this.fields = this.renderComponents(components);\n        }\n    }\n\n    updateFormData(topic, value) {\n\n        RG.logger.info(topic);\n\n        let name = topic.split('.').pop();\n\n        this.formData[name] = value;\n    }\n\n    setFormData(data) {\n\n        if(!_.isEmpty(data) && this.fields.length) {\n\n            _.each(data, (value, name) => {\n\n                RG.events.publish(`form.${this.options.name}.set.${name}`, value);\n            });\n        }\n    }\n\n    getFormData() {\n\n        let data = {};\n\n        if(this.fields.length) {\n\n            _.each(this.fields, field => {\n\n                let name = field.get('name'),\n                    value = field.get('value');\n\n                if(!_.isEmpty(name) && value) {\n\n                    data[name] = value;\n                }\n            });\n        }\n\n        data.form_id = parseInt(this.options.id);\n        data.article_id = RG.meta.getMaterial() || 0;\n        data.user_id = RG.session.getUserData().id || 0;\n\n        return data;\n    }\n\n    renderForm() {\n\n        this.form = new Ractive({\n            data: this.options,\n            el: this.el,\n            template: this.template\n        });\n\n        let components = this.form.findAllComponents();\n\n        this.fields = _.filter(components, component => {\n\n            return component.form === this.name;\n        });\n\n        RG.forms[this.options.name] = this;\n\n        return this.form;\n    }\n\n    renderComponents(items) {\n\n        let fields = [];\n\n        if(items.length) {\n\n            _.each(items, component => {\n\n                let instances = RG.parser.render(component.tag);\n\n                fields = fields.concat(instances);\n            });\n        }\n\n        return fields;\n    }\n\n    registerEvents(items) {\n\n        RG.events.subscribe(`form.${this.options.name}.submit`, this._submit.bind(this));\n\n        _.each(items, item => {\n\n            RG.events.subscribe(`form.${this.options.name}.update.${item.data.name}`, this.updateFormData.bind(this));\n        });\n    }\n\n    validate() {\n\n        var fields = this.fields,\n            length = this.fields.length,\n            valid = true;\n\n        if(length) {\n\n            for(let i = 0; i < length; i++) {\n\n                if(_.isFunction(fields[i].validate)) {\n\n                    if(!fields[i].validate(valid)) {\n                        valid = false;\n                    }\n                }\n            }\n        }\n\n        return valid;\n    }\n\n    _getTemplate(url) {\n\n        let template = '';\n\n        $.ajax({\n            url,\n            success: tmpl => {\n\n                template = tmpl;\n            },\n            async: false\n        });\n\n        return template;\n    }\n\n    _submit(topic, context) {\n\n        RG.logger.info(topic);\n\n        $('.js-ask-submit').addClass('disabled');\n\n        if(context.form === this.options.name) {\n\n            if(this.validate()) {\n\n                let method = this.options.method;\n\n                this.formData = this.getFormData(this.options.id);\n\n                RG.logger.trace(this.formData);\n\n                if(method === 'get' || method === 'post') {\n\n                    $[method](this.options.action, this.formData).then(response => {\n\n                        if(this.options.empty) {\n\n                            RG.events.publish(`form.${this.options.name}.empty`);\n                        }\n\n                        RG.events.publish(`form.${this.options.name}.message.show`, response);\n\n                        _.each(this.fields, item => {\n\n                            if (_.isFunction(item.resetField)) {\n                                item.resetField();\n                            }\n\n                        });\n\n                    });\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = Form;\n\n\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js\":[function(require,module,exports){\n/*\n * Вспомогательные методы для\n * обработки формы и полей формы\n *\n */\n\n /*\n  * Для подключения счетчика введенных символов,\n  * к атрибутам в data надо добавить объект maxlength,\n  * в котором есть 3 параметра: size (int, ограничитель вводимых символов),\n  * show (boolean, показывать ли этот счётчик)\n  * и backward (boolean, считать от 0 до maxlength или наоборот)\n  *\n  */\n\nvar FormTools = Ractive.extend({\n\n    checkMaxLength(form, name) {\n\n        let maxNum = this.get('maxlength.size'), // Максимальная длина инпута\n            maxlengthback = this.get('maxlength.backward');  // Обратный отсчёт\n\n        // Слушатель изменения инпута\n        this.observe('value', (nVal, oVal) => {\n\n            // Если есть значение, или оно не равно предыдущему значению\n            if (!_.isEmpty(nVal) && nVal !== oVal) {\n\n                // Если в обратку\n                if (maxlengthback) {\n\n                    // То вычитываем из максимального числа длину введённых символов\n                    this.set('enteredValueLength', (maxNum - nVal.length));\n\n                } else {\n\n                    // Считываем длину введённых символов\n                    this.set('enteredValueLength', nVal.length);\n\n                }\n\n                // Если длина введённых символов больше максмимального значения\n                if (nVal.length >= maxNum) {\n\n                    // выкидываем событие максимальной заполненности\n                    RG.events.publish(`form.${form}.${name}.reached.max`, nVal);\n\n                }\n\n                // Выкидываем событие обновления инпута\n                RG.events.publish(`form.${form}.update.${name}`, nVal);\n\n            } else {\n\n                // Если в обратку\n                if (maxlengthback) {\n\n                    // Выставляем 0, если значение инпута отсутсвует\n                    this.set('enteredValueLength', maxNum);\n\n                } else {\n\n                    // Выставляем 0, если значение инпута отсутсвует\n                    this.set('enteredValueLength', 0);\n\n                }\n\n                // Выкидываем событие отсутствия заполненности\n                RG.events.publish(`form.${form}.${name}.reached.zero`, nVal);\n\n            }\n        });\n\n    },\n                                 \n    // Валидация\n    validate(show) {\n\n        // Если проверка пройдена\n        if (this.check()) {\n\n            // Убираем подсветку\n            return !this.highlight(false);\n            \n        } else {\n\n            if (show) {\n                this.showMsg();\n            }\n\n            $('.js-ask-submit').removeClass('disabled');\n\n            // Подсвечиваем\n            return !this.highlight(true);\n\n        }\n    },\n\n    // Сообщения об ошибках\n    showMsg() {\n\n        var errorMsg = null,\n            error = this.get('error'),\n            type = this.get('type');\n\n        errorMsg = error ? error : RG.config.messages[`${type}NotValid`] || RG.config.messages['inputNotValid'];\n\n        this.set('errorMsg', null);\n        this.set('errorMsg', errorMsg);\n\n    },\n\n    // Подсветка ошибок\n    highlight(highlight) {\n\n        if (this.get('highlight')) {\n\n            this.set('highlighted', highlight);\n\n        }\n\n        return highlight;\n\n    },\n\n    // Сброс заполнения формы\n    resetField() {\n\n        if (this.get('type') !== 'submit') {\n\n            this.set('value', null);\n\n            $(\".b-field__select option\").each(function() {\n                if (!+$(this).attr('value')) {\n                    $(this).prop(\"selected\", true);\n                }\n            });\n\n            $('.js-ask-submit').removeClass('disabled');\n\n        }\n\n    }\n\n});\n\nmodule.exports = FormTools;\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/b-input-notification.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"t0\":\"fade\",\"a\":{\"class\":[\"b-input-notification \",{\"t\":2,\"r\":\"class\"}]},\"v\":{\"click\":\"notify\"},\"f\":[{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-input-notification__msg\"},\"f\":[{\"t\":3,\"r\":\"msg\"}]}]}],\"r\":\"show\"}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 07.10.2015.\n */\n\nvar template = require('../b-input-notification.ihtml'),\n\n    InputNotification = Ractive.extend({\n        template,\n        timeOut: null,\n        data: {\n            msg: '',\n            show: false,\n            class: ''\n        },\n        oninit() {\n\n            RG.logger.debug('InputNotification');\n\n            this.observe('msg', this.showMsg.bind(this));\n        },\n\n        showMsg(msg) {\n\n            RG.logger.trace('notification');\n            \n            clearTimeout(this.timeOut);\n\n            if(this.get('msg') !== '') {\n                this.set('show', true);\n\n                this.timeOut = setTimeout(() => {\n\n                    //this.set('msg',null);\n                    this.set('show', false);\n                }, this.get('off'));\n            }\n\n            this.on('notify', event => {\n\n                RG.events.publish('notification.click');\n            });\n        }\n    });\n\nmodule.exports = InputNotification;\n},{\"../b-input-notification.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/b-input-notification.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/b-input.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_text \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_input_text_highlighted\\\":\\\"\\\"\"}},\" b-field_input_\",{\"t\":2,\"r\":\"type\"},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":3,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[{\"t\":2,\"r\":\"enteredValueLength\"},\"/\",{\"t\":2,\"r\":\"size\"}]}],\"n\":51,\"r\":\"backward\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[\"Осталось символов: \",{\"t\":2,\"r\":\"enteredValueLength\"}]}],\"r\":\"backward\"}],\"r\":\"show\"}],\"r\":\"maxlength\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input-notification\",\"a\":{\"msg\":[{\"t\":2,\"r\":\"errorMsg\"}],\"off\":\"5000\"}},\" \",{\"t\":7,\"e\":\"input\",\"a\":{\"name\":[{\"t\":2,\"r\":\"name\"}],\"class\":[\"b-field__input b-field__input_text b-field__input_\",{\"t\":2,\"r\":\"type\"}],\"type\":[{\"t\":2,\"r\":\"type\"}],\"placeholder\":[{\"t\":2,\"r\":\"placeholder\"}],\"value\":[{\"t\":2,\"r\":\"value\"}]},\"m\":[{\"t\":4,\"f\":[\"maxlength=\\\"\",{\"t\":2,\"r\":\"size\"},\"\\\"\"],\"r\":\"maxlength\"}]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/scripts/Input.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar \n\n    // Подключаем уведомления по инпутам\n    InputNotification = require('../../b-input-notification/scripts/InputNotification'),\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-input.ihtml'),\n\n    Input = Ractive.extend(\n\n        FormTools,\n\n        {\n\n            template,\n\n            components: {\n                'input-notification': InputNotification\n            },\n\n            data() {\n\n                return {\n                    highlight: true,\n                    highlighted: false,\n                    type: 'text',\n                    name: 'input'\n                }\n\n            },\n\n            oninit() {\n\n                let form = this.get('form'), // Элемент формы\n                    name = this.get('name'), // Имя инпута\n                    maxNum = this.get('maxlength.size'), // Максимальная длина инпута\n                    maxlengthback = this.get('maxlength.backward');  // Обратный отсчёт\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n\n                });\n\n                // Слушатель изменения инпута\n                this.observe('value', (nVal, oVal) => {\n\n                    if(!_.isEmpty(nVal) && nVal !== oVal) {\n\n                        RG.events.publish(`form.${form}.update.${name}`, nVal);\n                    }\n                });\n\n                this.checkMaxLength(form, name);\n            },\n\n            check() {\n\n                var pattern = this.get('pattern') || /.+/gi,\n                    format = this.get('format'),\n                    value = this.get('value');\n\n                if (format) {\n\n                    pattern = RG.config.formats[format];\n\n                }\n\n                if (this.get('required')) {\n\n                    return pattern.test(value);\n\n                }\n\n                return true;\n\n            }\n\n        }\n    );\n\nmodule.exports = Input;\n\n},{\"../../b-form/scripts/FormTools\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js\",\"../../b-input-notification/scripts/InputNotification\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js\",\"../b-input.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/b-input.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-name/scripts/Name.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 29.02.2016.\r\n */\r\n\r\nvar Input = require('../../b-input/scripts/Input'),\r\n    Name = Input.extend({\r\n\r\n        data() {\r\n            return {\r\n                name: 'name',\r\n                type: 'text',\r\n                placeholder: 'Имя',\r\n                format: 'name'\r\n            };\r\n        },\r\n    });\r\n\r\nmodule.exports = Name;\r\n\n},{\"../../b-input/scripts/Input\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/scripts/Input.js\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/b-select.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_select b-field_select_select \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_select_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"select\",\"a\":{\"class\":\"b-field__select b-field__select_select\",\"value\":[{\"t\":2,\"r\":\"selectedOption\"}],\"type\":\"select\"},\"v\":{\"change\":\"select\"},\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\"value\"}]},\"f\":[{\"t\":3,\"r\":\"content\"}]}],\"n\":50,\"x\":{\"r\":[\"value\"],\"s\":\"_0!==null&&_0!==undefined\"}},{\"t\":4,\"n\":51,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\".\"}]},\"f\":[{\"t\":3,\"r\":\"content\"}]}],\"x\":{\"r\":[\"value\"],\"s\":\"_0!==null&&_0!==undefined\"}}],\"r\":\"isObject\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\".\"}]},\"f\":[{\"t\":3,\"r\":\".\"}]}],\"n\":51,\"r\":\"isObject\"}],\"r\":\"items\"}]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/scripts/Select.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 14.02.2016.\n */\n\nvar template = require('../b-select.ihtml'), // подкючение шаблона\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    Select = Ractive.extend(\n\n        FormTools,\n\n        {\n            template,        \n            data() {\n                return {\n                    items: [],\n                    selectedOption: null,\n                    name: 'select',\n                    isObject: true,\n                    highlight: true,\n                    highlighted: false\n                };\n            },    \n            oninit() {\n                RG.logger.debug('Select');\n\n                var self = this,\n                    items = this.get('items'),\n                    isObject = null;\n\n                if ($('rg-select').hasClass('js-ask-form-select')) {\n                    $.ajax({\n                        url: 'https://pravo.rg.ru/ask/?format=json',\n                        success: function(data) {\n                            var itemsDefault = self.get('items'),\n                                itemsNew = data.rubrics,\n                                itemsList = null;\n\n                            itemsList = itemsDefault.concat(itemsNew);\n\n                            self.set('items', itemsList);\n                        },\n                        error: function(data) {\n                            console.log(data);\n                        }\n                    });\n                }\n            },\n\n            onrender() {\n\n                var items = this.get('items');\n                //isObject = _.some(items, item => { return !item.value});\n\n                // Проверяем, массив ли у нас списка или массив объектов    \n                this.set('isObject', _.isObject(items[0]));\n\n                /**\n                 *\n                 * Локалные события\n                 */\n                this.on({\n                    'select': (event) => {    \n                        var item = this.get('selectedOption'),\n                            form = this.get('form'),\n                            name = this.get('name');\n    \n                        // Если вообще есть выбранная опция\n                        // или ее данные (не будет работать, если <option value=\"null\")\n                        if (item) {\n\n                            // Если есть параметр ссылки,\n                            // то переходим по ссылке с перезагрузкой страницы\n                            if(item.href && item.href !== '#') {\n\n                                document.location.href = item.href;\n\n                            // Если есть кастомное событие\n                            // вызываем его\n                            } else if(item.topic) {\n\n                                RG.events.publish(item.topic, item);\n\n                            // Публикуем обновление данных формы\n                            // вариант, когда просто селект в форме\n                            } else {\n\n                                RG.events.publish(`form.${form}.update.${name}`, item);\n\n                            }\n\n                            // Я не знаю что это, Ефим делал\n                            // какая-то связка данных\n                            // если оставить без проверки, то он сохраняет в value - строку [object Object]\n                            // если вообще закомментировать, то ничего не работает при каком-то условии, не помню каком\n                             // if (!!this.get('value')) {\n                                this.set('value', item);\n                             // }\n\n                        }       \n                        event.original.preventDefault();\n                    }\n                });\n    \n            },\n    \n            check() {\n\n                console.log(this);\n    \n                if(this.get('required')) {    \n                    return this.get('value'); \n                }\n    \n                return true;\n    \n            }\n        }\n\n    );\n\nmodule.exports = Select;\n},{\"../../b-form/scripts/FormTools\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js\",\"../b-select.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/b-select.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/b-submit.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_type_comment b-field_input b-field_input_submit js-ask-submit\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":[{\"t\":2,\"r\":\"text\"}]},\"v\":{\"click\":\"submit\"}}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/scripts/Submit.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar template = require('../b-submit.ihtml'),\n\n    Submit = Ractive.extend({\n\n        template,\n\n        data() {\n\n            return {\n                type: 'submit'\n            }\n        },\n\n        oninit() {\n\n            this.on('submit', e => {\n\n                let context = this.get(),\n                    form = this.get('form');\n\n                RG.events.publish(`form.${form}.submit`, context);\n            });\n        }\n    });\n\nmodule.exports = Submit;\n\n},{\"../b-submit.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/b-submit.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/b-textarea.ihtml\":[function(require,module,exports){\nmodule.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_textarea b-field_textarea_textarea \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_textarea_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[{\"t\":2,\"r\":\"enteredValueLength\"},\"/\",{\"t\":2,\"r\":\"size\"}]}],\"n\":51,\"r\":\"backward\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[\"Осталось символов: \",{\"t\":2,\"r\":\"enteredValueLength\"}]}],\"r\":\"backward\"}],\"r\":\"show\"}],\"r\":\"maxlength\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"textarea\",\"a\":{\"name\":[{\"t\":2,\"r\":\"name\"}],\"class\":\"b-field__textarea b-field__textarea_textarea\",\"placeholder\":[{\"t\":2,\"r\":\"placeholder\"}],\"value\":[{\"t\":2,\"r\":\"value\"}]},\"m\":[{\"t\":4,\"f\":[\"maxlength=\\\"\",{\"t\":2,\"r\":\"size\"},\"\\\"\"],\"r\":\"maxlength\"}]}]}]}]}\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/scripts/Textarea.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 29.02.2016.\n */\n\n\nvar \n\n    // Подключаем уведомления по инпутам\n    InputNotification = require('../../b-input-notification/scripts/InputNotification'),\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-textarea.ihtml'),\n\n    Textarea = Ractive.extend(\n\n        FormTools,\n\n        {\n\n            template,\n\n            components: {\n                'input-notification': InputNotification\n            },\n\n            data() {\n\n                return {\n                    name: 'textarea',\n                    highlight: true,\n                    highlighted: false\n                }\n\n            },\n\n            oninit() {\n\n                let form = this.get('form'),\n                    name = this.get('name');\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n                });\n\n                this.observe('value', (nVal, oVal) => {\n\n                    if(!_.isEmpty(nVal) && nVal !== oVal) {\n\n                        RG.events.publish(`form.${form}.update.${name}`, nVal);\n                    }\n                });\n\n                this.checkMaxLength(form, name);\n\n            },\n\n            check() {\n\n                var value = this.get('value');\n\n                if(this.get('required')) {\n                    return !_.isEmpty(value);\n                }\n\n                return true;\n\n            }\n        }\n    );\n\nmodule.exports = Textarea;\n\n},{\"../../b-form/scripts/FormTools\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/FormTools.js\",\"../../b-input-notification/scripts/InputNotification\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js\",\"../b-textarea.ihtml\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/b-textarea.ihtml\"}],\"/var/www/pravo/www/app/Resources/public/blocks/header/b-menu/scripts/b-menu.js\":[function(require,module,exports){\n$(document).ready(function() {\r\n/*if (window.location.search === '?dev=true') {\r\n\t$('.b-search').css('display', 'inline-block');\r\n}*/\r\n\tfunction mobileMenuDisplay() {\r\n\t\tvar menuMobileLink = $('#js-mobile-menu'),\r\n\t\t\tmenuMobile = $('.b-menu-mobile');\r\n\r\n\t\tmenuMobileLink.on('click tap', function(e) {\r\n\t\t\tmenuMobile.toggle();\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\t$(document).on('click tap', function(e) {\r\n\t\t\tif (menuMobile.has(e.target).length === 0) {\r\n\t\t\t\tmenuMobile.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction searchBarDisplay() {\r\n\t\tvar\tsearchIcon = $('#js-search-icon'),\r\n\t\t\tsearchOverlay = $('#cboxOverlay'),\r\n\t\t\tsearchBar = $('#js-search-bar');\r\n\r\n\t\tsearchIcon.on('click', function(e) {\r\n\t\t\t/*searchOverlay.show().append(searchBar);\r\n\t\t\tsearchBar.show();*/\r\n\t\t\tRG.events.publish('search.overlay.show');\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\t\t/*searchOverlay.on('click', function() {\r\n\t\t\t$(this).hide().remove(searchBar);\r\n\t\t\tsearchBar.hide();\r\n\t\t});*/\r\n\t}\r\n\t\r\n\tmobileMenuDisplay();\r\n\tsearchBarDisplay();\r\n\r\n\t/*$('#form').on('submit', function() {\r\n\t\twindow.location.href = \r\n\t\t\t\"/search/?query=\" + encodeURIComponent($(this).find(\"input[name=input_text]\").val()) + \r\n\t\t\t'&search=' + $(this).find(\"#select\").val();\r\n\t});*/\r\n\r\n});\r\n\n},{}],\"/var/www/pravo/www/app/Resources/public/blocks/main/b-live-reload/scripts/LiveReload.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 29.01.2016.\n */\n\nvar LiveReload = Ractive.extend({\n\n    data() {\n        return {\n            dateFormat: RG.datetime.parseVmDate\n        }\n    },\n\n    oninit() {\n\n        //RG.logger.log(this.get());\n\n        RG.logger.debug('LiveReload');\n\n        /*this.on({\n\n        });\n\n        RG.events.registerList({\n\n        });*/\n    }\n\n});\n\nmodule.exports = LiveReload;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/config.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 06.10.2015.\n */\n\n/**\n * Осноыной JSON конфигурации\n * @type {{paths: {root: string}, env: string, formats: {email: RegExp, conformAtionCode: RegExp}}}\n */\nvar root = '//front.rg.ru/',\n    outer = '//outer.rg.ru/',\n\n    config = {\n        // основные пути\n        paths: {\n\n            // путь до Api\n            //root: 'https://front.rg.ru/app_dev.php/',\n            root: root,\n\n            // путь до свежего выпуска,\n            // после, параметры и оканчивается на gazeta.json\n            fresh: '/json/gazeta',\n\n            // путь до последних материалов\n            // после, параметры common, region-ID, common+region-ID\n\n            accountInclude: '/include/tmpl-b-feed/is-announce/num-3/index.json',\n\n            popularMaterials: `${outer}plain/popular/`,\n            popularCommentMaterials: `${root}comments/top_list`,\n            // путь до списка спецвыпусков\n            // используется в шаблоне fascicles-index\n            // после, параметры\n            //    {path}/\n            //      year-{YYYY} - фильтр по году\n            //      after-fascicle-{ID} - если догружаем выпуски\n            //      {type} || common - либо по типу, либо все сразу\n            fascicles: '/json/fascicles',\n\n            // путь до супершпигелей\n            // после, параметры региона (если есть) region-ID и даты yyyy-mm-dd\n            supersp: '/json/supersp',\n\n            lastNews: '/json/last_news/',\n\n            broadcastSport: `${outer}plain/sport_translations/api/sport.php?id=`,\n            broadcastOnline: `${outer}plain/online_translations/api/online.php?id=`,\n\n            // Путь до партнерок\n            // название файла от 1 до 10, генерим рандомом\n            partners: 'api/partners/',\n\n            // Пути до шаблонов в public\n            tmpl: {\n\n                // Блок b-news\n                bFeed: '/res/templates/b-feed.html',\n                bNewsInner: '/res/templates/b-news-inner.html',\n                bNewsInner_doc: '/res/templates/b-news-inner_doc.html',\n                bNews: '/res/templates/b-news.html',\n                bNews_broadsides: '/res/templates/b-news_broadsides.html',\n                broadcastOnline: '/res/templates/b-broadcast-online.html',\n                broadcastSport: '/res/templates/b-broadcast-sport.html',\n                bPartners: '/res/templates/b-partners.html'\n            },\n        },\n\n        regions: null,\n\n        env: 'dev', // установка окружения\n        formats: {\n            email: /\\S+@\\S+\\.\\S+/, // паттерн email\n            conformAtionCode: /\\b\\d{6}\\b/g, // паттерн кода подтверждения\n            name: /^[а-яА-ЯёЁa-zA-Z ,.'-]+$/ // паттерн кода подтверждения\n        },\n\n        messages: {\n\n            inputNotValid: 'Неверный формат',\n            emailNotValid: 'Неверный формат адреса электронной почты',\n            nameNotValid: 'Неверный формат имени',\n            codeIsSent: 'Код уже отправлен, попробуйте позднее',\n            codeNotValid: 'Неверный код',\n\n    }\n};\n\nmodule.exports = config;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/global.js\":[function(require,module,exports){\n/**\n * Created by nsinetskiy on 16.05.2016.\n */\n\n\n'use strict'\n\n/**\n * Инициализация главного модуля\n * @type {{}|*}\n */\nwindow.RG = window.RG || {};\n\n// HELLO WORLD :)\nconsole.debug(`From RG team with \\u2764`);\n\n/**************************************************************************************\n ПОДКЛЮЧАЕМ ДЕКОРАТОРЫ\n *************************************************************************************/\n\nrequire('./global/decorators');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ КОМПОНЕНТЫ\n *************************************************************************************/\n\nrequire('./global/components');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ МОДУЛИ\n *************************************************************************************/\n\nrequire('./global/modules');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ РАСШИРЕНИЯ\n *************************************************************************************/\n\nrequire('./global/extends');\n\n/**\n * Подключение блока модального поиска\n */\n// var SearchOverlay = require('../blocks/overlays/b-search-overlay/scripts/SearchOverlay');\n\n/**\n * Решение проблемы CORS\n */\n$.ajaxSetup({\n    xhrFields: {\n        withCredentials: true\n    }\n});\n\n/**************************************************************************************\n DOM READY\n *************************************************************************************/\n$(function() {\n\n    'use strict';\n\n    $('#openKartaProezda').colorbox({\n        title: \"Редакция &laquo;Российской газеты&raquo;, ул. Правды, д. 24, строение 4\",\n        className: \"karta-proezda-ctx\"\n    });\n\n    var\n\n    // Записываем в переменную элемент colorbox\n        $cbox = $('#colorbox'),\n\n    // Записываем в переменную элемент colorbox overlay\n        $cboxOverlay = $('#cboxOverlay');\n\n\n    // Поехали дальше кодить, мужики!\n\n    // Запускаем парсер компонентов (из подключенного выше файла компонентов)\n    RG.parser.init();\n\n    //Инициализация модуля просмотренных матеиралов\n    RG.Viewed.init();\n\n    /**\n     * Ошибка при запросе\n     */\n    /*    $(document).ajaxError(function(event, jqxhr, settings, thrownError) {\n\n     RG.logger.error(thrownError);\n\n     $.colorbox({\n\n     html: '<div class=\"\"><p class=\"\">Произошла ошибка. Обратитесь к разработчикам</p></div>',\n\n     returnFocus: false,\n     scrolling: false,\n     opacity: 0.7,\n\n     width: 360,\n     height: 100,\n     });\n     });*/\n\n    // Регистрируем событие клика на документе\n    $(document).on('click', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.click', event);\n    });\n\n    // Регистрируем событие клика на документе\n    $(document).on('mousedown', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.mousedown', event);\n    });\n\n    // Регистрируем событие клика на документе\n    $(document).on('mouseup', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.mouseup', event);\n    });\n\n    /**************************************************************************************\n     КОД АГИМЫ\n     *************************************************************************************/\n\n    // Хелперы\n    window.$windowHeight = window.innerHeight;\n    window.$windowWidth = window.innerWidth;\n\n    $(document).on('scroll', function() {\n\n        window.$scrollTop = window.pageYOffset;\n        window.$windowHeight = window.innerHeight;\n    });\n\n    $(window).on('resize', function() {\n\n        window.$scrollTop = window.pageYOffset;\n        window.$windowHeight = window.innerHeight;\n\n        // Этот код убивал все!!!\n        /*if ($currentWindowWidth != $windowWidth) {\n         $.colorbox.close();\n         }*/\n\n        // Реинициализация панели данных на главной странице\n        /*if($('.js-slide').length) {\n         slidePosition($('.js-slide.is-active'), $('.js-slide'));\n         }*/\n    });\n\n    /**\n     * TODO Удалить этот код\n     */\n    // Панель данных на главной странице\n    /*if($('.js-slide').length) {\n     slidePosition ($('.js-slide.is-active'), $('.js-slide'));\n     }*/\n\n    // Выбор таба на главной\n    /*$(document).on('click', '.js-slide', function(){\n\n     var $this = $(this),\n     $collection = $('.js-slide');\n\n     slidePosition($this, $collection);\n\n     return false;\n     });*/\n\n    // Движение таба в панели данных\n    /*function slidePosition (e, col) {\n\n     var $active = e.siblings('.is-border'),\n     $pos = e.position().left,\n     $itemWidth = e.width();\n\n\n     col.removeClass('is-active');\n     e.addClass('is-active');\n\n     $active.css({\n     'left': $pos,\n     'width': $itemWidth\n     });\n     }*/\n\n\n    /**\n     * Инициализация дейтпикера\n     * TODO вынести в отдельный файл\n     */\n    (function initCalendar() {\n\n        var $datepicker = $(\".js-datepicker\");\n\n        if (!!$datepicker.length) {\n            $datepicker.datepicker({\n                showOn: 'button',\n                buttonText: '',\n                showButtonPanel: true,\n                showOtherMonths: true,\n                selectOtherMonths: true,\n                beforeShow: function() {\n                    $('.ui-datepicker-trigger').addClass('is-active').addClass('animated').addClass('bounceIn');\n                },\n                onClose: function(){\n                    $('.ui-datepicker-trigger').removeClass('is-active').removeClass('animated').removeClass('bounceIn');\n                }\n            });\n            $datepicker.datepicker( $.datepicker.regional['ru'] );\n        }\n    })();\n\n    // Инициализируем стикер баннера в левом сайтбаре\n    $(\".b-scroll-block_sidebar-left\").stick_in_parent({\n        parent: '.l-page__body',\n        spacer: false // если его включить, то html5 баннеры перезагружаются, при ресайзе\n    });\n\n    // Инициализируем кастомный скролл\n    $(\".js-scroll-bar\").mCustomScrollbar({\n        autoHideScrollbar: true\n    });\n\n    /**\n     * TODO Зачем здесь это?\n     */\n    // Инициализация скролла в новостях левого сайтбара\n    /*$('.b-feed_last-news .b-feed__list').mCustomScrollbar({\n     autoHideScrollbar: true\n     });*/\n\n    RG.parser.render('rg-form');\n\n    $(\"label a\").on(\"click\", function(e) {\n        e.stopPropagation();\n    });\n\n    /**\n     * Инициализация блока подписок\n     */\n    RG.Subscribe.init();\n\n    if(RG.meta.getSujet()) {\n        RG.parser.render('rg-follow-sujet', {\n            data: {\n                subscribed: false,\n                txt: 'Следить за сюжетом',\n                sujet: RG.meta.getSujet()\n            }\n        });\n\n    }\n\n    /**\n     * Сохранённых статей\n     */\n    RG.Saved.init();\n\n    /*\n     * Инициализация Аналитики\n     */\n    RG.Analytics.init();\n    RG.Analytics.run();\n\n    // Отправляем событие, что баннеры начали грузиться\n    /*RG.events.subscribe('Ads.init', function(){\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'start'\n     }\n     });\n\n     });*/\n\n    // Проверяем на то, инициализировались ли баннеры\n    /*RG.events.subscribe('Adfox.platform.loaded', function(){\n\n     (function(){\n\n     var bannersNotLoaded = true; // по-умолчанию баннер не загружен (предполагаем)\n\n     setTimeout(function() {\n\n     // Проходим по всем площадкам\n     $('[id^=\"ads\"]').each(function(index, el) {\n\n     // Если контейнер не пустой\n     // все ок\n     // выходим из цикла проверки\n     if (!$(el).is(':empty')) {\n\n     // Говорим что баннер не загружен\n     bannersNotLoaded = false;\n\n     // Выхдим из цикла\n     return false;\n     }\n\n     });\n\n     // Если баннеры не были загружены\n     // то есть во всех контейнерах пусто,\n     // то отправляем запрос\n     if (bannersNotLoaded) {\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'failed'\n     }\n     });\n\n     RG.logger.log('Баннеры не загрузились, блоки пустые');\n     RG.logger.log($('[id^=\"ads\"]'));\n\n     } else {\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'done'\n     }\n     });\n\n     RG.logger.log('Баннеры все-таки загрузились, среди этих блоков есть');\n     RG.logger.log($('[id^=\"ads\"]'));\n     }\n\n     }, 5000);\n\n     })();\n\n     });*/\n\n    /*RG.Analytics.Ga.register({\n     type: 'send',\n     param: {\n     tagLabel: '.b-sidebar-left__item .b-categories__item',\n     event: 'click',\n     hitType: 'event',\n     eventCategory: 'Левое меню',\n     eventAction: 'Клик',\n     eventLabel: 'Элемент меню'\n     }\n     });*/\n\n    /*\n     * Отправляем\n     * счетчик, без вешания на событие\n     * пример: по таймауту\n     */\n\n    /*RG.Analytics.Ga.sendTracker({\n     type: 'НазваниеСчетчика.send',\n     param: {\n     hitType: 'event',\n     eventCategory: 'Категория',\n     eventAction: 'По таймауту',\n     eventLabel: 'Какие-то элементы'\n     }\n     });*/\n\n    /**\n     * Тестовая аналитика\n     * TODO удалить\n     */\n\n    /*RG.Analytics.Ga.register({\n     type: 'send',\n     param: {\n     tagLabel: '[data-blocksshifterid=\"rgb_feed_last-news\"]',\n     event: 'click',\n     hitType: 'Клик',\n     eventCategory: 'Лента новостей',\n     eventAction: 'Клик',\n     eventLabel: 'Блок правый сайтбар 240х400',\n     eventValue: 'Значение, просто так'\n     }\n     });\n\n     RG.Analytics.Ga.registerList({\n     list: [\n     {\n     send: [\n     {\n     tagLabel: '.b-header',\n     event: 'click',\n     hitType: 'click',\n     eventCategory: 'Шапка',\n     eventAction: 'Клик',\n     eventLabel: 'Блок шапки',\n     eventValue: null\n     },\n     {\n     tagLabel: '.b-logo',\n     event: 'mouseenter',\n     hitType: 'hover',\n     eventCategory: 'Логотип',\n     eventAction: 'Курсор над блоком',\n     eventLabel: 'Логотип в шапке',\n     eventValue: null\n     }\n     ]\n     }\n     ]\n     });*/\n\n    // ОТправка на печать\n    (function toPrint(){\n\n        var $printBtn = $('.b-icon_type_print');\n\n        if (!!$printBtn.length) {\n            $printBtn.on('click', function(e){\n                e.preventDefault();\n\n                window.print();\n            });\n        }\n\n    })();\n\n    /*\n     * Инициализация счетчиков\n     */\n    RG.Counters.init();\n\n    // Включаем счетчики\n    RG.events.publish('Counters.run');\n\n    /*\n     * Инициализация Рекламы\n     */\n    RG.Ads.init();\n\n    // Инициализируем компонент баннера adfox\n    RG.parser.render('rg-adfox');\n\n    // Инициализируем баннер Adfox\n    RG.events.publish(`${RG.Ads.Adfox_modulePrefix}.run`);\n\n    // Инициализируем Директ\n    RG.Ads.YaDirect.init();\n\n    // Инициализируем компонент директа\n    RG.parser.render('rg-yadirect');\n\n    // Инициализируем Ivengo\n    /*if (!RG.meta.getAdsHide()) {\n\n        RG.logger.log('Ads Ivengo hide false');\n\n        RG.Ads.Ivengo.init();\n    } else {\n        RG.logger.log('Ads Ivengo hide true');\n    }*/\n\n    // Инициализируем Turboroller\n    //RG.Ads.Turboroller.init(); Выключил пока они не поддреживают https\n\n    // Инициализация Партнерок\n    // После того, как получили путевой лист\n    /*RG.events.subscribe('Adfox.platform.loaded', function(topic, places){\n\n        // Запускается один раз только\n        RG.Partners.init(places);\n    });*/\n\n    /*\n     * Инициализация модуля ScreenViewer\n     */\n    RG.ScreenViewer.init();\n\n    // Инициализируем подписку\n    RG.events.publish(`${RG.ScreenViewer._modulePrefix}.check`);\n\n    // Считываем тип экрана после ресайза\n    $(window).on('resize', () => {\n\n        RG.events.publish('window.resize');\n    });\n\n    /*\n     * Инициализация модуля BlocksShifter\n     */\n    RG.BlocksShifter.init();\n\n    /*\n     * Работа с модулем BlocksShifter\n     * Когда обновляется информация о типе экрана,\n     * запускаем перестановку блоков\n     */\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n        var screenInfo = RG.ScreenViewer.getScreenInfo();\n\n        RG.logger.info(topic);\n\n        // Инициализируем получение площадок\n        RG.Place.init(screenInfo);\n\n        // Настраиваем BlockShifter\n        RG.events.publish(`${RG.BlocksShifter._modulePrefix}.run`, screenInfo);\n\n        RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n            RG.logger.info(topic);\n            RG.events.publish(`${RG.BlocksShifter._modulePrefix}.run`, screenInfo);\n        });\n    });\n\n    /**\n     * Инициализация модуля региональных новостей\n     */\n    RG.RegionalNews.init();\n\n    /**\n     * Инициализация блока перезагрузки контента\n     */\n    RG.LiveReload.init();\n    RG.LiveReload.run();\n\n    /**\n     * Костыль, что бы не ломать авторизацию\n     * TODO Избавиться от этого кода\n     */\n    /*RG.storage.set('auth', {\n        email: '',\n        firstName: '',\n        lastName: ''\n    });*/\n\n    //let auth = RG.storage.get('auth');\n    /**\n     * TODO Избавиться от этого кода\n     */\n\n    /**\n     * Инициализация модуля авторизации\n     */\n    //RG.Auth.init();\n\n    /**\n     * Инициализация сессии пользователя\n     */\n    //RG.session.init();\n\n    /**\n     * Проверка сессии пользователя\n     */\n    //RG.events.publish('session.check');\n\n    /**\n     * Запуск меню\n     */\n    // RG.Menu.init();\n    // RG.Menu.run();\n\n    /**************************************************************************************\n     ШАПКА\n     *************************************************************************************/\n    /**\n     * Инициализируем меню партнеров в шапке\n     * TODO Необходимо как то упростить этот код или вынести в отдельный модуль\n     */\n    (function() {\n\n        $('.b-vendors__item_more-btn').colorbox({\n\n            onComplete() {\n                //RG.events.publish('colorbox.opened');\n            },\n\n            onOpen() {\n                RG.events.publish('colorbox.opened');\n            },\n\n            onCleanup() {\n                RG.events.publish('colorbox.closed');\n            },\n\n            className: 'b-vendors b-vendors_overlay',\n            inline: true,\n            href: $('.b-vendors_header').html(),\n\n            width: '408px',\n            height: '400px',\n\n            opacity: 0.7,\n\n            //transition: 'none',\n            initialWidth: 0,\n            initialHeight: 0,\n        });\n\n    })();\n\n    /**************************************************************************************\n     ПОДВАЛ\n     *************************************************************************************/\n\n    /**\n     * Инициализация Раскрывающегося блока в футере\n     */\n\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n        var screenInfo = RG.ScreenViewer.getScreenInfo();\n\n        if (screenInfo.type !== 'tabletLandscape' && screenInfo.type !== 'desktop' && screenInfo.type !== 'desktopFull') {\n\n            // Если блок еще не инициализировался\n            if (!window.footerContentToggler) {\n\n                window.footerContentToggler = new RG.ContentToggler($('.b-footer')[0], {\n                    btn: '.b-footer__toggle',\n                    ctx: '.b-footer__links',\n                    opened: false\n                });\n\n            } else {\n\n                // Если объект был создан,\n                // а мы перешли из десктопа,\n                // то просто скрываем блок\n                // + дополнительная проверка, на телефоне при скролле за пределы экрана срабатывает ресайз\n                if (!!screenInfo.infoBefore && (screenInfo.infoBefore.screenWidth !== screenInfo.screenWidth)) {\n                    if (screenInfo.infoBefore.type !== 'tabletLandscape' || screenInfo.infoBefore.type === 'desktop' || screenInfo.infoBefore.type === 'desktopFull') {\n                        window.footerContentToggler.initialHide();\n                    }\n                }\n\n            }\n\n        } else {\n\n            // Если перешли в десктоп - уничтожаем блок\n            if (window.footerContentToggler) {\n                window.footerContentToggler.destroy();\n            }\n\n        }\n\n    });\n\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, function(topic, screenInfo) {\n\n        if (screenInfo.type !== 'tabletLandscape' && screenInfo.type !== 'desktop' && screenInfo.type !== 'desktopFull') {\n\n            // Если блок еще не инициализировался\n            if (!window.footerContentToggler) {\n\n                window.footerContentToggler = new RG.ContentToggler($('.b-footer')[0], {\n                    btn: '.b-footer__toggle',\n                    ctx: '.b-footer__links',\n                    opened: false\n                });\n\n            } else {\n\n                // Если объект был создан,\n                // а мы перешли из десктопа,\n                // то просто скрываем блок\n                // + дополнительная проверка, на телефоне при скролле за пределы экрана срабатывает ресайз\n                if (!!screenInfo.infoBefore && (screenInfo.infoBefore.screenWidth !== screenInfo.screenWidth)) {\n                    if (screenInfo.infoBefore.type !== 'tabletLandscape' || screenInfo.infoBefore.type === 'desktop' || screenInfo.infoBefore.type === 'desktopFull') {\n                        window.footerContentToggler.initialHide();\n                    }\n                }\n\n            }\n\n        } else {\n\n            // Если перешли в десктоп - уничтожаем блок\n            if (window.footerContentToggler) {\n                window.footerContentToggler.destroy();\n            }\n\n        }\n\n    });\n\n    /**\n     * Инициализация карусели продуктов в футере\n     */\n    $('#vendorsRg').slick({\n        dots: false,\n        infinite: true,\n        speed: 300,\n        slidesToShow: 7,\n        responsive: [\n            {\n                breakpoint: 768,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    //slidesToShow: 2\n\n                    variableWidth: true,\n                    slidesToShow: 1,\n                    centerMode: true\n                }\n            },\n            {\n                breakpoint: 1024,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    slidesToShow: 4\n                }\n            },\n            {\n                breakpoint: 1366,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    slidesToShow: 7\n                }\n            }\n        ]\n    });\n\n    /**\n     * Инициализируем меню рубрик в футере на телефоне\n     *\n     * Убрали эту штуковину и рубрики ушли в шапку\n     *\n     */\n    /*(function() {\n\n     $('.b-footer__categories').colorbox({\n\n     onComplete() {\n     RG.events.publish('colorbox.opened');\n     },\n\n     onCleanup() {\n     RG.events.publish('colorbox.closed');\n     },\n\n     className: 'b-categories b-categories_overlay',\n     inline: true,\n     href: $('.b-sidebar-left__item.b-categories').html(),\n\n     width: '408px',\n     height: '360px'\n     });\n\n     })();*/\n\n    // ЧТО это мужики?!\n    (() => {\n\n        if(document.location.hash === '#code') {\n\n            login('code.required', false, true);\n        }\n    })();\n\n    /**************************************************************************************\n     ГЛОБАЛЬНЫЕ СОБЫТИЯ\n     TODO ЖЕЛАТЕЛЬНО ВЫНЕСТИ В ОТДЕЛЬНЫЙ ФАЙЛ\n     *************************************************************************************/\n    RG.events.registerList({\n\n        /**\n         * События всплывающих окон\n         */\n        'login': login,\n\n        /**\n         * Вызов модального окна поиска\n         */\n        'search.overlay.show': searchOverlayShow,\n\n        /**\n         * Вызов модального окна регионов\n         * @param topic\n         */\n        'region.overlay.show': topic => {\n\n            RG.logger.info(topic);\n\n            if(RG.config.regions) {\n                regionOverlayShow('region.overlay.show', RG.config.regions);\n            } else {\n                RG.events.subscribe('geolocation.region.update', regionOverlayShow, RG.config.regions);\n                RG.events.publish('geolocation.region.all');\n            }\n        },\n\n        /**\n         * Вызов модального окна сюжетов\n         */\n        'followed.show': followedOverlayShow,\n\n        /**\n         * Вызов модального окна просмотренных материалов\n         */\n        'viewed.show': viewedOverlayShow,\n\n        /**\n         * Событие переалрисации от соц. сети\n         */\n        'session.confirm.required': topic => {\n\n            RG.logger.info(topic);\n            if(document.location.hash === '#social_redirect') {\n                RG.events.publish('login', true);\n            }\n        },\n\n        /**\n         * Изменяет размер модального окна под контент\n         * @param topic\n         */\n        'overlay.resize': (topic) => {\n\n            RG.logger.info(topic);\n\n            let $list = $('#colorbox').find('.js-height-list');\n\n            if($list.offset()) {\n\n                $list.css('height', $windowHeight - $list.offset().top);\n            }\n\n            $.colorbox.resize();\n\n            setBodyFixed();\n        },\n\n        // add Alex 30.11.2016\n        /**\n         * Фиксирует окно\n         */\n        'colorbox.opened': setBodyFixed,\n\n        /**\n         * Отменяет фиксацию окна\n         */\n        'colorbox.closed': unsetBodyFixed,\n\n        /**\n         * Показать модальное окно\n         */\n        'overlay.show': () => {\n            overlayShow(true);\n        },\n\n        /**\n         * Скрыть модальное окно\n         */\n        'overlay.hide': () => {\n            overlayShow(false);\n        },\n\n        /**\n         * Обработка авторизованного пользователя\n         * @param topic\n         */\n        'session.user.authorized': (topic) => {\n\n            RG.logger.info(topic);\n\n            RG.Auth.destruct();\n            $.colorbox.close();\n        },\n\n        /**\n         * Инициализация скролла\n         * @param topic\n         * @param $element\n         */\n        'scroll.init': (topic, $element) => {\n\n            RG.logger.info(topic);\n\n            let type = RG.ScreenViewer.getScreenInfo().type;\n\n            if(type !== 'tabletLandscape' && type !== 'tablet' && type !== 'mobile') {\n\n                $element = $element || $('.js-scroll-bar');\n\n                if($element.length) {\n\n                    $element.mCustomScrollbar(\"destroy\");\n\n                    $element.mCustomScrollbar({\n                        autoHideScrollbar: true\n                    });\n                }\n            }\n        },\n\n        /**\n         * Деактивация скролла\n         * @param topic\n         * @param $element\n         */\n        'scroll.destroy': (topic, $element) => {\n\n            RG.logger.info(topic);\n\n            $element = $element || $('.js-scroll-bar');\n\n            $element.mCustomScrollbar(\"destroy\");\n        },\n\n        'livereload.init': topic => {\n\n            RG.logger.info(topic);\n\n            if (!!$('.b-broadcast-sport').length) {\n\n                // Инициализируем переключалку контента\n                new RG.ContentHandler('.b-broadcast-sport', {\n                    labelList: '.b-broadcast-sport__menu-item'\n                });\n\n                RG.ScrollTopBroadcast.init();\n            }\n\n            $.getScript('//platform.twitter.com/widgets.js');\n            $.getScript('//platform.instagram.com/en_US/embeds.js\"');\n\n            RG.events.publish('scroll.init');\n        },\n        'geolocation.region.changed': topic => {\n\n            RG.logger.info(topic);\n\n            $.colorbox.close();\n        }\n    });\n\n    /**************************************************************************************\n     ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ\n     TODO ВЫНЕСТИ В ОТДЕЛЬНЫЙ ФАЙЛ\n     *************************************************************************************/\n\n    // add Alex 30.11.2016\n    function setBodyFixed() {\n        //$('body').addClass('is-fixed');\n        $('body').addClass('scroll-disabled');\n    }\n\n    // add Alex 30.11.2016\n    function unsetBodyFixed() {\n        //$('body').removeClass('is-fixed');\n        $('body').removeClass('scroll-disabled');\n    }\n\n    function login(topic, social, code) {\n\n        RG.logger.info(topic);\n\n        // Говорим, что загрузка колорбокса началась\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        // Обработка всплывашки\n        $.colorbox({\n\n            html: '<div id=\"authContainer\"></div>',\n\n            onComplete() {\n\n                var type = code ? 'code' : null;\n\n                RG.Auth.run(type);\n                RG.events.publish('colorbox.opened', 'login');\n\n                social ? RG.events.publish('aurh.confirm.required') : null;\n\n                setTimeout(function(){\n\n                    // Обновляем колорбокс\n                    $.colorbox.resize({\n                        innerWidth: 360,\n                        innerHeight: 600\n                    });\n\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n\n                    RG.events.publish('tab.selected.set', $('.b-auth .b-tab__item_1'));\n                }, 1000);\n\n            },\n\n            onLoad() {},\n\n            onCleanup() {\n                RG.logger.info('close colorbox');\n                RG.events.publish('colorbox.closed', 'login');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            returnFocus: false,\n            scrolling: false,\n            opacity: 0.7,\n\n            //width: 360,\n            //height: 700,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function searchOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"searchOverlay\"></div>',\n            // closeButton: false,\n\n            onComplete() {\n\n                // new SearchOverlay();\n                $('#searchOverlay').load('/bundles/jurist/static_tmpl/b-search-form.html');\n                $.colorbox.resize({width: '1100px', height: '40px'});\n                RG.events.publish('colorbox.opened', 'search');\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('colorbox.closed', 'search');\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            className: 'b-modal_search',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function followedOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"followed\"></div>',\n\n            onComplete() {\n\n                RG.events.publish('followed.run');\n                RG.events.publish('colorbox.opened', 'followed');\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('followed.destroy');\n                RG.events.publish('colorbox.closed', 'followed');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            transition: 'none',\n            top: $('#menu').offset().top + 53,\n            right: 0,\n            className: 'b-modal_header',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0\n        });\n    }\n\n    function viewedOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"viewed\"></div>',\n\n            onComplete() {\n\n                RG.events.publish('viewed.run');\n                RG.events.publish('colorbox.opened', 'viewed');\n\n                // Обновляем колорбокс\n                $.colorbox.resize({\n                    innerWidth: 390\n                });\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('viewed.destroy');\n                RG.events.publish('colorbox.closed', 'viewed');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            transition: 'none',\n            top: $('#menu').offset().top + 53,\n            right: 0,\n            className: 'b-modal_header',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0\n        });\n    }\n\n    function regionOverlayShow(topic, regions) {\n\n        RG.config.regions = regions;\n\n        RG.events.unsubscribe('geolocation.region.update');\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"region\"></div>',\n\n            onComplete() {\n\n                new Region();\n                RG.events.publish('colorbox.opened', 'region');\n\n                // Обновляем колорбокс\n                $.colorbox.resize({\n                    innerWidth: 900,\n                    innerHeight: 300\n                });\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n                RG.events.publish('colorbox.closed', 'region');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            scrolling: false,\n            opacity: 0.7,\n            //width: 900,\n            //height: 300,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function overlayShow(show) {\n\n        var $overlay = $('#cboxOverlay');\n\n        if(show) {\n            $overlay.show();\n            setBodyFixed();\n        } else {\n            $overlay.hide();\n            unsetBodyFixed();\n        }\n\n        return false;\n    }\n\n    function setFixedMenu() {\n    \tvar scrollStart = 100,\n    \t\tscrollCurrent = $(window).scrollTop(),\n    \t\tmenu = document.querySelector('.b-menu');\n\n    \tif (scrollCurrent > scrollStart) {\n\n    \t\tmenu.classList.add('b-menu_fixed');\n\n    \t} else {\n\n    \t\tmenu.classList.remove('b-menu_fixed')\n\n    \t}\n\n    }\n\n    $(window).on('scroll', setFixedMenu);\n\n/**\n * Инициализация модуля замены списка выпадающим меню\n */\n\nnew RG.ListHeadToSelect('.b-categories__link', '.b-categories', '.b-categories__list');\n\n});\n// END DOM READY\n\n\n\n$(function() {\n    (function () {\n\n        var share = new Ractive.components.share({\n            el: '#share',\n            data() {\n                return {\n                    owner: 'share',\n                    options: {\n                        theme: {\n                            counter: true\n                        }\n                    },\n                    content: 'Поделиться:'\n                }\n            }\n        });\n\n        RG.events.publish('share.set', {\n            url: $('meta[property=\"og:url\"]').attr('content'),\n            title: $('meta[property=\"og:title\"]').attr('content'),\n            description: $('meta[name=\"description\"]').attr('content'),\n            image: $('meta[property=\"og:image\"]').attr('content')\n        });\n\n    })();\n});\n\n},{\"./global/components\":\"/var/www/pravo/www/app/Resources/public/scripts/global/components.js\",\"./global/decorators\":\"/var/www/pravo/www/app/Resources/public/scripts/global/decorators.js\",\"./global/extends\":\"/var/www/pravo/www/app/Resources/public/scripts/global/extends.js\",\"./global/modules\":\"/var/www/pravo/www/app/Resources/public/scripts/global/modules.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/global/components.js\":[function(require,module,exports){\n/**************************************************************************************\n КОМПОНЕНТЫ\n *************************************************************************************/\n\nRactive.components = {\n    /**\n     * Компонент вывода ошибки в полях формы\n     */\n    'input-notification': require('../../blocks/forms/b-input-notification/scripts/InputNotification'),\n\n    /**\n     * Табы\n     */\n    'tabs': require('../../blocks/crosslayouts/b-tabs/scripts/Tabs'),\n\n    /**\n     * Поле ввода для поиска (Search bar)\n     */\n\n    'search-bar': require('../../blocks/crosslayouts/b-search-form/scripts/SearchBar'),\n\n    /**\n     * Информация по поиску\n     */\n\n    'rg-search-info': require('../../blocks/crosslayouts/b-search-info/scripts/SearchInfo'),\n\n    /**\n     * Информация по поиску\n     */\n\n    'rg-search-filters': require('../../blocks/crosslayouts/b-search-filters/scripts/SearchFilters'),\n\n    /**\n     * Социальный шаринг\n     */\n    'share': require('../../blocks/crosslayouts/b-share/scripts/share'),\n\n    /**\n     * Поле ввода\n     */\n    'rg-input': require('../../blocks/forms/b-input/scripts/Input'),\n\n    /**\n     * Поле почты\n     */\n    'rg-email': require('../../blocks/forms/b-email/scripts/Email'),\n\n    /**\n     * Поля имени\n     */\n    'rg-name': require('../../blocks/forms/b-name/scripts/Name'),\n\n    /**\n     * Галочка\n     */\n    'rg-checkbox': require('../../blocks/forms/b-checkbox/scripts/Checkbox'),\n\n    /**\n     * Выпадающий список\n     */\n    'rg-select': require('../../blocks/forms/b-select/scripts/Select'),\n\n    /**\n     * Текстовое поле\n     */\n    'rg-textarea': require('../../blocks/forms/b-textarea/scripts/Textarea'),\n\n    /**\n     * Кнопка отправки\n     */\n    'rg-submit': require('../../blocks/forms/b-submit/scripts/Submit'),\n\n    /**\n     * Форма\n     */\n    'rg-form': require('../../blocks/forms/b-form/scripts/Form'),\n\n    /**\n     * Yandex Direct\n     */\n    'rg-yadirect': require('../../blocks/crosslayouts/b-yadirect/scripts/Yadirect'),\n\n    /**\n     * Текстовое сообщение\n     */\n    'rg-form-message': require('../../blocks/forms/b-form-message/scripts/FormMessage'),\n\n    /*\n     * Adfox баннеры\n     */\n\n    'rg-adfox': require('../../blocks/crosslayouts/b-adfox/scripts/Adfox')\n};\n},{\"../../blocks/crosslayouts/b-adfox/scripts/Adfox\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-adfox/scripts/Adfox.js\",\"../../blocks/crosslayouts/b-search-filters/scripts/SearchFilters\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-filters/scripts/SearchFilters.js\",\"../../blocks/crosslayouts/b-search-form/scripts/SearchBar\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-form/scripts/SearchBar.js\",\"../../blocks/crosslayouts/b-search-info/scripts/SearchInfo\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-search-info/scripts/SearchInfo.js\",\"../../blocks/crosslayouts/b-share/scripts/share\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-share/scripts/share.js\",\"../../blocks/crosslayouts/b-tabs/scripts/Tabs\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-tabs/scripts/Tabs.js\",\"../../blocks/crosslayouts/b-yadirect/scripts/Yadirect\":\"/var/www/pravo/www/app/Resources/public/blocks/crosslayouts/b-yadirect/scripts/Yadirect.js\",\"../../blocks/forms/b-checkbox/scripts/Checkbox\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-checkbox/scripts/Checkbox.js\",\"../../blocks/forms/b-email/scripts/Email\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-email/scripts/Email.js\",\"../../blocks/forms/b-form-message/scripts/FormMessage\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form-message/scripts/FormMessage.js\",\"../../blocks/forms/b-form/scripts/Form\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-form/scripts/Form.js\",\"../../blocks/forms/b-input-notification/scripts/InputNotification\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input-notification/scripts/InputNotification.js\",\"../../blocks/forms/b-input/scripts/Input\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-input/scripts/Input.js\",\"../../blocks/forms/b-name/scripts/Name\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-name/scripts/Name.js\",\"../../blocks/forms/b-select/scripts/Select\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/scripts/Select.js\",\"../../blocks/forms/b-submit/scripts/Submit\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-submit/scripts/Submit.js\",\"../../blocks/forms/b-textarea/scripts/Textarea\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-textarea/scripts/Textarea.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/global/decorators.js\":[function(require,module,exports){\n/**\n * Декораторы\n */\nRactive.decorators = {\n\n    'date-picker': function(node) {\n\n        var ractive = this\n\n        $(node).datepicker({\n            onSelect: function(dateValue) {\n\n                ractive.updateModel();\n\n                RG.events.publish('date.picked', ractive);\n            },\n            dateFormat: 'dd.mm.yy',\n            constrainInput: true,\n            showOn: 'button',\n            buttonText: 'Select...',\n            showButtonPanel: true,\n            maxDate: '0'\n        });\n\n        return {\n            teardown: function() {\n                $(node).datepicker(\"destroy\");\n            }\n        };\n    },\n    'scroll-bar': node => {\n\n        $(node).mCustomScrollbar({\n            autoHideScrollbar: true\n        });\n\n        return {\n            teardown() {\n                $(node).mCustomScrollbar('destroy');\n            }\n        };\n    }\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/global/extends.js\":[function(require,module,exports){\n/**\n * Подулючения директивы плавной анимации\n * https://github.com/ractivejs/ractive-transitions-fade\n */\nRactive.transitions.fade = require('ractive-transitions-fade');\n\n/**\n * Дополнения для underscore\n * TODO Вынести в отдельный файл\n */\n_.mixin({\n\n    getQueryParam: (url, name) => {\n\n        if (!url) url = window.location.href;\n        url = url.toLowerCase(); // This is just to avoid case sensitiveness\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\").toLowerCase();// This is just to avoid case sensitiveness for query parameter name\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    },\n\n    remove: (obj, key) =>{\n        delete obj[key];\n        return obj;\n    },\n    // ### _.objMap\n    // _.map for objects, keeps key/value associations\n    objMap: (input, mapper, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            obj[k] = mapper.call(context, v, k, input);\n            return obj;\n        }, {}, context);\n    },\n    // ### _.objFilter\n    // _.filter for objects, keeps key/value associations\n    // but only includes the properties that pass test().\n    objFilter: (input, test, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            if (test.call(context, v, k, input)) {\n                obj[k] = v;\n            }\n            return obj;\n        }, {}, context);\n    },\n    // ### _.objReject\n    //\n    // _.reject for objects, keeps key/value associations\n    // but does not include the properties that pass test().\n    objReject: (input, test, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            if (!test.call(context, v, k, input)) {\n                obj[k] = v;\n            }\n            return obj;\n        }, {}, context);\n    }\n});\n\n/*\n * Русификация дейтпикера(Агима)\n * TODO Вынести в отдельный файл\n */\n\nif (!!jQuery.datepicker) {\n    jQuery.datepicker.regional['ru'] = {\n        closeText: '',\n        prevText: 'Пред.',\n        nextText: 'След.',\n        currentText: 'Сегодня',\n        monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\n            'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        monthNamesShort: ['Янв.', 'Февр.', 'Март', 'Апрель', 'Май', 'Июнь',\n            'Июль.', 'Авг.', 'Сент.', 'Окт.', 'Нояб.', 'Дек.'],\n        dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        dayNamesShort: ['Вск.', 'Пон.', 'Вт.', 'Ср.', 'Чт.', 'Пт.', 'Суб.'],\n        dayNamesMin: ['вс','пн','вт','ср','чт','пт','сб'],\n        weekHeader: 'Sem.',\n        dateFormat: 'dd.mm.yy',\n        firstDay: 1,\n        isRTL: false,\n        showMonthAfterYear: false,\n        yearSuffix: ''\n    };\n\n    jQuery.datepicker.setDefaults(jQuery.datepicker.regional['ru']);\n}\n},{\"ractive-transitions-fade\":\"/var/www/pravo/node_modules/ractive-transitions-fade/dist/ractive-transitions-fade.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/global/modules.js\":[function(require,module,exports){\n/**************************************************************************************\n МОДУЛИ\n *************************************************************************************/\n\n/**\n * Подключения конфигурационного модуля\n */\nRG.config = RG.config || require('../config');\n\n/**\n * Подключения модуля, работающего с meta данными\n */\nRG.meta = RG.meta || require('../modules/Meta');\n\n/**\n * Устанавливаем окружение\n */\nRG.config.env = RG.meta.getEnv();\nRactive.DEBUG = (RG.meta.getEnv() === 'dev');\n\nRG.config.paths.root = (RG.config.env === 'dev') ? 'https://front-dev.rg.ru/app_dev.php/' : 'https://front.rg.ru/';\n\n/**\n * Подключения модуля логирования\n * Если RG.config.env 'dev' || 'test' тогда всё логируется в консоль\n */\nRG.logger = RG.logger || require('../modules/Logger');\n\n/**\n * Подключения модуля, обрабатывающего события\n * https://github.com/mroderick/PubSubJS\n */\nRG.events = RG.events || require('../modules/Events');\n\n/**\n * Подключения модуля, работающего с cookie\n * https://github.com/ScottHamper/Cookies \n */\nRG.session = RG.session || require('../modules/Session');\n\n/**\n * Подключения модуля, работающего строкой поиска\n */\nRG.query = RG.query || require('../modules/Query');\n\n/**\n * Подключения модуля, работающего с cookie\n * https://github.com/ScottHamper/Cookies\n */\nRG.storage = RG.storage || require('../modules/Storage');\n\n/**\n * Подключения модуля, работающего со временем\n */\nRG.datetime = RG.datetime || require('../modules/DateTime');\n\n/**\n * Подключения модуля, работающего с выделением текста\n */\nRG.selection = RG.selection || require('../modules/Selection');\n\n/**\n * Подключения модуля, работающего с DOM\n */\nRG.parser = RG.parser || require('../modules/Parser');\n\n/**\n * Подключение модуля определения типа экрана\n */\nRG.ScreenViewer = RG.ScreenViewer || require('../modules/ScreenViewer');\n\n/**\n * Подключение модуля подписок\n */\nRG.Subscribe = RG.Subscribe || require('../modules/Services/Subscribe');\n\n/**\n * Подключение модуля сохранённых статей\n */\nRG.Saved = RG.Saved || require('../modules/Services/Saved');\n\n/**\n * Подключение модуля просмотренных статей\n */\nRG.Viewed = RG.Viewed || require('../modules/Services/Viewed');\n\n/**\n * Подключение модуля геопределения\n */\nRG.Geolocation = RG.Geolocation || require('../modules/Services/Geolocation');\n\n/**\n * Подключение сервиса рекламных площадок\n */\nRG.Place = RG.Place || require('../modules/Services/Place');\n\n/**\n * Подключение модуля аналитики\n */\nRG.Analytics = RG.Analytics || require('../modules/Analytics/Analytics');\n\n/**\n * Подключение модуля счетчиков\n */\nRG.Counters = RG.Counters || require('../modules/Counters');\n\n/**\n * Подключение модуля рекламы\n */\nRG.Ads = RG.Ads || require('../modules/Ads/Ads');\n\n/**\n * Подключение модуля перестановки блоков\n */\nRG.BlocksShifter = RG.BlocksShifter || require('../modules/BlocksShifter');\n\n/**\n * Подключение модуля открытия/скрытия контента\n */\nRG.ContentToggler = RG.ContentToggler || require('../modules/ContentToggler');\n\n/**\n * Подключения модуля выбора контента по кнопке\n */\nRG.ContentHandler = RG.ContentHandler || require('../modules/ContentHandler');\n\n/**\n * Подключение блока перезагрузки контента\n */\nRG.LiveReload = RG.LiveReload || require('../modules/LiveReload');\n\n/**\n * Подключение блока перезагрузки контента\n */\nRG.RegionalNews = RG.RegionalNews || require('../modules/Services/RegionalNews');\n\n/**\n * Подключение модуля конвертации списка в выпадающее меню\n */\nRG.ListHeadToSelect = RG.ListHeadToSelect || require('../modules/ListHeadToSelect');\n\n/**\n* Подключение модуля верхнего меню\n*/\nRG.Menu = RG.Menu || require('../../blocks/header/b-menu/scripts/b-menu');\n\n\n/**\n * Формы РГ\n */\nRG.forms = RG.forms || {};\n},{\"../../blocks/header/b-menu/scripts/b-menu\":\"/var/www/pravo/www/app/Resources/public/blocks/header/b-menu/scripts/b-menu.js\",\"../config\":\"/var/www/pravo/www/app/Resources/public/scripts/config.js\",\"../modules/Ads/Ads\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ads.js\",\"../modules/Analytics/Analytics\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Analytics.js\",\"../modules/BlocksShifter\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/BlocksShifter.js\",\"../modules/ContentHandler\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/ContentHandler.js\",\"../modules/ContentToggler\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/ContentToggler.js\",\"../modules/Counters\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Counters.js\",\"../modules/DateTime\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/DateTime.js\",\"../modules/Events\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Events.js\",\"../modules/ListHeadToSelect\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/ListHeadToSelect.js\",\"../modules/LiveReload\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/LiveReload.js\",\"../modules/Logger\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Logger.js\",\"../modules/Meta\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Meta.js\",\"../modules/Parser\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Parser.js\",\"../modules/Query\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Query.js\",\"../modules/ScreenViewer\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/ScreenViewer.js\",\"../modules/Selection\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Selection.js\",\"../modules/Services/Geolocation\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Geolocation.js\",\"../modules/Services/Place\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Place.js\",\"../modules/Services/RegionalNews\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/RegionalNews.js\",\"../modules/Services/Saved\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Saved.js\",\"../modules/Services/Subscribe\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Subscribe.js\",\"../modules/Services/Viewed\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Viewed.js\",\"../modules/Session\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Session.js\",\"../modules/Storage\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Storage.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Adfox.js\":[function(require,module,exports){\n/*\n * Загрузчик баннеров AdFox\n * Основан на документации http://specs.adfox.ru/page/99/\n *\n * @Adfox.run - по событию загружаем и вставляем баннеры\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Adfox',\n\n    /*\n     * Инициализация баннера\n     *\n     * @bannerPlaceId - id-аттрибут элемента, куда вставлять баннер\n     * @requestSrc - ссылка запроса AdFox (можно получить из кода вставки)\n     *\n     */\n\n    initAdFoxBanner = ($ads, banners) => {\n\n        var tgNS = window.ADFOX.RELOAD_CODE,\n            initData = null;\n\n        $ads.html('');\n\n        let iteratorGlobal = 0;\n\n        _.each(banners, banner => {\n\n            if(!_.isEmpty(banner['uri'])) {\n\n                var adsId = 'adfox_' + Math.random().toString(36).substring(7),\n                    $adsWrapper = null,\n                    uri = banner['uri'],\n                    scroll = banner['scroll'];\n\n                $adsWrapper = $('<div />', {\n                    'id': adsId,\n                    'class': 'adfox_item'\n                });\n\n                // Получаем баннер\n                // через метод AdFox - tgNS\n                initData = tgNS.initBanner(adsId, uri);\n\n                // Вставляем в элемент\n                // контент баннера\n                $ads.append($adsWrapper.append(initData.html));\n\n                //tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                // Проверка на доскролл\n                if (!!scroll) {\n\n                    // Если это не фулскрин (костыль, потом убрать),\n                    if ($ads.closest('.b-ads').hasClass('b-ads_fullscreen')) {\n\n                        tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                    } else {\n\n                        RG.logger.log('loadBanner with appear ' + adsId);\n\n                        setAppear(adsId, {\n                            tgNS,\n                            initData,\n                            uri\n                        },\n                        function(){\n                            //checkBanner($adsWrapper);\n                        });\n\n                    }\n\n                } else {\n\n                    // Просто грузим баннер\n                    tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                    // Проверяем, если баннер не пустой - показываем\n                    //checkBanner($adsWrapper);\n                }\n\n                // МЕтод проверки\n                function checkBanner($adsWrapper) {\n\n                    var $adfoxSrcEl = null,\n                        iterator = 0,\n                        intervalId = null;\n\n                    if (!!$adsWrapper.find('[id^=\"AdFox_banner\"]').length) {\n\n                        $adsWrapper.hide();\n                        $adsWrapper.css('visibility', 'hidden');\n                        $adsWrapper.addClass('animated');\n\n                        intervalId = setInterval(function() {\n\n                            if (!$adsWrapper.find('[id^=\"AdFox_banner\"]').is(':empty') || iterator > 15) {\n                                clearInterval(intervalId);\n\n                                $adfoxSrcEl = $adsWrapper.find('[id^=\"AdFox_banner\"]');\n\n                                if (!$adfoxSrcEl.is(':empty')) {\n\n                                    $adsWrapper.show(function(){\n\n                                        $adsWrapper.addClass('fadeIn');\n                                        $adsWrapper.css('visibility', 'visible');\n\n                                        // Укастыливание из-за canary\n                                        $adfoxSrcEl.css('height', $adfoxSrcEl.height() + '.001');\n                                    });\n                                }\n                            }\n\n                            iterator++;\n\n                        }, 1000);\n\n                    } else {\n\n                        $adsWrapper.show(function() {\n                            $adsWrapper.addClass('fadeIn');\n                            $adsWrapper.css('visibility', 'visible');\n                        });\n\n                    }\n                    \n                }                \n\n                // Мы сделали тут https://yadi.sk/i/plLlmaMoqGcHW\n                // Как удалялку пустого баннера\n                /*setTimeout(function(){\n\n                    checkBannerFail($adsWrapper.find('iframe'), $adsWrapper.find('iframe')[0]);\n\n                }, 5000);*/\n\n                /*function checkBannerFail($iframe, iframe) {\n\n                    RG.logger.log($iframe.attr('id'));\n                    RG.logger.log(iframe.contentWindow);\n                    RG.logger.log(iframe.contentWindow.adfoxBannerFail);\n                    RG.logger.log('iframe.contentWindow.adfoxBannerFail ' + iframe.contentWindow.adfoxBannerFail);\n\n                    //return iframe.contentDocument.adfoxBannerFail;\n                }*/\n\n            } else if (!_.isEmpty(banner['code'])) {\n\n                $ads.append(banner['code']);\n            }\n        });\n\n    },\n\n    // Устанавливаем поведение по показу\n    setAppear = (id, adfox, callb) => {\n\n        // Вешаем плагин на элемент\n        $(`#${id}`).appear();\n\n        // Подписываем событие\n        $(`#${id}`).one('appear', function(e, $all_appeared_elements) {\n\n            // Загружаем баннер\n            adfox.tgNS.loadBanner(adfox.initData.pr1, adfox.uri, adfox.initData.sessionId);\n\n            callb();\n        });\n\n        // Принудительно загружаем, если в пределах экрана\n        $.force_appear();\n\n    },\n\n    setPlaces = (topic, places) => {\n\n        RG.logger.info(topic);\n\n        for(let place in places) {\n\n            let id = `#ads${place}`,\n                $place = $(id);\n            \n            if($place.length) {\n\n                initAdFoxBanner($place, places[place]);\n            }\n        };\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        //RG.events.subscribe(`${_modulePrefix}.run`, initAdFox);\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ads.js\":[function(require,module,exports){\n/*\n * Модуль работы с рекламой\n * Инициализирует отдельные модули\n *\n *\n */\n\nvar\n\n    places = [],\n    //resolution = null, // Назначаем при первой инициализации\n\n\t// модуль работы с AdFox баннерами\n\tAdfox = require('./Adfox'),\n\n    // Модуль работы с видео баннерами Teads\n    Teads = require('./Teads'),\n\n    // Модуль директа\n    YaDirect = require('./YaDirect'),\n\n    // Модуль Ivengo\n    Ivengo = require('./Ivengo'),\n\n    // Модуль Turboroller\n    Turboroller = require('./Turboroller'),\n\n    NativeRoll = require('./NativeRoll'),\n\n\t// Наклбас Ефима для Adfox баннеров\n\tinit = () => {\n\t\t\n        // Инициализация адфокса\n        Adfox.init();\n\n        // Что-то от Ефима\n        // getBanners();\n\n        RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n            //if(screenInfo.type !== resolution) { вынесли в модуль ScreenViewer\n\n                //RG.logger.log(screenInfo);\n\n            //resolution = screenInfo.type;\n            filterResolution(places, screenInfo.type);\n                \n            //}\n        });\n\t},\n\n\t/*getBanners = () => {\n\n        var platform = RG.meta.getPlatform() || '/static/main/ind';\n\n        //$.get(`${RG.config.paths.root}ads/platform${platform}`).then(data => {\n        $.get(`https://front.rg.ru/ads/platform${platform}`).then(data => {\n\n            places = data;\n\n            filterResolution(places, RG.ScreenViewer.getScreenInfo().type);\n\n            // start-- Добавил Леха, надо понять, как мы это уберем          \n            RG.events.publish('Adfox.platform.loaded', data);\n            // end-- Добавил Леха, надо понять, как мы это уберем\n\n        });\n    },*/\n\n    filterResolution = (data, resolution) => {\n\n        var filteredPlaces = {};\n\n        _.forEach(data, (place, index) => {\n\n            filteredPlaces[index] = _.filter(place, banner => {\n\n                return parseInt(banner[resolution]);\n            });\n        });\n\n        // Передаем в адфокс площадки\n        RG.events.publish('Adfox.places.set', filteredPlaces);\n\n        // Передаем в турбороллер площадки\n        RG.events.publish('Turboroller.places.set', filteredPlaces);\n\n        // Передаем в директ площадки\n        RG.events.publish('YaDirect.places.set', filteredPlaces);\n\n        // Передаем в партнерки площадки\n        //RG.events.publish('Partners.places.set', filteredPlaces);\n    };\n\nmodule.exports = {\n\n    // Перфиксы\n    Adfox_modulePrefix: Adfox._modulePrefix,\n    Teads_modulePrefix: Teads._modulePrefix,\n    YaDirect_modulePrefix: YaDirect._modulePrefix,\n    Ivengo_modulePrefix: Ivengo._modulePrefix,\n\tTurboroller_modulePrefix: Turboroller._modulePrefix,\n\n    // Модули\n    Adfox,\n    Teads,\n    YaDirect,\n    Ivengo,\n    Turboroller,\n    NativeRoll,\n\n\tinit\n};\n},{\"./Adfox\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Adfox.js\",\"./Ivengo\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ivengo.js\",\"./NativeRoll\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/NativeRoll.js\",\"./Teads\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Teads.js\",\"./Turboroller\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Turboroller.js\",\"./YaDirect\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/YaDirect.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Ivengo.js\":[function(require,module,exports){\n/*\n * Загрузчик баннеров Ivengo\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Ivengo',\n\n    // Окружение\n    _ENV = RG.config.env,\n\n    libSrc = '//s.i-vengo.com/js/ivengo.min.js',\n\n    // ID компании\n    _placeId = {\n        prod: '18s59u0l2mb',\n        //dev: '00000000' \n        dev: '18s59u0l2mb'\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc)\n            .done(function(){\n                \n                // Пускаем событие готовности\n                RG.events.publish(`${_modulePrefix}.lib.loaded`);\n            });        \n\n    },\n\n    setup = () => {\n\n        var typeScreen = RG.ScreenViewer.getScreenInfo().type,\n            iVengo = window.iVengo || null;\n\n        // Если мы в телефоне\n        if(typeScreen === 'mobile' && !!iVengo) {\n\n            // Инициализация\n            iVengo.init({\n                appId: _placeId[_ENV],\n                //appId: '18s59u0l2mb',\n                logLevel: 'info'\n            });\n        \n            // Для отображения не полноэкранного баннера\n            // Несколько типов рекламы в одном запросе\n            iVengo.fillSlot({\n                adType: ['standart', 'cube', 'inline_video', 'slim_video'],\n                width: '100%',\n                mobileOnly: true\n            }); \n\n            // Отображение полноэкранного баннера\n            iVengo.showInterstitial({\n                adType: 'fullscreen'\n            });\n\n        }\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    // Запуск модуля\n    run = () => {\n\n        initLib();\n\n        RG.events.subscribe(`${_modulePrefix}.lib.loaded`, setup);\n    },\n\n    // Глобальная инициализация\n    init = () => {\n\n        // Включаем по событию из Adfox\n        RG.events.subscribe(`${_modulePrefix}.init`, run); \n\n        // Запуск, после удалим и будет запуск через Adfox\n        //run();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/NativeRoll.js\":[function(require,module,exports){\n/*\n * Загрузчик баннеров Teads\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'NativeRoll',\n\n    _ENV = RG.config.env,\n\n    // Устанавливаем баннеры\n    setup = () => {\n\n        var \n            //target = document.getElementsByClassName('b-material-wrapper')[0],\n            target = $('.b-material-wrapper > article')[0],\n            param = {\n                onError: function (e) { console.log(e); }\n            };\n\n        // Заполняем параметрами\n        param.gid = '5715fa7b64225d0e308b456e';\n\n        // Если на тестовом, то включаем отладку\n        if (_ENV === 'dev') {\n            param.debug = true;\n        }\n\n        // Инициализируем плеер\n        SeedrPlayer(target, 20, param);\n\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        (function (a, b, c, d, e, f, g, h) {\n\n         g = b.createElement(c);\n         g.src = d;\n         g.type = \"application/javascript\";\n         g.async = !0;\n         h = b.getElementsByTagName(c)[0];\n         h.parentNode.insertBefore(g, h);\n         a[f] = [];\n         a[e] = function () {\n                a[f].push(Array.prototype.slice.apply(arguments));\n            }\n\n        })(window, document, \"script\", (document.location.protocol === \"https:\" ? \"https:\" : \"http:\") + \"//cdn01.nativeroll.tv/js/seedr-player.min.js\", \"SeedrPlayer\", \"seedrInit\");\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        // Инициализируем библиотеку\n        initLib();\n\n        // Устанавливаем баннеры\n        setup();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Teads.js\":[function(require,module,exports){\n/*\n * Загрузчик баннеров Teads\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Teads',\n\n    _ENV = RG.config.env,\n\n    _placeId = {\n        mobile: {\n            inread: {\n                prod: 25863,\n                dev: 25863//48562\n            }\n        },\n        desktop: {\n            inread: {\n                prod: 19301,\n                dev: 19301//48561\n            },\n            inboard: {\n                prod: 25888,\n                dev: 25888//48717\n            }\n        }\n    },\n\n    // Классы контейнеров для баннеров\n    adsElementsClasses = 'teads',\n\n    libSrc = '//cdn.teads.tv/media/format.js',\n\n    // Баннеры\n    banners = {\n\n        mobile: [\n\n            // Inread Mobile\n            /*{\n                pid          : _placeId.mobile.inread[_ENV]\n                ,lang        : 'ru'\n                ,slot        : '.b-material-wrapper article > p'\n                ,format      : 'inread'\n                ,minSlot     : 1\n                ,components  : { skip: {delay : 0}}\n                ,mutable     : true\n                ,css         : \"margin: 0px 0px 20px;\"\n            },  */         \n\n            {\n               pid          : _placeId.mobile.inread[_ENV]\n               ,lang        : \"ru\"\n               ,slot        : '[itemprop=\"articleBody\"] > p'\n               ,format      : \"inread\"\n               ,components  : { skip: {delay : 0}}\n               ,mutable     : true\n               ,css         : \"margin: 0px 0px 20px;\"\n            }\n\n        ],\n\n        desktop: [\n\n            // Inboard\n            /*{\n               pid          : _placeId.desktop.inboard[_ENV]\n               ,lang        : 'ru'\n               //,slot        : '.b-header_article'\n               ,slot        : '#rgb_header__menu #menu .b-menu'\n               ,format      : 'inboard'\n               ,className   : `${adsElementsClasses} teads_inboard`\n               ,mobile      : false\n               ,minSlot     : 1\n               ,components  : { skip: {delay : 0}}\n               ,mutable     : true\n               ,css         : \"padding: 10px 0px;\"\n            },*/           \n\n            {\n                   pid          : _placeId.desktop.inboard[_ENV]\n                   ,lang        : \"en\"\n                   ,slot        : '.l-page__wrapper #rgb_header_article #rgb_header__content'\n                   ,format      : \"inboard\"\n                   ,mobile      : false\n                   ,minSlot     : 3\n                   ,components  : { skip: {delay : 0}}\n                   ,mutable     : true\n                   ,css         : \"margin: 15px 0px 0px;\"\n            },\n\n            // Inread Desktop\n            {\n                pid         : _placeId.desktop.inread[_ENV]\n                ,lang       : 'ru'\n                ,slot       : '.b-material-wrapper article > p'\n                ,format     : 'inread'\n                ,className  : `${adsElementsClasses} teads_inread`\n                ,mobile      : false\n                ,minSlot     : 1\n                ,components  : { skip: {delay : 0}}\n                ,mutable     : true\n                ,css         : \"margin: 0px 0px 20px;\"\n            }\n\n        ]\n    },\n\n    // Устанавливаем баннеры\n    setup = () => {\n\n        // Задаем пространство имен\n        window._ttf = window._ttf || [];\n\n        // Помещаем баннеры в хранилище Teads\n        $.each(banners, function(index, bannersGroup){\n\n            $.each(bannersGroup, function(index, banner){\n                _ttf.push(banner);\n            });\n        });\n\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc);\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        // Устанавливаем баннеры\n        setup();\n\n        // Инициализируем библиотеку\n        initLib();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/Turboroller.js\":[function(require,module,exports){\n/*\n * Загрузчик баннеров Ivengo\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Turboroller',\n\n    // Окружение\n    _ENV = RG.config.env,\n\n    // Класс блоков для поиска\n    _bannersClass = '.turboroller', \n\n    // ID компании\n    _placeId = {\n        prod: '9429',\n        dev: '9429'\n    },\n\n    // Инициализируем баннер\n    initBanner = (placeId) => {\n\n        var $place = $(`#ads${placeId}`),\n            $dummy = $('<div />'),\n            elId = null,\n            prefixId = 'turbo',\n            postfixId = 'roller' + Math.random().toString(36).substring(7),\n            urlReq = null;\n\n        if (!!$place.length) {\n\n            // Составляем id\n            elId = prefixId + postfixId;\n\n            // Составляем url запроса\n            urlReq = `//engine.turboroller.ru/Route?place=rg.ru-${_placeId[_ENV]}&ctx=${escape(document.title)}&r=${Math.floor(Math.random() * 99999999999)}&r2=${postfixId}&ct1=${document.defaultCharset}&ct2=${document.characterSet}`; \n\n            // Настраиваем\n            $dummy\n                .addClass('b-ads__tgb')\n                .attr('id', elId);\n\n            $place.append($dummy);\n\n            loadBanner(urlReq);\n\n        }\n\n    },\n\n    // Инициализация библиотеки\n    loadBanner = (url) => {\n\n        // Грузим библиотеку\n        $.getScript(url)\n            .done(function(){\n                \n                // Пускаем событие готовности\n                RG.events.publish(`${_modulePrefix}.loaded`);\n            });        \n\n    },\n\n    // Ищем код turboroller\n    setPlaces = (topic, places) => {\n\n        // Проходим по всем площадкам\n        $.each(places, function(placeId, place) {\n\n            // Проходим по баннерам в площадке\n            $.each(place, function(index, el) {\n\n                var turboroller = el.turboroller || null;\n\n                if (turboroller) {\n\n                    initBanner(placeId);\n                }\n\n            });\n\n        });\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Ads/YaDirect.js\":[function(require,module,exports){\n/*\n * Загрузчик Yandex Direct\n *\n */\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'YaDirect',\n\n    directPlaceId = '29789',\n\n    libSrc = '//an.yandex.ru/system/context.js',\n\n    // Классы контейнеров для баннеров\n    adsElementsClasses = 'ya-direct-root',\n\n    // Класс-модификатор загруженного баннера\n    adsLoadedElementsClasses = 'ya-direct_loaded',\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc);\n\n    },\n\n    // Получить STAT_ID\n    getStatId = (param) => {\n\n        var stat_store = null,\n            screenInfo = require('../ScreenViewer').getScreenInfo(),\n            screenInfoMap = {\n                mobile: 1,\n                tablet: 2,\n                tabletLandscape: 3,\n                desktop: 4,\n                desktopFull: 5\n            };\n\n        /*\n\t\t *  PlaceId (1-99) Разделитель (0) Пользовательское разрешение экрана (1-5) Разделитель (0) ID эксперимента (1-99)\n\n\t\t\tПользовательское разрешение экрана:\n\t\t\t1 - Телефон\n\t\t\t2 - Планшет\n\t\t\t3 - Планшет(ландшат)\n\t\t\t4 - Монитор\n\t\t\t5 - Широкоформатный\n\n\t\t\tНапример: 250501\n\n\t\t\tМаксимальное возможное число 16 777 215 https://yandex.ru/support/partner/products-direct/variables-description.xml\n\t\t*\n\t\t*/\n\n        stat_store = [\n            param.placeAdsId.replace('ads', ''), // площадка #ads\n            0, // разделитель\n            screenInfoMap[screenInfo.type], // разрешение экрана\n            0, // разделитель\n            1 // ID эксперимента\n        ];\n\n        /*stat_store = [\n            param.mobile,\n            param.tablet,\n            param.tabletLandscape,\n            param.desktop,\n            param.desktopFull\n        ];*/\n\n        //return `PlaceId0${stat_store.join('')}`;\n        return `${stat_store.join('')}`;\n\n    },\n\n    // Запускаем баннер\n    runBanners = ($place, banners) => {\n\n        $.each(banners, function(index, banner) {\n\n            var prop = banner.yadirect;\n\n            // Если есть директ, запускаем\n            if(!!prop) {\n\n                prop = JSON.parse(prop);\n\n                // Помещаем в площадку контейнер для директа\n                var $direct = $('<div />'),\n                    directElId = `yaDirect_${Math.random().toString(36).substring(7)}`;\n\n                // Настраиваем контейнер\n                $direct.attr({\n                    'id': directElId,\n                    'class': `ya-direct-${prop.type} ${adsElementsClasses} ${adsLoadedElementsClasses}`\n                });\n\n                // Вставляем баннер\n                $place.append($direct);\n\n                // Задаем пространство имен\n                window.yandex_context_callbacks = window.yandex_context_callbacks || [];\n\n                // Дополняем параметры\n                // Stat_id\n                prop.stat_id = getStatId({\n                    placeAdsId: $place.attr('id'),\n                    param: banner\n                });\n\n                // Инициализируем баннер\n                window.yandex_context_callbacks.push(function() {\n                    Ya.Direct.insertInto(directPlaceId, directElId, prop);\n                });\n\n            }\n\n        });\n\n\n\n        /*{\n            stat_id: 1,\n            ad_format: \"direct\",\n            type: \"posterHorizontal\",\n            limit: 2,\n            favicon: true,\n\n            font_size: .9,\n            font_family: 'arial',\n            border_type: 'block',\n            header_bg_color: 'D7D7D7',\n            border_color: 'D7D7D7',\n            title_color: '990000',\n            bg_color: 'ffffff',\n            url_color: '006699',\n            all_color: '000000',\n            text_color: '000000',\n            hover_color: '0066FF'\n        }*/\n\n    },\n\n    // Готовим места\n    setPlaces = (topic, places) => {\n\n        for(let place in places) {\n\n            let id = `#ads${place}`,\n                $place = $(id);\n\n            if($place.length) {\n\n                // Инициализируем баннер\n                // Передаем объект и параметры\n                runBanners($place, places[place]);\n            }\n        };\n\n        // Когда все баннеры установлены\n        // инициализируем\n        initLib();\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{\"../ScreenViewer\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/ScreenViewer.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Analytics.js\":[function(require,module,exports){\n/*\n * Модуль инициализации аналитики\n *\n */\n\nvar\n\n    // Модуль Чартбита\n    // Chartbeat = require('./Chartbeat'),\n\n    // Модуль Google Аналитики\n    Ga = require('./Ga'),\n\n    // Модуль Contentinsights для аналитики статей\n    Contentinsights = require('./Contentinsights'),\n\n    // Инициализация модулей\n    init = () => {\n        // Chartbeat.init();\n        Ga.init();\n        Contentinsights.init();\n    },\n\n    // Запуск модулей\n    run = () => {\n        // RG.events.publish(`${Chartbeat._modulePrefix}.run`);\n        RG.events.publish(`${Ga._modulePrefix}.run`);\n    };\n\nmodule.exports = {\n    // Chartbeat,\n    Ga,\n    Contentinsights,\n    init,\n    run\n}\n},{\"./Contentinsights\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Contentinsights.js\",\"./Ga\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Ga.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Contentinsights.js\":[function(require,module,exports){\n/*\n * Модуль Google аналитики\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Contentinsights',\n\n    // Наш ID сайта\n    _moduleId = '1339',\n\n    // Инициализация библиотеки\n    loadLib = () => {\n\n        // Взято отсюда contentinsights.com\n        // личный кабинет\n        (function (d, s) {\n        var sf = d.createElement(s); sf.type = 'text/javascript'; sf.async = true;\n        sf.src = (('https:' == d.location.protocol) ? 'https://d7d3cf2e81d293050033-3dfc0615b0fd7b49143049256703bfce.ssl.cf1.rackcdn.com' : 'http://t.contentinsights.com')+'/stf.js';\n        var t = d.getElementsByTagName(s)[0]; t.parentNode.insertBefore(sf, t);\n        })(document, 'script');\n\n    },\n\n    // Настраиваем\n    setup = () => {\n\n        var _ain = {\n                id: _moduleId,\n                url: RG.meta.getMaterialUrl() || '',\n                postid: RG.meta.getMaterial() || '',\n                title: RG.meta.getMaterialTitle() || '',\n                pubdate: RG.meta.getPubTime() || '',\n                authors: RG.meta.getAuthorName() || '',\n                sections: RG.meta.getSectionName() || '',\n                //tags: \"news, politic, white house\",\n                //comments: \"24\"\n        };\n\n        // Как глобальная переменная\n        window._ain = _ain;\n\n        RG.logger.log(_ain);\n\n    },\n\n    // Инициализация\n    init = () => {\n        RG.logger.log('Contentinsights init');\n\n        RG.events.subscribe(`${_modulePrefix}.run`, run);\n    },\n\n    // Запуск\n    run = () => {\n\n        RG.logger.log('Contentinsights run');\n\n        setup();\n        loadLib();\n    };\n\nmodule.exports = {\n    init,\n    _modulePrefix\n}\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Analytics/Ga.js\":[function(require,module,exports){\n/*\n * Модуль Google аналитики\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Ga',\n\n    _gaId = 'UA-7039329-31',\n\n    // Конфигурация dimensions\n    dimensionsConf = {\n        1: \"rubric:id\" // ID рубрики\n    },\n\n    // Загрузка и инициализация библиотеки\n    loadLib = () => {\n\n        // Взято отсюда developers.google.com/analytics/devguides/collection/analyticsjs/\n        $.getScript('//www.google-analytics.com/analytics.js');\n    },\n\n    // Устанавливаем dimensions\n    dimensionsSet = () => {\n\n        $.each(dimensionsConf, function(dimension, prop){\n\n            var targetLabel = null,\n                val = null;\n\n            // Устанавливаем селектор элемента\n            targetLabel = `meta[property=\"${prop}\"]`;\n\n            // Получаем значение\n            val = $(targetLabel).attr('content');\n\n            // Если значение есть, то устанавливаем\n            // соответственный dimension\n            if (!!val) {\n\n                // Если проверка на длину,\n                // округляем\n                if (prop === 'article:length') {\n                    val = Math.floor(+val/100)*100;\n                }\n\n                RG.logger.log('article:length = ' + val);\n\n                ga('set', `dimension${dimension}`, val);\n\n            }\n\n        });\n\n    },\n\n    // Настройка стандартных параметров\n    setup = () => {\n\n        var customGaId = RG.meta.getGaId(),\n            //customGaURI = RG.meta.getGaURI();\n            customGaURI = RG.meta.getProjectUri();\n\n    \t// Настройка глобального обЪекта\n    \twindow.ga = window.ga || function(){ \n    \t\tga.q = ga.q || [];\n    \t\tga.q.push(arguments);\n    \t};\n\n    \tga.l = +new Date;\n\n        RG.logger.log('ga id: ' + customGaId);\n        RG.logger.log('ga GaURI: ' + customGaURI);\n\n    \t// Настройки счетчика\n        ga('create', _gaId, 'rg.ru');\n\n        // Если есть кастомный счетчик для GA\n        if(!!customGaId) {\n            ga('create', customGaId, 'rg.ru', {'name': customGaURI});\n        }\n\n        //ga('create', 'UA-7039329-30', 'auto');\n\n        // Устанавливаем dimensions\n        dimensionsSet();\n\n        // Отправляем информацию по экрану\n        ga('set', 'dimension2', RG.ScreenViewer.getScreenInfo().type);\n\n        ga('require', 'displayfeatures');\n        ga('send', 'pageview');\n    },\n\n    // Регистрация одного события в GA\n    // @data\n    //\ttype - тип события (send или set)\n    //\tparam - объект с параметрами\n    //\t\ttagLabel - лейбл, по которому искать элемент\n    //\t\tevent - событие, по которому срабатывает счетчик\n    //\t\t\n    //\t\thitType -  тип события\n    //\t\teventCategory - категория события\n    //\t\teventAction - действие по событию\n    //\t\teventLabel - подпись события\n    //\t\teventValue - значение события\n\n    register = (data) => {\n\n    \tvar type = data.type,\n    \t\tparam = data.param;\n\n    \t// Вешаем слушателя\n    \t$(param.tagLabel).on(param.event, function(e) {\n\n            sendTracker({\n                type: type, \n                param: {\n                    hitType: param.hitType,\n                    eventCategory: param.eventCategory,\n                    eventAction: param.eventAction,\n                    eventLabel: param.eventLabel,\n                    eventValue: param.eventValue\n                }\n            });\n\n            // старый код\n    \t\t/*ga(type, {\n\t\t\t\thitType: param.hitType,\n\t\t\t\teventCategory: param.eventCategory,\n\t\t\t\teventAction: param.eventAction,\n\t\t\t\teventLabel: param.eventLabel,\n\t\t\t\teventValue: param.eventValue\n    \t\t});*/\n\n    \t\tRG.logger.log(`send GA, event: ${param.event}, on element ${param.tagLabel}`);\n\n    \t});\n\n    \tRG.logger.log(`Зарегестрировано событие GA, event: ${param.event}, на элементе ${param.tagLabel}`);\n\n    },\n\n    // Регистрация пакета событий GA\n    registerList = (data) => {\n\n    \tvar list = data.list,\n    \t\tmeta = data.meta;\n\n    \t// Проходим по списку событий\n    \t$.each(list, function(index, item){\n\n    \t\t// ОБрабатываем каждый набор событий\n\t    \t// @type - тип события (send или set)\n\t    \t// @param - параметры отправляемого события\n\t    \t$.each(item, function(type, param){\n\n\t    \t\t// Регистрируем все события\n\t    \t\t$.each(param, function(index, paramItem){\n\n\t    \t\t\tregister({ type: type, param: paramItem });\n\n\t    \t\t});\n\n\t    \t});\n\n    \t});\n\n    },\n\n    // Отправка события\n    // @type - тип события, по умолчанию send\n    // @param - передаваемые параметры\n    sendTracker = (data) => {\n\n        var type = data.type || 'send',\n            param = data.param;\n\n        // отправляем\n        ga(type, {\n            hitType: param.hitType,\n            eventCategory: param.eventCategory,\n            eventAction: param.eventAction,\n            eventLabel: param.eventLabel,\n            eventValue: param.eventValue,\n            nonInteraction: param.nonInteraction || true\n        });\n\n        RG.logger.log(`Отправлены GA данные, по событию ${type}`);\n        RG.logger.log('Отправлены GA данные, с параметрами', param);\n\n    },\n\n    // Инициализация\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, run);\n    },\n\n    // Запуск\n    run = () => {\n        loadLib();\n        setup();\n    };\n\nmodule.exports = {\n    _modulePrefix,\n    register,\n    registerList,\n    sendTracker,\n    init\n}\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/BlocksShifter.js\":[function(require,module,exports){\n/*\n* BlocksShifter\n* Модуль перестановки блоков в зависимости от ширины экрана\n*\n* Ширина высчитывается, как в медиазапросах - min-width\n* То есть блок показывается в контейнере начиная с полученной ширины и больше\n*\n* @BlocksShifter.run - запускаем смещение блоков\n* \n*/\n\nvar\n    // Подключаем модуль, проверки путей\n    keypather = require('keypather')(),\n\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс модуля\n    _modulePrefix = 'BlocksShifter',\n\n    // Стандартный класс контейнеров\n    _shiftContainerLabel = '.shiftContainer',\n\n    // Модификатор активного контейнера\n    _shiftContainerActiveClass = 'shiftContainer_active',\n\n    // Аттрибут, с которого считываем id блока\n    _shiftContainerId = 'data-blocksShifterId',\n\n    // Аттрибут, с которого считываем данные о ширине экрана\n    _shiftContainerWidthHash = 'data-blocksShifterWidthHash',\n\n    // Хранилище методов,\n    // соответствующих блоку\n    _callbackList = {},\n\n    /*\n     * Методы\n     * \n     */\n\n    // Перемещаем блоки\n    shiftBlocks = (topic, screenProp) => {\n\n        // Находим контейнеры для модуля\n        var $shiftContainer = $(_shiftContainerLabel);\n\n        // Если элементы есть\n        if (!!$shiftContainer.length) {\n\n            // Анализируем элемент\n            checkToShift($shiftContainer, screenProp);\n\n        }\n\n    },\n\n    // Перемещаем один блок\n    /*shiftBlock = (shiftContainerIdValue) => {\n\n        var $containers = $(`[${_shiftContainerId}=${shiftContainerIdValue}]`);\n\n    },*/\n\n    // Анализируем элементы\n    // и отбираем те, которые подходят\n    // под тип экрана\n    checkToShift = ($shiftContainer, screenProp) => {\n\n        // Получаем параметры,\n        // которые будут использоваться в сдвиге\n        var screenType = screenProp.type; // тип экрана\n\n        $shiftContainer.each((index, el) => {\n\n            var $el = $(el),\n                shiftContainerWidthHashValue = $el.attr(_shiftContainerWidthHash),\n                shiftContainerIdValue = $el.attr(_shiftContainerId),\n                $activeBlock = null;\n\n            // В блоке разрешений может быть несколько\n            // Поэтому преобразуем строку в массив\n            // и проходим по нему\n            shiftContainerWidthHashValue = shiftContainerWidthHashValue.split(' ');\n\n            $.each(shiftContainerWidthHashValue, (index, el) => {\n\n                // Если блок подходит под тип экрана\n                if (el === screenType) {\n\n                    // Находим активный блок\n                    $activeBlock = $(`[${_shiftContainerId}=${shiftContainerIdValue}].${_shiftContainerActiveClass}`);\n\n                    //RG.logger.log('Шифтану ка я блок - #' + $activeBlock.attr('id'));\n                    \n                    // Обрабатываем блок\n                    processBlock($el, $activeBlock, shiftContainerIdValue, screenType, _shiftContainerActiveClass);\n\n                }\n\n            });\n\n        });\n\n    },\n\n    /*\n     * Инструменты\n     * \n     */\n\n    // Обрабатываем блок\n    processBlock = ($el, $activeBlock, shiftContainerIdValue, screenType, activeClass) => {\n\n        // Если контейнер пустой,\n        // то заполняем его\n        if (!$el.children().length) {\n\n            // Заполняем контентом\n            // RIP Устарело!!\n            //$el.html(getBlockContent($activeBlock));\n\n            // Заменяем содержимое элемента\n            // контентом\n            $activeBlock\n                .children()\n                .appendTo($el.empty());\n        }\n\n        // Если есть обратный вызов на этом блоке\n        // вызываем его\n        if (keypather.in(_callbackList, `${shiftContainerIdValue}.${screenType}.callback`)) {\n\n            // Передаем туда элемент в который мы будем помещать контент\n            // Передаем элемент, из которого контент вытягиваем\n            // Передаем сам модуль\n            _callbackList[shiftContainerIdValue][screenType].callback($el, $activeBlock);\n\n        }\n\n        // удаляем активный класс у бывшего :)\n        $activeBlock.removeClass(activeClass);\n\n        // добавляем активный класс\n        $el.addClass(activeClass);\n\n    },\n\n    // Получаем каонтент блока, по его Id\n    getBlockContent = ($activeBlock) => {\n\n        var content = null;\n\n        // если блок есть\n        if (!!$activeBlock.length) {\n\n            // и возвращаем контент\n            content = $activeBlock.html();\n        }\n\n        return content;\n\n    },\n    \n    // Привязываем к блоку действие (callback)\n    // Получаем массив функций, и регистрируем каждую\n    // @param - объект настроек, состоит из\n    // @blockId - имя блока, в котором будет вызов\n    // @screenType - тип экрана, в котором будет вызов\n    // @callback - функция. которая вызовется\n    setCallback = (callbackList) => {\n\n        $.each(callbackList, (index, callbackParam) => {\n\n            var blockId = callbackParam.blockId || null,\n                screenType = callbackParam.screenType.split(' ') || null,\n                callback = callbackParam.callback || null;\n\n            try { \n\n                // Если есть все данные,\n                // то назначаем обработчик\n                if (!!(blockId && screenType && callback)) {\n\n                    // добавляем Блок в список\n                    if (!_callbackList[blockId]) {\n                        _callbackList[blockId] = {};\n                    }\n\n                    // Проходим по всем типам экрана\n                    $.each(screenType, (index, screenTypeItem) => {\n\n                        // добавляем в блоке тип\n                        if (!_callbackList[blockId][screenTypeItem]) {\n                            _callbackList[blockId][screenTypeItem] = {};\n                        }\n\n                        // Назначаем обработчик\n                        _callbackList[blockId][screenTypeItem].callback = callback;\n\n                    });                    \n\n                } else {\n                    throw new Error('не указаны все данные для функции');\n                }\n\n            } catch (err) {\n                RG.logger.error(`Модуль ${_modulePrefix}, функция setCallback.\\nОшибка: ${err}`);\n            }\n\n        });\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, shiftBlocks);\n    };\n\n// Экспортируем как модуль\n// передаем метод установки собственных функций\n// и метод инициализации\nmodule.exports = {\n    setCallback,\n    //shiftBlock,\n    _modulePrefix,\n    init\n};\n},{\"keypather\":\"/var/www/pravo/node_modules/keypather/index.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/ContentHandler.js\":[function(require,module,exports){\n/*\n * Модуль раскрывающихся блоков по клику на элемент\n *\n * Передаем элементы,\n * кликая на которые,\n * изменяем связанные с ними блоки.\n *\n * Изменение осуществляется css\n *\n * Когда активно - класс is-active\n * По инициализации нужно передать дефолтный активный элемент\n *\n */\n\nfunction Module(root, options) {\n\n    var $root = $(root),\n        _options = null,\n        defaults = {\n            labelList: '.b-content-handler__btn',\n            contentList: '.b-content-handler__ctx',\n            active: 'is-active',\n            attrFind: 'data-content-handler'\n        };\n\n    this.options = _options = $.extend({}, defaults, options);            \n\n    // Родительский контейнер\n    this.$root = $root;\n\n    // Кнопки\n    this.$labelList = $root.find(_options.labelList);\n\n    // Контент\n    this.$contentList = $root.find(_options.contentList);\n\n    // Стор активной кнопки\n    this.$activeBtn = null;\n\n    // Стор активного элемента\n    this.$activeCtx = null;\n\n    // Инициализируем\n    this.init();\n\n};\n\n// Коротака язапись для удобства\nModule.fn = Module.prototype;\n\n/*\n * Методы\n *\n */\n\n// Выбор элемента\nModule.fn.select = function($btn, ctxLabel) {\n\n    var $ctx = null;\n\n    // Удаляем активный класс у бывших элементов\n    this.deselect();\n\n    // выделяем кнопку\n    $btn.addClass(this.options.active);\n\n    // Сохранение выбранной кнопки\n    this.storeBtn($btn);\n\n    // Находим связанный с кнопкой элемент\n    $ctx = this.$root.find(ctxLabel);\n\n    // RG.logger.log($ctx);\n    // RG.events.publish('ContentHandler.select', {});\n\n    if (!!$ctx) {\n\n        // добавляем активный класс у выбранного элемента\n        $ctx.addClass(this.options.active);\n\n        // сохраняем выделенный элемент\n        this.storeCtx($ctx);    \n\n    } else {\n        throw new Error(`Не найден выбранный элемент, проверьте аттрибут поиска элемента: ${this.options.attrFind}`);\n    }\n\n    return this;\n\n};\n\n// Удаление выбора элемента\nModule.fn.deselect = function() {\n\n    // Удаляем активный класс у кнопки\n    if (!!this.$activeBtn) {\n        this.$activeBtn.removeClass(this.options.active);\n    }\n\n    // Удаляем активный класс у контента\n    if (!!this.$activeCtx) {\n        this.$activeCtx.removeClass(this.options.active);\n    }\n\n    return this;\n\n};\n\n// Сохранение выбранной кнопки\nModule.fn.storeBtn = function($el) {\n\n    this.$activeBtn = $el;\n\n    return this;\n\n};\n\n// Сохранение выбранного элемента\nModule.fn.storeCtx = function($el) {\n\n    this.$activeCtx = $el;\n\n    return this;\n\n};\n\n// Инициализируем активную кнопку и контент\nModule.fn.storeActiveEl = function() {\n\n    var active = this.options.active;\n\n    // Сохраняем кнопку\n    this.$activeBtn = this.$labelList.filter(`.${active}`);\n\n    // Сохраняем текст\n    this.$activeCtx = this.$contentList.filter(`.${active}`);\n\n    return this;\n\n};\n\n// Инициализация модуля\nModule.fn.init = function() {\n\n    var self = this;\n\n    this\n\n        // Инициализируем активную кнопку и контент\n        .storeActiveEl()\n\n        // вешаем событие на кнопки\n        .$labelList.on('click', function(e) {\n\n            var $btn = $(this),\n                ctxLabel = null;\n\n            // на случай если будет ссылка на элементе\n            e.preventDefault();\n\n            // Получаем контекст элемента\n            ctxLabel = $btn.attr(self.options.attrFind);\n\n            if (!!ctxLabel) {\n\n                // выделяем элемент\n                self.select($btn, ctxLabel);\n\n            } else {\n                throw new Error(`Не установлен аттрибут поиска элемента: ${self.options.attrFind}`);\n            }\n\n        })\n\n        // закрываем цепочку\n        ;\n\n    return this;\n\n};\n\n// Экспортируем модуль\nmodule.exports = Module;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/ContentToggler.js\":[function(require,module,exports){\n/*\n * Модуль раскрывающихся блоков по клику на элемент\n *\n * Передаем родительский элемент,\n * в котором есть кнопка и контент,\n * который будем скрывать.\n *\n * Скрытие осуществляется самостоятельно через css (по-умолчанию)\n * если в опциях \n *\n *\n * Когда открыто - класс is-show, закрыто - is-hide\n * По инициализации нужно передать,\n * какое дефолтное состояние должно быть у блока,\n * Методж show или hide\n *\n */\n\nfunction Module(root, options) {\n\n    var $root = $(root),\n        _options = null,\n        defaults = {\n            btn: '.b-content-toggler__btn',\n            ctx: '.b-content-toggler__ctx',\n            show: 'is-show',\n            hide: 'is-hide',\n            opened: false \n        };\n\n    $.extend({\n      'location'         : 'top',\n      'background-color' : 'blue'\n    }, options);\n\n    // Настройки\n    this.options = _options = $.extend({}, defaults, options);            \n\n    // Родительский контейнер\n    this.$root = $root;\n\n    // Кнопка для действия\n    this.$btn = $root.find(_options.btn);\n\n    // Скрываемый элемент\n    this.$ctx = $root.find(_options.ctx);\n\n    // Инициализируем модуль\n    this.init();\n};\n\n\n// Короткая запись\nModule.fn = Module.prototype;\n\n// Уничтожаем \nModule.fn.destroy = function() {\n\n    this.$root\n            .removeClass(this.options.show)\n            .removeClass(this.options.hide);\n    this.$ctx.css('height', 'auto');\n\n    return this;\n};\n\nModule.fn.setHeight = function($el) {\n\n    // Выставление высоты скрываемому/открываемому элементу\n\n    $el.css('height', $el.children().outerHeight(true));\n\n    return this;\n};\n\n// Статус скрыт контент\nModule.fn.initialHide = function($el) { \n\n    // Скрыть\n    var show = this.options.show;\n    var hide = this.options.hide;\n    this.$ctx.css('height', 0);\n    this.$root\n        .removeClass(show)\n        .addClass(hide);\n\n    return this;\n};\n\nModule.fn.showHide = function($el) { \n\n    // Скрыть или показать, в зависимости от класса\n\n    var show = this.options.show;\n    var hide = this.options.hide;\n\n    if (this.$root.hasClass(show)) {\n        this.$ctx.css('height', 0);\n        this.$root\n            .removeClass(show)\n            .addClass(hide);\n    } else {\n        this.setHeight(this.$ctx);\n        this.$root\n            .removeClass(hide)\n            .addClass(show);\n    }\n\n    return this;\n};\n\nModule.fn.initialShow = function($el) { \n\n    // Скрыть или показать, в зависимости от класса\n\n    var show = this.options.show;\n    var hide = this.options.hide;\n    \n    this.setHeight(this.$ctx);\n    this.$root\n        .removeClass(hide)\n        .addClass(show);\n\n    return this;\n};\n\nModule.fn.init = function() {\n\n    var self = this;\n\n    // Проверка начального состояния\n    if (this.options.opened) { \n        this.$root.addClass(this.options.show);\n\n        // Не всегда высота при загрузке соответствует высоте после загрузки :(\n        setTimeout(function(){\n            self.setHeight(self.$ctx);\n        }, 1000);\n    } else { \n        this.initialHide(this.$ctx);\n    }\n\n    $(window).resize(function(){ \n        if (self.$root.hasClass(self.options.show)) {\n            self.setHeight(self.$ctx);\n        } \n    });\n\n\n    // клик по кнопке\n    this.$btn.on('click', function(){ \n        self.showHide(self.$ctx);\n    });\n\n    RG.events.subscribe('ContentHandler.select', function(t, e) { \n        self.setHeight(self.$ctx);\n    });\n\n    return this;\n};\n\n\n\n\n\n// Экспортируем модуль\nmodule.exports = Module;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Counters.js\":[function(require,module,exports){\n/*\n * Модуль инициализации счетчиков\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Counters',\n\n    // Протокол\n    protocol = 'https:',\n\n    // Массив счетчиков\n    counters = [\n\n        // Мейл.ру\n        {\n            name: 'mailruCounter',\n            targetId: '#mailruCounter',\n\n            init: (elementId) => {\n\n                var\n\n                    _tmr = null, // Объект таймера\n\n                    $a = null, // ссылка на картинке счетчика\n                    $img = null; // Картинка счетчика\n                    //$pixel = null; // Картинка промерочного пикселя\n\n                // Настраиваем счетчик\n                //window._tmr = window._tmr || [];\n                _tmr = window._tmr || (window._tmr = []);\n\n                // Отправляем счетчик просмотра страницы\n                _tmr.push({id: \"2808226\", type: \"pageView\", start: (new Date()).getTime()});\n\n                // Инициализируем библиотеку\n                $.getScript(protocol + '//top-fwz1.mail.ru/js/code.js');\n\n                /*\n                 * Настраиваем блок счетчика\n                 *\n                 */                \n\n                $a = $('<a />', {\n                    target: '_blank',\n                    href: protocol + '//top.mail.ru/jump?from=2808226'\n                });\n\n                $img = $('<img />', {\n                    //src: '//dd.c2.b0.a0.top.mail.ru/counter?id=11659;t=216;l=1',\n                    src: protocol + '//top-fwz1.mail.ru/counter?id=2808226;t=409;l=1',\n                    alt: 'Рейтинг@Mail.ru',\n                    width: '88px',\n                    height: '31px',\n                    border: '0'\n                });\n\n                // Добавляем картинку счетчика в элемент\n                $(elementId).append($a.append($img));\n\n                /*\n                 * Настраиваем промерочный пиксель\n                 * 11.03.16 Max: Надо удалить этот пиксель, так как он должен быть прописан inline в шаблоне <noscripts>, в противном случае получается задвоение показателей.\n                 */\n\n                /*$pixel = $('<img />', {\n                    src: '//top-fwz1.mail.ru/counter?id=11659;js=na',\n                    alt: 'Рейтинг@Mail.ru',\n                    width: '1',\n                    height: '1',\n                    border: '0'\n                }).css({\n                    'position': 'absolute',\n                    'left': '-10000px'\n                });*/\n\n                // Добавляем пиксель в элемент\n                //$(elementId).append($pixel);\n\n                RG.logger.info('mailruCounter init');\n\n            }\n        }, \n\n        // Яндекс метрика\n        {\n            name: 'yaMetrikaCounter',\n            targetId: '#yaMetrika',\n\n            init: (elementId) => {\n\n                var $img = null,\n                    counterId = RG.meta.getYaMetrikaId() || '39269930';\n\n                RG.logger.log('Yandex Metrika id ' + RG.meta.getYaMetrikaId());\n\n                // Настраиваем счетчик\n                window.yandex_metrika_callbacks = window.yandex_metrika_callbacks || [];\n\n                window.yandex_metrika_callbacks.push(function() { \n                    try {\n\n                        window.yaCounter39269930 = new Ya.Metrika({\n                            id:counterId,\n                            clickmap:true,\n                            trackLinks:true,\n                            accurateTrackBounce:true,\n                            webvisor:true,\n                            trackHash:true\n                        });\n\n                    } catch(e) {\n                        RG.logger.error(e + '. Yandex Metrika error');\n                    } \n                }); \n\n                // Загружаем библиотеку\n                $.getScript(protocol + '//mc.yandex.ru/metrika/watch.js');\n\n\n                // Настраиваем блок счетчика\n                /*$img = $('<img />', {\n                    src: '//mc.yandex.ru/watch/' + counterId,\n                    border: '0',\n                    width: '1px',\n                    height: '1px'\n                }).css({\n                    'position': 'absolute',\n                    'left': '-10000px'\n                });*/\n\n                // Вставляем в контейнер\n                //$(elementId).append($img);\n\n                RG.logger.info('yaMetrika init');\n\n            }\n        },\n\n    ],\n\n    // Инициализация счетчиков\n    initCounters = () => {\n\n        // Инициализируем все счетчики\n        $.each(counters, function(index, counter){\n\n            counter.init(counter.targetId);\n\n        });\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, initCounters);\n    };\n\n// Экспортируем модуль\nmodule.exports = {\n    init\n}\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/DateTime.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 20.01.2016.\r\n */\r\nvar getTime = (date) => {\r\n\r\n        var time = moment().format('HH:mm');\r\n\r\n        if(date) {\r\n            time = `${date.slice(-4, -2)}:${date.slice(-2)}`;\r\n        }\r\n\r\n        return time;\r\n    },\r\n\r\n    parseVmDate = (date) => {\r\n\r\n        if(date) {\r\n            var preparedDate = moment(date, 'YYYYMMDDhhmm');\r\n\r\n            if(preparedDate.isSame(moment(), 'day')) {\r\n                return preparedDate.format('HH:mm');\r\n            }\r\n\r\n            return preparedDate.format('DD.MM.YYYY');\r\n\r\n        } else {\r\n\r\n            return moment().format('HH:mm');\r\n        }\r\n    };\r\n\r\nmodule.exports = {\r\n    getTime,\r\n    parseVmDate\r\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Events.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 20.10.2015.\n */\n\nvar pubsub = PubSub;\n\n    pubsub.immediateExceptions = RG.config.env === 'dev';\n\n    /**\n     * Позволяет регестрировать список событий\n     * @param list\n     */\n/*    pubsub.subscribe = function(topic, func) {\n\n        lsbridge.subscribe(topic, func);\n    };\n\n    pubsub.publish = function(topic, func) {\n\n        lsbridge.send(topic, func);\n    };*/\n\n    pubsub.registerList = function(list = null) {\n\n        if(!_.isEmpty(list)) {\n\n            _.each(list, (callback, event) => {\n                if(_.isString(event) && _.isFunction(callback)){\n\n                    this.subscribe(event, callback);\n                }\n            });\n        }\n    }.bind(pubsub);\n\nmodule.exports = pubsub;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/ListHeadToSelect.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 14.02.2016.\n */\n\nvar Select = require('../../blocks/forms/b-select/scripts/Select');\n\n    class ListHeadToSelect {\n\n        constructor(itemClass, containerClass, listClass) {\n\n            this.id = _.random(0, 1000);\n            this.elementId = `selectRubric-${this.id}`;\n\n            this.$element = this.appendElement(containerClass);\n            this.$list = $(listClass).addClass('is-tablet_block').addClass('is-tabletLanscape');\n\n            RG.logger.log(this.$element);\n            RG.logger.log(this.$list);\n\n            this.collectItems(itemClass);\n\n  /*          RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, info) => {\n\n                if (info.type === 'mobile' && info.type !== this.currentType) {\n\n                    RG.logger.info(topic);\n   */\n                    this.run();\n/*\n                } else if(this.currentType !== info.type) {\n\n                    this.$element.hide();\n                    this.$list.show();\n                }\n\n                this.currentType = info.type;\n            });*/\n        }\n\n        collectItems(itemClass) {\n\n            var items = [];\n\n            $(itemClass).each((i, el) => {\n\n                items.push(RG.parser.getAttributes(el));\n            });\n\n            return this.setItems(items);\n        }\n\n        appendElement(containerClass) {\n\n            var $element = $('<div />').attr('id', this.elementId).addClass('is-mobile_block');\n            $(containerClass).append($element);\n\n            return $element;\n        }\n\n        run() {\n\n            this.selectedOption = this.selectedOption || _.findWhere(this.getItems(), {href: document.location.pathname});\n            this.render();\n        }\n\n        getItems() {\n\n            return this.items;\n        }\n\n        setItems(list) {\n\n            this.items = list;\n            return this.items;\n        }\n\n        setSelected(item) {\n\n            this.selectedOption = item;\n            return this.selectedOption;\n        }\n\n        render() {\n\n            var items = this.getItems(),\n                selectedOption = null;\n\n            //RG.logger.trace(selectedOption);\n\n            if(items.length) {\n\n                // Устанавливаем выбранную опцию\n                selectedOption = this.selectedOption || this.setSelected(items[0]);\n\n/*                this.$element.show();\n                this.$list.hide();*/\n/*\n                if(this.component) {\n\n                    this.component.set('items', items);\n                    this.component.set('selectedOption', selectedOption);\n                } else {*/\n\n                // Инициализируем компонент селекта\n                this.component = new Select({\n                    el: this.elementId,\n                    isolated: true,\n                    data() {\n                        return {\n                            items,\n                            selectedOption\n                        };\n                    }\n                });\n\n/*                }*/\n            }\n        }\n    };\n\nmodule.exports = ListHeadToSelect;\n},{\"../../blocks/forms/b-select/scripts/Select\":\"/var/www/pravo/www/app/Resources/public/blocks/forms/b-select/scripts/Select.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/LiveReload.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 11.02.2016.\n */\n\nvar LiveReload = require('../../blocks/main/b-live-reload/scripts/LiveReload'),\n\n    blocks = [],\n    liveReloads = {},\n    templates = {},\n    partials = {},\n    data = {},\n    intervals = {},\n    requested = {},\n\n    init = () => {\n\n        getBlocks();\n    },\n\n    getBlocks = () => {\n\n        blocks = [];\n\n        $('.liveReload').each((i, el) => {\n\n            $(el).attr('id', `live_reload_${Math.random().toString(36).substring(10)}`);\n            let block = _.extend(RG.parser.getAttributes(el), {el: el});\n\n            _.each(block, (value, key) => {\n\n                let newKey = key.replace('data-', '');\n                block[newKey] = value;\n            })\n\n            blocks.push(block);\n        });\n    },\n\n    run = () => {\n\n        RG.logger.trace(blocks);\n\n        _.each(blocks, (block) => {\n\n            setStart(block);\n        });\n    },\n\n    setStart = (block) => {\n\n        setTimeout(() => {\n\n            if(!requested[block.tmpl]) {\n\n                getTemplate(block);\n                requested[block.tmpl] = true;\n\n            } else if(!requested[block.json]) {\n\n                getData(block);\n                requested[block.json] = true;\n            }\n        }, block.delay)\n    },\n\n    getTemplate = (block) => {\n\n        var tmplUrl = block.tmpl,\n            iterator = block.iterator,\n            template = '';\n\n        $.get(tmplUrl).then(response => {\n\n            if (iterator) {\n\n                template = `{{#${iterator}}}{{>part}}{{/${iterator}}}`;\n                partials[block.tmpl] = response;\n            } else {\n                template = response;\n            }\n\n            templates[tmplUrl] = template;\n\n            if(!requested[block.json]) {\n\n                getData(block);\n                requested[block.json] = true;\n            }\n        });\n    },\n\n    getData = (block) => {\n\n        if(block.request === 'jsonp') {\n\n            $.ajax({\n                url: block.json,\n                dataType: 'jsonp',\n                jsonp: 'callback',\n                jsonpCallback: 'callback',\n            }).then(response => {\n\n                data[block.json] = response;\n                renderComponent(block);\n            });\n        } else {\n\n            $.get(block.json).then(response => {\n\n                data[block.json] = response;\n                renderComponent(block);\n            });\n        }\n    },\n\n    renderComponent = (parrent) => {\n\n        RG.logger.trace(_(blocks).where({json: parrent.json}));\n\n        _.chain(blocks).where({json: parrent.json}).each(block => {\n\n            if (liveReloads[block.id]) {\n\n                if (_.isArray(data[block.json])) {\n\n                    liveReloads[block.id].reset(data[block.json]);\n                } else {\n\n                    try {\n\n                        liveReloads[block.id].set(data[block.json]);\n                    } catch (e) {\n\n                        RG.logger.log('LiveReload object is updated');\n                    }\n                }\n\n            } else {\n\n                liveReloads[block.id] = new LiveReload({\n                    template: templates[block.tmpl],\n                    data: data[block.json],// Ractive ругается!\n                    /*data() {\n                        var data = {};\n\n                        _.each(block.json, function(el){\n                            data\n                        });\n\n                        return data;\n                    },*/\n                    el: block.el,\n                    magic: true,\n                    partials: {\n                        part: partials[block.tmpl]\n                    }\n                });\n            }\n\n            RG.events.publish('livereload.init', block);\n        });\n\n        updateInterval(parrent);\n    },\n\n    updateInterval = (block) => {\n\n        var id = block.json,\n            blockData = data[block] || {},\n            interval = parseInt(blockData.interval) || 60000;\n\n        if(id in intervals) {\n\n            clearInterval(intervals[id].intervalId);\n            delete intervals[id];\n\n            if(interval === 0) {\n                return false;\n            }\n        }\n\n        interval = interval > 20000 ? interval : 20000;\n\n        intervals[id] = {\n            intervalId: setInterval(() => {\n\n                getData(block);\n            }, interval),\n            intervalTime: interval\n        };\n    };\n\nmodule.exports = {\n    init,\n    run\n};\n},{\"../../blocks/main/b-live-reload/scripts/LiveReload\":\"/var/www/pravo/www/app/Resources/public/blocks/main/b-live-reload/scripts/LiveReload.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Logger.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 06.10.2015.\r\n */\r\n\r\n/**\r\n * Ставит время вызова функции\r\n * @returns {string}\r\n */\r\nvar time = () => {\r\n        var d = new Date();\r\n        return `${[d.getHours(),d.getMinutes(),d.getSeconds()].join(':')}.${d.getMilliseconds()}`;\r\n    },\r\n\r\n    /**\r\n     * Проверяет окружение\r\n     * @returns {boolean}\r\n     */\r\n    env = () => {\r\n        return (RG.config.env === 'dev' || RG.config.env === 'test')\r\n    },\r\n\r\n\r\n    log = msg => {\r\n\r\n        if(env()) console.log(time(), msg);\r\n    },\r\n    info = msg => {\r\n\r\n        if(env()) console.info(time(),msg);\r\n    },\r\n    warn = msg => {\r\n\r\n        if(env()) console.warn(time(),msg);\r\n    },\r\n    error = msg => {\r\n\r\n        if(env()) console.error(time(),msg);\r\n    },\r\n    debug = msg => {\r\n\r\n        if(env()) console.debug(time(),msg);\r\n    },\r\n    trace = msg => {\r\n\r\n        if(env()) console.trace(time(),msg);\r\n    };\r\n\r\n/**\r\n * Экспорт функций\r\n * @type {{log: Function, info: Function, warn: Function, error: Function, debug: Function}}\r\n */\r\nmodule.exports = {\r\n    log,\r\n    info,\r\n    warn,\r\n    error,\r\n    debug,\r\n    trace\r\n}\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Meta.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 06.12.2015.\n */\nvar getEnv = () => {\n\n        var env = $('meta[name=\"rg-data\"][property=\"env\"]').attr('content');\n\n        return env;\n    },\n\n    getMaterial = () => {\n\n        var material = $('meta[name=\"rg-data\"][property=\"article:id\"]').attr('content');\n\n        return material;\n    },\n\n    getMaterialTitle = () => {\n\n        var title = $('meta[property=\"og:title\"]').attr('content');\n\n        return title;\n    },\n\n    getMaterialUrl = () => {\n\n        var url = $('meta[property=\"og:url\"]').attr('content');\n\n        return url;\n    },\n\n    getMaterialImg = () => {\n\n        var img = $('meta[property=\"og:image\"]').attr('content');\n\n        return img;\n    },\n\n    getProjectUri = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"project:uri\"]').attr('content');\n    },\n\n    getSujet = () => {\n\n        var sujet = $('meta[name=\"rg-data\"][property=\"sujet:id:first\"]').attr('content');\n\n        return sujet;\n    },\n\n    getSujetTitle = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"sujet:title:first\"]').attr('content');\n    },\n\n    getPubTime = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"article:published_time\"]').attr('content');\n    },\n\n    getSectionName = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"section:name\"]').attr('content');\n    },\n\n    getAuthorName = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"author:name\"]').attr('content');\n    },\n\n    getPlatform = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"ads:uri\"]').attr('content');\n    },\n\n    getPage = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"page\"]').attr('content');\n    },\n\n    getAdsHide = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"ads:hide\"]').attr('content');\n    },\n\n    getGaId = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"gaId\"]').attr('content');\n    },\n\n    getYaMetrikaId = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"yaMetrikaId\"]').attr('content');\n    },\n\n    getCustomLiveinternet = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"customLiveinternet\"]').attr('content');\n    };\n\nmodule.exports = {\n    getEnv,\n    getSujet,\n    getMaterial,\n    getSujetTitle,\n    getPubTime,\n    getMaterialTitle,\n    getMaterialUrl,\n    getMaterialImg,\n    getSectionName,\n    getAuthorName,\n    getProjectUri,\n    getPlatform,\n    getPage,\n    getAdsHide,\n    getGaId,\n    getYaMetrikaId,\n    getCustomLiveinternet\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Parser.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 12.02.2016.\n */\n\nvar components = [],\n\n    init = () => {\n\n        components = [];\n\n        components = findComponents('html');\n    },\n\n    findComponents = (parent) => {\n\n        let foundComponents = [];\n\n        _.each(_.keys(Ractive.components), component => {\n\n            $(parent).find(component).each(function(i, el) {\n\n                var tag = this.tagName.toLowerCase();\n\n                if(Ractive.components[tag]) {\n\n                    RG.logger.warn(`Parser found ${tag} component`);\n\n                    let data = getAttributes(el);\n\n                    foundComponents.push({\n                        tag,\n                        el,\n                        data\n                    });\n                }\n            });\n        });\n\n        return _.sortBy(foundComponents, item => {\n            return item.data.sort;\n        });\n    },\n\n    /**\n     * Возвращает атрибуты элемента в виде объекта\n     **/\n    getAttributes = (el) => {        \n\n        var attributes = {};\n\n        if(_.isObject(el) && el.attributes) {\n\n            attributes = _.object(_.map(Array.prototype.slice.call(el.attributes), item => {\n\n                let value = item.value,\n                    itemValue = $(el).attr(item.name).toString();\n\n                try {\n\n                    if(/^[\\[\\{].*?[\\]\\}]/.test(itemValue)) {\n\n                        value = JSON.parse(itemValue);\n                    } else {\n\n                        throw false;\n                    }\n                } catch (e) {\n\n                    if(itemValue.match(/'(.+)'$/)) {\n\n                        value = itemValue.replace(/['\"]+/g, '');\n/*                    } else if(!isNaN(itemValue)) {\n\n                        value = parseFloat(itemValue);\n                        RG.logger.trace('NUMBER');*/\n                    } else if(itemValue === \"true\" || itemValue === \"false\") {\n\n                        value = (itemValue === \"true\");\n                    } else if(item.name === 'class') {\n\n                        value = itemValue.split(' ');\n                    } else {\n                        \n                        value = itemValue;\n                    }\n                }\n\n                return [item.name, value];\n            }));\n        }\n\n        attributes.content = $(el).text();\n\n        return attributes;\n    },\n\n    getComponents = (component) => {\n\n        return _.where(components, {tag: component});\n    },\n\n    render = (component, options) => {\n\n        let foundComponents = [],\n            instances = []; \n\n        if(!_.isEmpty(component)) {\n\n            foundComponents = _.where(components, {tag: component});\n\n            if(foundComponents.length) {\n\n                _.each(foundComponents, item => {\n\n                    let settings = _.extend({\n                            el: item.el,\n                            data: item.data\n                        }, options || {}),\n\n                        instance = new Ractive.components[component](settings);\n\n                    instances.push(instance);\n                });\n            }\n        }\n\n        return instances;\n    };\n\nmodule.exports = {\n    init,\n    render,\n    getAttributes,\n    getComponents,\n    findComponents\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Query.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 22.11.2015.\r\n */\r\n\r\nvar Query = {\r\n\r\n/*    get() {\r\n\r\n        let data = new QueryData();\r\n        return data;\r\n    },*/\r\n\r\n/*    set(data) {\r\n        \r\n        let query = $.param(data);\r\n        \r\n        if (history.pushState) {\r\n            var newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}?${query}`;\r\n            window.history.pushState({path:newurl},'',newurl);\r\n        } else {\r\n\r\n            document.location = `?${query}`;\r\n        }\r\n    },*/\r\n\r\n    set(parameters) {\r\n        \r\n        var queryString = _.reduce(\r\n            parameters,\r\n            (components, value, key) => {\r\n                if(value) {\r\n                    components.push(key + '=' + encodeURIComponent(value));\r\n                }\r\n                return components;\r\n            },\r\n            []\r\n        ).join('&');\r\n        \r\n        if(queryString.length > 0) {\r\n\r\n            queryString = '?' + queryString;\r\n        }\r\n\r\n        if (history.pushState) {\r\n\r\n            let newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}${queryString}`;\r\n            window.history.pushState({path:newurl},'',newurl);\r\n        } else {\r\n\r\n            document.location = queryString;\r\n        }\r\n        return queryString;\r\n    },\r\n    \r\n    get(queryString) {\r\n\r\n        var queryString = queryString || (window.location.search || null);\r\n\r\n        if(queryString) {\r\n\r\n            return _.reduce(\r\n                queryString\r\n                    .replace('?', '')\r\n                    .split('&'),\r\n                (parameters, parameter) => {\r\n                    \r\n                    if(parameter.length > 0) {\r\n                        _.extend(\r\n                            parameters,\r\n                            _.object([_.map(parameter.split('='),\r\n                                        decodeURIComponent)]));\r\n                    }\r\n                \r\n                    return parameters;\r\n                }, {});\r\n        }\r\n    }\r\n    ///\r\n};\r\n\r\nmodule.exports = Query;\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/ScreenViewer.js\":[function(require,module,exports){\n/*\n * Screen Viewer\n * Модуль проверки экрана браузера\n *\n * @ScreenViewer.ready\n * @ScreenViewer.check - события подписки на вызов функции определения типа экрана\n * \n */\n\nvar \n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'ScreenViewer',\n\n    // Настройки для работы с экраном\n    _screenSettings = {\n\n        // Карта соответствия разрешения и типа девайса\n        // Она соответствует медиазапросам в sass\n        map: {\n            tablet: 768,\n            //tabletLandscape: 1024,\n            tabletLandscape: 990,\n            //desktop: 1366,\n            desktop: 1260,\n            //desktopFull: 1700\n            desktopFull: 1760\n        } \n    },\n\n    // Хранилище полученной информации\n    // о типе экрана\n    _screenInfo = null,\n\n    /*\n     * Методы\n     * \n     */\n\n    // Определяем тип разрешения экрана\n    detectScreenSizeType = () => {\n\n        var screenWidth = getScreenSize(),\n            screenMap = _screenSettings.map,\n\n            // Объект с собранной информацией, потом пойдет в публикацию события\n            screenInfo = {\n                type: null,\n                screenWidth: null,\n\n                // Информация о экране, полученная ранее\n                infoBefore: null\n            };\n\n        try {\n\n            // Устанавливаем ширину экрана\n            if (!!screenWidth) {\n                screenInfo.screenWidth = screenWidth;\n            } else {\n                throw new Error('Ширина экрана не получена, значение выводится, как: ' + screenWidth)\n            }\n\n            // Сама проверка\n            if (screenWidth < screenMap.tablet) {\n                \n                // Телефон\n                screenInfo.type = 'mobile';\n\n            } else if (screenWidth >= screenMap.tablet && screenWidth < screenMap.tabletLandscape) {\n\n                // Планшет\n                screenInfo.type = 'tablet';\n\n            } else if (screenWidth >= screenMap.tabletLandscape && screenWidth < screenMap.desktop) {\n\n                // Планшет: Ландшафтная ориентация\n                screenInfo.type = 'tabletLandscape';\n\n            } else if (screenWidth >= screenMap.desktop && screenWidth < screenMap.desktopFull) {\n\n                // Десктоп\n                screenInfo.type = 'desktop';\n\n            } else if (screenWidth >= screenMap.desktopFull) {\n\n                // Десктоп: Фулскрин\n                screenInfo.type = 'desktopFull';\n\n            }\n\n            //if(!_screenInfo || _screenInfo.type !== screenInfo.type) {\n\n                // Записываем предыдущую информацию о экране\n                screenInfo.infoBefore = getScreenInfo();\n\n                // Сохраняем определенную ширину в хранилище\n                return screenInfo;\n\n/*                // Публикуем событие о определении ширины окна браузера\n                RG.events.publish(_modulePrefix + '.update', _screenInfo);\n\n                RG.logger.trace(_screenInfo);*/\n            //}\n\n        } catch (err) {\n            RG.logger.error('Модуль ' + _modulePrefix + ', функция detectScreenSizeType.\\nОшибка: ' + err);\n        }\n\n    },\n\n    checkScreenInfo = (topic) => {\n\n        RG.logger.info(topic);\n\n        var screenInfo = detectScreenSizeType();\n\n        if(!_screenInfo || _screenInfo.type !== screenInfo.type) {\n\n                // Записываем предыдущую информацию о экране\n                screenInfo.infoBefore = getScreenInfo();\n\n                // Сохраняем определенную ширину в хранилище\n                _screenInfo = screenInfo;\n\n                // Публикуем событие о определении ширины окна браузера\n                RG.events.publish(_modulePrefix + '.update', _screenInfo);\n\n                RG.logger.trace(_screenInfo);\n        }\n    },\n\n    // Получаем разрешение экрана\n    // jQuery отдает ширину без ширины скроллбара.\n    // Чтобы было соответствие с медиазапросами\n    // используем функцию innerWidth\n    // Для старых браузеров, используем jQuery (IE8)\n    getScreenSize = () => {\n        return window.innerWidth || $(window).width();\n    },\n\n    // Получить информацию о экране\n    getScreenInfo = () => {\n\n        return _screenInfo;\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        let registerList = {};\n\n        _screenInfo = detectScreenSizeType();\n\n        registerList[_modulePrefix + '.ready'] = checkScreenInfo;\n        registerList[_modulePrefix + '.check'] = checkScreenInfo;\n        registerList['window.resize'] = checkScreenInfo;\n\n        RG.events.registerList(registerList);\n    };\n\n// Экспортируем как модуль\nmodule.exports = {\n    _modulePrefix,\n    getScreenInfo,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Selection.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 02.11.2015.\n */\n\nvar getSelected = () => {\n\n        if(window.getSelection) {\n\n            return window.getSelection();\n        } else if(document.getSelection) {\n\n            return document.getSelection();\n        } else {\n\n            var selection = document.selection && document.selection.createRange();\n            if(selection.text) {\n                return selection.text;\n            }\n            return false;\n        }\n        return false;\n    },\n\n    selectText = id => {\n\n        let node = $(id)[0], // document.getElementById(id),\n            range = null;\n\n        if (document.selection) {\n\n            range = document.body.createTextRange();\n            range.moveToElementText(node);\n            range.select();\n        } else if (window.getSelection) {\n\n            range = document.createRange();\n            range.selectNodeContents(node);\n            window.getSelection().removeAllRanges();\n            window.getSelection().addRange(range);\n        }\n    };\n\n  module.exports = {\n\n      getSelected,\n      selectText\n  };\n\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Geolocation.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 21.01.2016.\r\n */\r\n\r\nvar paths = require('./config').geolocationPaths,\r\n\r\n    getGeolocation = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.getRegion}`).then(data => {\r\n\r\n            RG.events.publish('geolocation.list', data);\r\n        });\r\n    },\r\n\r\n    changeRegion = (topic, region) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.changeRegion}${region.id}`).then(() => {\r\n\r\n            //Cookies.set('rg_user_region', JSON.stringify(region));\r\n\r\n            RG.events.publish('geolocation.region.changed', region);\r\n        });\r\n    },\r\n\r\n    getRegions = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.getRegions}`).then(regions => {\r\n\r\n            RG.events.publish('geolocation.region.update', regions);\r\n        });\r\n    },\r\n\r\n    init = () => {\r\n\r\n        RG.events.registerList({\r\n            'geolocation.region.get': getGeolocation,\r\n            'geolocation.region.change': changeRegion,\r\n            'geolocation.region.all': getRegions\r\n        });\r\n    };\r\n\r\nmodule.exports = {\r\n    init\r\n};\n},{\"./config\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Place.js\":[function(require,module,exports){\n/*\n * Модуль получения данных площадок\n * На момент получения данных, отдает событие с этими данными\n *\n */\n\nvar \n\n    // Префикс модуля\n    _modulePrefix = 'Place',\n\n    _placeMap = {},\n\n    // Получение площадок\n    getPlaces = () => {\n\n        var rootPath = RG.config.paths.root,\n            platform = RG.meta.getPlatform() || '/static/main/ind';\n\n        // Отправляем запрос\n        $.get(`${rootPath}ads/platform${platform}`)\n            .done(data => {\n                RG.logger.info(`${_modulePrefix}.places.loaded`);\n                RG.events.publish(`${_modulePrefix}.places.loaded`, data);\n            })\n            .fail(error => {\n                throw new Error(`Ошибка при получении площадок. Сервис Place, error: ${error}`);                 \n            });\n\n    },\n\n    // ОБработка площадок\n    // Сохраняем в конечный объект\n    // - placeSrc - все площадки\n    // - placeFiltered = отфильтрованные по экрану\n    preparePlace = (topic, places) => {\n\n        // Сохраняем все площадки\n        _placeMap.placeSrc = places;\n\n        // Отфильтрованные по экрану\n        _placeMap.placeFiltered = places;\n\n    },\n\n    // Инициализация сервиса\n    init = (topic, screenInfo) => {\n\n        //getPlaces();\n\n        RG.events.subscribe(`${_modulePrefix}.places.loaded`, preparePlace);\n    };\n\nmodule.exports = {\n    _modulePrefix,\n    init\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/RegionalNews.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 11.02.2016.\n */\n\nvar currentRegion = null,\n    news = [],\n    template = null,\n    components = [],\n\n    init = () => {\n\n        /**\n         * TODO Все колбэки в одно место\n         **/\n        RG.BlocksShifter.setCallback([\n            {\n                blockId: 'rgb_feed_last-news',\n                screenType: 'mobile',\n                callback: ($target, $active) => {\n\n                    RG.events.publish('regional.render');\n                    RG.events.publish('scroll.init', $('.b-feed__list_scrolled'));\n                }\n            },\n            {\n                blockId: 'rgb_feed_last-news',\n                screenType: 'tablet tabletLandscape desktop desktopFull',\n                callback: ($target, $active) => {\n\n                    RG.events.publish('regional.render');\n                    RG.events.publish('scroll.init', $('.b-feed__list_scrolled'));\n                }\n            }\n        ]);\n\n        RG.events.registerList({\n\n            'regional.run': run,\n            'regional.template.get': getTemplate,\n            'regional.news.get': getNews,\n            'regional.render': renderComponent,\n            'geolocation.region.changed': (topic, region) => {\n\n                RG.logger.info(topic);\n\n                if(region) {\n\n                    currentRegion = region;\n\n                    RG.events.publish('regional.news.get');\n                }\n            },\n            'geolocation.list': (topic) => {\n\n                RG.events.publish('regional.run');\n            },\n        });\n\n        RG.events.publish('regional.run');\n    },\n\n    run = (topic) => {\n\n        RG.logger.info(topic);\n\n        currentRegion = RG.session.getUserRegion();\n\n        $('.b-feed__list_reg').hide();\n    },\n\n\n    getTemplate = (topic) => {\n\n        RG.logger.info(topic);\n\n        $.get(RG.config.paths.tmpl.bFeed).then(html => {\n\n            template = html;\n            RG.events.publish('regional.news.get');\n        });\n    },\n\n    getNews = (topic) => {\n\n        RG.logger.info(topic);\n\n        if(currentRegion.rgId) {\n\n            $.get(`${RG.config.paths.lastNews}region-${currentRegion.rgId}.json`).then(response => {\n\n                news = response.result;\n                RG.events.publish('regional.render');\n            });\n        }\n    },\n\n    initEvents = () => {\n\n        if(!_.isEmpty(currentRegion) && _.isString(currentRegion.rubricPrepositionalName)) {\n\n            $('.b-feed__name_reg-link, .b-feed__name_com').off('click');\n\n            $('.b-feed__name_reg-link').attr('href', currentRegion.link).text(`в ${currentRegion.rubricPrepositionalName}`).on('click', function(event) {\n\n                if($(this).parent().hasClass('is-active')) {\n\n                    window.location = currentRegion.link;\n                }\n\n                $('.b-feed__list_com').hide();\n                $('.b-feed__list_reg').show();\n\n                $(this).parent().addClass('is-active');\n                $('.b-feed__name_com-link').parent().removeClass('is-active');\n\n                event.preventDefault();\n            });\n\n            $('.b-feed__name_com-link').on('click', event => {\n\n                $('.b-feed__list_com').show();\n                $('.b-feed__list_reg').hide();\n\n                $('.b-feed__name_reg-link').parent().removeClass('is-active');\n                $('.b-feed__name_com-link').parent().addClass('is-active');\n\n                event.preventDefault();\n            });\n        }\n    },\n\n    renderComponent = () => {\n\n        if(template) {\n\n            initEvents();\n\n            $('.b-feed__list_reg').each(function(i, element) {\n\n                var id = $(this).attr('data-id');\n\n                if(id) {\n\n                    components[id].set('items', news);\n                } else {\n\n                    id = Math.random().toString(36).substring(6);\n\n                    components[id] = new Ractive({\n\n                        el: element,\n                        template: `{{#items}}${template}{{/items}}`,\n                        data() {\n                            return {\n                                items: news,\n                                dateFormat: RG.datetime.parseVmDate\n                            }\n                        }\n                    });\n\n                    $(this).attr('data-id', id);\n                }\n            });\n        } else {\n\n            RG.events.publish('regional.template.get');\n        }\n    };\n\n\nmodule.exports = {\n\n    init // 13.02.16 Max: до разбирательства, отправляет кучу запросов\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Saved.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 15.12.2015.\n */\n\nvar paths = require('./config').savedPaths,\n\n    add = (topic, id) => {\n\n        RG.logger.info(topic);\n\n        $.get(`${paths.add}${id}`).then(data => {\n\n            RG.events.publish('subscribe.saved.added', id);\n        });\n    },\n\n    remove = (topic, id) => {\n\n        RG.logger.info(topic);\n\n        $.get(`${paths.remove}${id}`).then(data => {\n            \n            RG.events.publish('subscribe.saved.removed', id);\n        });\n    },\n\n    toggle = (topic, id) => {\n\n        RG.logger.info(topic);\n        \n        $.get(`${paths.toggle}${id}`).then(data => {\n\n            RG.events.publish('subscribe.saved.toggled', id);\n        });\n    },\n\n    init = () => {\n\n        RG.events.registerList({\n            'subscribe.saved.toggle': toggle,\n            'subscribe.saved.remove': remove,\n            'subscribe.saved.add': add,\n        });\n    }\n\nmodule.exports = {\n    init\n};\n\n},{\"./config\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Subscribe.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 16.12.2015.\n */\n\nvar sujetsPaths = require('./config').sujetsPaths,\n    commentsPaths = require('./config').commentsPaths,\n    freshPaths = require('./config').freshPaths,\n    docPaths = require('./config').docPaths,\n\n    removeSujet = (topic, id) => {\n\n        RG.logger.info(topic);\n\n/*\n        $.mockjax({\n            url: `${paths.remove}/${id}`,\n            responseText: {}\n        });\n*/\n\n        $.get(`${sujetsPaths.remove}${id}`).then(sujet => {\n\n            sujet.id = parseInt(sujet.id);\n\n            RG.events.publish('subscribe.sujet.removed', sujet);\n        });\n    },\n\n    addSujet = (topic, id) => {\n\n        RG.logger.info(topic);\n/*\n        $.mockjax({\n            url: `${paths.add}/${id}`,\n            responseText: {}\n        });*/\n\n        $.get(`${sujetsPaths.add}${id}`).then(sujet => {\n\n            sujet.id = parseInt(sujet.id);\n\n            RG.events.publish('subscribe.sujet.added', sujet);\n        });\n    },\n\n    getMaterials = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${sujetsPaths.getMaterials}${id}`).then(data => {\n\n            RG.events.publish('subscribe.sujet.set', data.items);\n        });\n    },\n\n    removeComments = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${commentsPaths.remove}${id}`).then(data => {\n\n            RG.events.publish('subscribe.comments.removed', id);\n        });\n    },\n\n    addComments = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${commentsPaths.add}${id}`).then(() => {\n\n            RG.events.publish('subscribe.comments.added', id);\n        });\n    },\n\n    getFollowed = topic => {\n\n        RG.logger.info(topic);\n\n        var followedList = [],\n            sujet = +RG.meta.getSujet();\n\n        $.get(`${sujetsPaths.getFollowed}`).then(response => {\n\n            followedList = response.items;\n\n            if (_.findIndex(followedList, {id: sujet}) !== -1) {\n\n                RG.events.publish('subscribe.sujet.added', _.findWhere(followedList, {id: sujet}));\n            }\n\n            RG.events.publish('subscribe.sujet.list', response);\n        });\n    },\n\n    getTopSujets = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${sujetsPaths.getTopSujets}`).then(data => {\n\n            RG.events.publish('subscribe.sujets.toped', data);\n        });\n    },\n\n    addFresh = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${freshPaths.add}`).then(data => {\n\n            RG.events.publish('subscribe.fresh.added', data);\n        });\n    },\n\n    removeFresh = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${freshPaths.remove}`).then(data => {\n\n            RG.events.publish('subscribe.fresh.removed', data);\n        });\n    },\n\n    checkFresh = topic => {\n\n        RG.logger.info(topic);\n\n        if(RG.session.isAuthorized()) {\n            $.get(`${freshPaths.check}`).then(data => {\n\n                if (data.status === 'OK') {\n\n                    RG.events.publish('subscribe.fresh.added', data);\n                } else {\n\n                    RG.events.publish('subscribe.fresh.removed', data);\n                }\n            });\n        }\n    },\n\n    addDoc = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${docPaths.add}`).then(data => {\n\n            RG.events.publish('subscribe.doc.added', data);\n        });\n    },\n\n    removeDoc = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${docPaths.remove}`).then(data => {\n\n            RG.events.publish('subscribe.doc.removed', data);\n        });\n    },\n\n    checkDoc = topic => {\n\n        RG.logger.info(topic);\n\n        if(RG.session.isAuthorized()) {\n\n            $.get(`${docPaths.check}`).then(data => {\n\n                if (data.status === 'OK') {\n\n                    RG.events.publish('subscribe.doc.added', data);\n                } else {\n\n                    RG.logger.trace(data);\n\n                    RG.events.publish('subscribe.doc.removed', data);\n                }\n            });\n        }\n    },\n\n    init = () => {\n\n        RG.events.registerList({\n            'subscribe.sujet.remove': removeSujet,\n            'subscribe.sujet.fetch': getFollowed,\n            'subscribe.sujet.add': addSujet,\n            'subscribe.sujet.get': getMaterials,\n            'subscribe.sujets.top': getTopSujets,\n\n            'subscribe.comments.remove': removeComments,\n            'subscribe.comments.add': addComments,\n\n            'subscribe.fresh.add': addFresh,\n            'subscribe.fresh.remove': removeFresh,\n            'subscribe.fresh.check': checkFresh,\n\n            'subscribe.doc.add': addDoc,\n            'subscribe.doc.remove': removeDoc,\n            'subscribe.doc.check': checkDoc,\n        });\n    }\n\nmodule.exports = {\n    init\n};\n},{\"./config\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/Viewed.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 21.01.2016.\r\n */\r\n\r\nvar paths = require('./config').viewedPaths,\r\n\r\n    getViewed = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        /*\r\n         $.mockjax({\r\n         url: `${paths.remove}/${id}`,\r\n         responseText: {}\r\n         });\r\n         */\r\n\r\n        $.get(`${paths.getViewed}`).then(materials => {\r\n\r\n            RG.events.publish('viewed.list', materials);\r\n        });\r\n    },\r\n\r\n    setViewed = (topic) => {\r\n\r\n\r\n        RG.logger.info(topic);\r\n\r\n        var materialId = RG.meta.getMaterial();\r\n        /*\r\n         $.mockjax({\r\n         url: `${paths.remove}/${id}`,\r\n         responseText: {}\r\n         });\r\n         */\r\n\r\n        $.get(`${paths.setViewed}${materialId}`).then(data => {\r\n\r\n            if(data.current_saved) {\r\n                RG.events.publish('subscribe.saved.added', RG.meta.getMaterial());\r\n            }\r\n        });\r\n    },\r\n\r\n    init = () => {\r\n\r\n        RG.events.registerList({\r\n            'viewed.get': getViewed,\r\n            'viewed.set': setViewed,\r\n        });\r\n    };\r\n\r\nmodule.exports = {\r\n    init\r\n};\n},{\"./config\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Services/config.js\":[function(require,module,exports){\n/**\n * Created by esolovyev on 15.12.2015.\n */\n\n/**\n * Конфигурационный\n * @type {string}\n */\nvar rootPath = RG.config.paths.root,\n    subscribe = `${rootPath}subscribe/`,\n    add = `${subscribe}add/`,\n    remove = `${subscribe}remove/`,\n    account = `${rootPath}account/`,\n    geolocation = `${rootPath}geo/`,\n\n    check = `${subscribe}check/`,\n\n    typo = `${rootPath}app/send_error`,\n\n    sujetsPaths = {\n        add: `${add}sujet/`,\n        remove: `${remove}sujet/`,\n        getMaterials: `${subscribe}articles/`,\n        getFollowed: `${subscribe}sujets`,\n        getTopSujets: `${subscribe}top_sujets`\n    },\n\n    commentsPaths = {\n        add: `${add}comments/`,\n        remove: `${remove}comments/`\n    },\n\n    savedPaths = {\n        add: `${account}set_favorite/`,\n        remove: `${account}remove_favorite/`,\n        toggle: `${account}toggle_read_page/`\n    },\n\n    viewedPaths = {\n        getViewed: `${account}list_viewed`,\n        setViewed: `${account}set_viewed/`\n    },\n\n    geolocationPaths = {\n        getRegion: `${geolocation}`,\n        changeRegion: `${geolocation}change/`,\n        getRegions: `${geolocation}regions`\n    },\n\n    freshPaths = {\n        add: `${add}fresh`,\n        remove: `${remove}fresh`,\n        check: `${check}fresh`\n    },\n\n    docPaths = {\n        add: `${add}doc`,\n        remove: `${remove}doc`,\n        check: `${check}doc`\n    };\n\nmodule.exports = {\n    commentsPaths,\n    sujetsPaths,\n    savedPaths,\n    typo,\n    viewedPaths,\n    geolocationPaths,\n    freshPaths,\n    docPaths\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Session.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 09.10.2015.\r\n */\r\nvar fixData = obj => {\r\n\r\n        if(!_.isEmpty(obj)) {\r\n            return _.object(_.map(obj, (prop, key) => {\r\n\r\n                let val = prop;\r\n\r\n                if(_.isString(val)) {\r\n                    val = val.replace(/\\+/g, ' ');\r\n                }\r\n\r\n                return [key, val];\r\n            }));\r\n        }\r\n    },\r\n\r\n    cookie = Cookies,//require('cookies-js'),\r\n\r\n    /**\r\n     * Проверяет включенны ли куки\r\n     * @returns {Function|enabled|ga.selectors.pseudos.enabled}\r\n     */\r\n    enabled = () => {\r\n\r\n        return cookie.enabled;\r\n    },\r\n\r\n    /**\r\n     * Возвращает хэш авторизованного пользователя\r\n     * @returns {*}\r\n     */\r\n    isAuthorized = () => {\r\n\r\n        return !!cookie.get('rg_user_hash');\r\n    },\r\n\r\n    /**\r\n     * Возвращает регион пользователя\r\n     * @returns {*}\r\n     */\r\n    getUserRegion = () => {\r\n\r\n        var cookieCurrent = Cookies.get('rg_user_region');\r\n\r\n        cookieCurrent = cookieCurrent ? fixData(JSON.parse(cookieCurrent) || null) : {};\r\n\r\n        return cookieCurrent;\r\n    },\r\n\r\n    /**\r\n     * Возвращает возвращает найленый регион\r\n     * @returns {*}\r\n     */\r\n    getCurrentRegion = () => {\r\n\r\n        var cookieNew = Cookies.get('rg_geo_data');\r\n\r\n        cookieNew = cookieNew ? fixData(JSON.parse(cookieNew) || null) : {};\r\n\r\n        return cookieNew;\r\n    },\r\n\r\n    /**\r\n     * Возвращает хэш пользователя авторизиующегося через социальные сети\r\n     * @returns {*}\r\n     */\r\n    confirmData = () => {\r\n\r\n        return cookie.get('rg_thash');\r\n    },\r\n\r\n    check = topic => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        if(enabled()) {\r\n\r\n            if(confirmData()) {\r\n\r\n                RG.logger.warn('User avaitnig conformation');\r\n                RG.events.publish('session.confirm.required');\r\n\r\n            } else if(isAuthorized()) {\r\n\r\n                RG.logger.warn('User is authorized');\r\n                RG.events.publish('session.user.authorized');\r\n\r\n            } else {\r\n\r\n                RG.logger.warn('User is NOT authorized');\r\n                RG.events.publish('session.user.logedout');\r\n            }\r\n        } else {\r\n\r\n            RG.logger.error('Cookies disabled');\r\n            RG.events.publish('session.cookie.disabled');\r\n        }\r\n    },\r\n\r\n    getUserData = () => {\r\n\r\n        let userData = {},\r\n            user = {};\r\n\r\n        try{\r\n\r\n            userData = cookie.get('rg_user_info');\r\n\r\n            if(userData) {\r\n\r\n                user = JSON.parse(userData);\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n            RG.logger.error(`${e.toString()}`);\r\n        }\r\n\r\n        return user;\r\n    },\r\n\r\n    init = () => {\r\n\r\n        //check();\r\n        RG.events.subscribe('session.check', check);\r\n\r\n        var interval = window.setInterval(() => {\r\n\r\n            if(isAuthorized()) {\r\n                window.clearInterval(interval);\r\n\r\n                RG.events.publish('session.check');\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\nmodule.exports = {\r\n    enabled,\r\n    isAuthorized,\r\n    confirmData,\r\n    init,\r\n    getUserData,\r\n    getUserRegion,\r\n    getCurrentRegion\r\n};\n},{}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/Storage.js\":[function(require,module,exports){\n/**\r\n * Created by esolovyev on 12.11.2015.\r\n */\r\n\r\n/**\r\n * TODO\r\n * Add cookie storage if local is not supported\r\n */\r\nvar Storage = {\r\n\r\n    get(name) {\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    set(name, value) {\r\n\r\n        Lockr.set(name, value);\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    add() {\r\n\r\n        Lockr.sadd(name, value);\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    all() {\r\n\r\n        return Lockr.getAll();\r\n    }\r\n};\r\n\r\n    \r\n\r\nmodule.exports = Storage;\n},{}]},{},[\"/var/www/pravo/www/app/Resources/public/scripts/global.js\"])\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @module {function} 101/exists\n * @type {function}\n */\n\n/**\n * Returns false for null and undefined, true for everything else.\n * @function module:101/exists\n * @param val {*} - value to be existance checked\n * @return {boolean} whether the value exists or not\n */\nmodule.exports = exists;\n\nfunction exists (val) {\n  return val !== undefined && val !== null;\n}","/**\n * Functional version of a strict object check (Arrays and RegExps are not objects)\n * @module 101/is-object\n */\n\n/**\n * @function module:101/is-object\n * @param {*} val - value checked to be an object\n * @return {boolean} Whether the value is an object or not\n */\nvar exists = require('./exists');\n\nmodule.exports = isObject;\n\nfunction isObject (val) {\n  return typeof val === 'object' &&\n    exists(val) &&\n    !Array.isArray(val) &&\n    !(val instanceof RegExp) &&\n    !(val instanceof String) &&\n    !(val instanceof Number);\n}","var isObject = require('101/is-object');\n\nvar keypather = module.exports = function (opts) {\n  var keypather = new Keypather(opts && opts.force);\n  return keypather;\n};\n\nif(typeof module !== 'undefined')\n{\n    module.exports = keypather;\n}\n\nfunction Keypather (force) {\n  this.force = (force !== undefined) ? Boolean(force) : true; // force - default: true\n}\nKeypather.prototype.get = function (/* obj, keypath, fnArgs... */) {\n  this.create = false;\n  return this._get.apply(this, arguments);\n};\nKeypather.prototype.set = function (obj, keypath, value  /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = this.force;\n  this.fnArgs = Array.prototype.slice.call(arguments, 3).map(makeArray);\n  if (keypath.match(/\\(\\)$/)) {\n    throw new Error(\"Invalid left-hand side in assignment\");\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments, true);\n  val[lastKey] = value;\n  return value;\n};\nKeypather.prototype.in = function (obj, keypath) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    throw new TypeError('keypath should not end in a function');\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return false;\n  }\n  return lastKey in val;\n};\nKeypather.prototype.has = function (obj, keypath) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    throw new TypeError('keypath should not end in a function');\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return false;\n  }\n  return val.hasOwnProperty(lastKey);\n};\nKeypather.prototype.del = function (obj, keypath  /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.create = false;\n  if (last(keypath) === ')') {\n    // deletes function result..does nothing. equivalent to invoking function and returning true\n    // this.get(obj, keypath); // not even necessary since this doesnt actually do anything\n    return true;\n  }\n\n  this.keypathSplit = this.splitKeypath(keypath);\n  this.fnArgs = Array.prototype.slice.call(arguments, 2).map(makeArray);\n  var lastKey = this.getLastKey();\n  var val = this.getLastObj(arguments);\n\n  if (this.force && !val) {\n    return true;\n  }\n  delete val[lastKey];\n  return true;\n};\nKeypather.prototype.flatten = function (obj, delimeter, preKeypath, init) {\n  var arr = Array.isArray(obj);\n  var def = arr ? [] : {};\n  var self = this;\n  return Object.keys(obj).reduce(function (out, key) {\n    var val = obj[key];\n    if (arr) {\n      key = [ '[', key, ']' ].join('');\n    }\n    var keypath = exists(preKeypath) ?\n      [ preKeypath, key ].join(arr ? '' : delimeter) :\n      key;\n    if(Array.isArray(val) || isObject(val)) {\n      delimeter = exists(delimeter) ? delimeter : '.';\n      self.flatten(val, delimeter, keypath, out);\n    }\n    else {\n      out[keypath] = val;\n    }\n\n    return out;\n  }, init || def);\n};\nvar arrKeypath = /^\\[[0-9]+\\]/;\nKeypather.prototype.expand = function (flatObj, delimeter) {\n  var self = this;\n  var arrSoFar = true;\n  if (exists(delimeter)) {\n    var delimeterRegex = new RegExp(escapeRegExp(delimeter), 'g');\n  }\n  var out = Object.keys(flatObj).reduce(function (out, keypath) {\n    if (arrSoFar) {\n      arrSoFar = arrKeypath.test(keypath);\n      if (!arrSoFar) {\n        // change 'out' to an 'obj'\n        out = out.reduce(function (obj, key) {\n          obj[key] = out[key];\n          return out;\n        }, {});\n      }\n    }\n    var val = flatObj[keypath];\n    if (exists(delimeter)) {\n      keypath = keypath.replace(delimeterRegex, '.');\n    }\n    self.set(out, keypath, val);\n    return out;\n  }, []);\n\n  return out;\n};\n\n// internal\nKeypather.prototype._get = function (obj, keypath /*, fnArgs... */) {\n  this.obj = obj;\n  keypath = keypath + '';\n  this.keypathSplit = this.splitKeypath(keypath);\n  this.fnArgs = Array.prototype.slice.call(arguments, 2).map(makeArray);\n  return this.keypathSplit.reduce(this.getValue.bind(this), obj);\n};\nKeypather.prototype.splitKeypath = function (keypath) {\n  var dotSplit = keypath.split('.');\n  var split = [];\n  var openParen = false;\n  var openBracket = false;\n  var parenBuffer, bracketBuffer, preParen, preBracket;\n  dotSplit.forEach(function groupParens (part) {\n    var parenSplit, leftover, bracketSplit;\n    if (part.length === 0) {\n      return;\n    }\n    else if (!openParen && ~part.indexOf('(')) {\n      openParen = true;\n      parenBuffer = [];\n      parenSplit = part.split('(');\n      preParen = parenSplit.shift() || '';\n      leftover = parenSplit.join('(');\n      if (leftover.length) groupParens(leftover);\n    }\n    else if (openParen) {\n      if (~part.indexOf(')')) {\n        openParen = false;\n        parenSplit = part.split(')');\n        parenBuffer.push(parenSplit.shift());\n        split.push(preParen+'('+parenBuffer.join('.')+')');\n        leftover = parenSplit.join(')');\n        if (leftover.length) groupParens(leftover);\n      }\n      else {\n        parenBuffer.push(part);\n      }\n    }\n    else if (!openBracket && ~part.indexOf('[')) {\n      openBracket = true;\n      bracketBuffer = [];\n      bracketSplit = part.split('[');\n      preBracket = bracketSplit.shift() || '';\n      leftover = bracketSplit.join('[');\n      if (leftover.length) groupParens(leftover);\n    }\n    else if (openBracket) {\n      if (~part.indexOf(']')) {\n        openBracket = false;\n        bracketSplit = part.split(']');\n        bracketBuffer.push(bracketSplit.shift());\n        split.push(preBracket+'['+bracketBuffer.join('.')+']');\n        leftover = bracketSplit.join(']');\n        if (leftover.length) groupParens(leftover);\n      }\n      else {\n        bracketBuffer.push(part);\n      }\n    }\n    else {\n      split.push(part);\n    }\n  });\n  return split;\n};\nKeypather.prototype.getValue = function (val, keyPart) {\n  this.indexOpenParen = keyPart.indexOf('(');\n  this.indexCloseParen = keyPart.indexOf(')');\n  this.indexOpenBracket = keyPart.indexOf('[');\n  this.indexCloseBracket = keyPart.indexOf(']');\n  var keyHasParens = ~this.indexOpenParen && ~this.indexCloseParen && (this.indexOpenParen < this.indexCloseParen);\n  var keyHasBrackets = ~this.indexOpenBracket && ~this.indexCloseBracket && (this.indexOpenBracket < this.indexCloseBracket);\n  this.lastVal = val;\n  if (!keyHasParens && !keyHasBrackets) {\n    return this.handleKey(val, keyPart);\n  }\n  else if (keyHasParens && (!keyHasBrackets || this.indexOpenParen < this.indexOpenBracket)) {\n    return this.handleFunction(val, keyPart);\n  }\n  else {\n    return this.handleBrackets(val, keyPart);\n  }\n};\nKeypather.prototype.handleKey = function (val, key) {\n  if (this.create && !exists(val[key])) {\n    return this.createPath(val, key);\n  }\n  return (this.force && !exists(val)) ?\n      null : val[key];\n};\nKeypather.prototype.handleFunction = function (val, keyPart) {\n  var subKey = keyPart.slice(0, this.indexOpenParen), ctx;\n  var argsStr = keyPart.slice(this.indexOpenParen+1, this.indexCloseParen);\n  if (subKey) {\n    if (this.create && !exists(val[subKey])) {\n      throw new Error('KeypathSetError: cannot force create a path where a function does not exist');\n    }\n    ctx = val;\n    val = (this.force && (!exists(val) || !exists(val[subKey]))) ? null :\n      (this.indexOpenParen+1 === this.indexCloseParen) ?\n        val[subKey].call(ctx) :\n        val[subKey].apply(ctx, this.parseFunctionArgs(argsStr));\n  }\n  else {\n    ctx = this.lastVal || global;\n    val = (this.force && !exists(val)) ? null :\n      (this.indexOpenParen+1 === this.indexCloseParen) ? // maintain context (this.lastVal)\n        val.call(ctx) :\n        val.apply(ctx, this.parseFunctionArgs(argsStr));\n  }\n  keyPart = keyPart.slice(this.indexCloseParen+1); // update key, slice of function\n  return keyPart ? // if keypart left, back to back fn or brackets so recurse\n    this.getValue(val, keyPart) : val;\n};\nKeypather.prototype.handleBrackets = function (val, keyPart) {\n  var subKey = keyPart.slice(0, this.indexOpenBracket);\n  var bracketKey = keyPart.slice(this.indexOpenBracket+1, this.indexCloseBracket);\n  bracketKey = parseBracketKey(bracketKey);\n  if (!exists(bracketKey)) {\n    // invalid bracket structure, use key as is.\n    return this.handleKey(val, keyPart);\n  }\n  else {\n    if (subKey) {\n      if (this.create) {\n        if (!exists(val[subKey])) {\n          return this.createPath(val, subKey, bracketKey);\n        }\n        if (!exists(val[subKey][bracketKey])) {\n          return this.createPath(val[subKey], bracketKey);\n        }\n      }\n      val = (this.force && (!exists(val) || !exists(val[subKey]))) ?\n        null : val[subKey][bracketKey];\n    }\n    else {\n      if (this.create && !exists(val[bracketKey])) {\n        return this.createPath(val, bracketKey);\n      }\n      val = (this.force && !exists(val)) ?\n        null : val[bracketKey];\n    }\n    keyPart = keyPart.slice(this.indexCloseBracket+1); // update key, slice off bracket notation\n    return keyPart ? // if keypart left, back to back fn or brackets so recurse\n      this.getValue(val, keyPart) : val;\n  }\n};\nKeypather.prototype.getLastKey = function () {\n  var lastKeyPart = this.keypathSplit.pop();\n  var indexOpenBracket = lastKeyPart.lastIndexOf('[');\n  var indexCloseBracket = lastKeyPart.lastIndexOf(']');\n  var keyHasBrackets = ~indexOpenBracket && ~indexCloseBracket && (indexOpenBracket < indexCloseBracket);\n\n  if (keyHasBrackets) {\n    var bracketKey = lastKeyPart.slice(indexOpenBracket+1, indexCloseBracket);\n    bracketKey = parseBracketKey(bracketKey);\n    lastKeyPart = lastKeyPart.slice(0, indexOpenBracket);\n    this.keypathSplit.push(lastKeyPart);\n    return bracketKey;\n  }\n  else {\n    return lastKeyPart;\n  }\n};\nKeypather.prototype.getLastObj = function (args, setOperation) {\n  var val;\n  if (this.keypathSplit.length === 0) {\n    val = args[0];\n  }\n  else {\n    var getArgs = Array.prototype.slice.call(args);\n    getArgs[1] = this.keypathSplit.join('.');\n    val = setOperation ?\n      this._get.apply(this, getArgs):\n      this.get.apply(this, getArgs);\n  }\n  return val;\n};\nKeypather.prototype.createPath = function (val /*, keys */) {\n  var keys = Array.prototype.slice.call(arguments, 1);\n  return keys.reduce(function (val, key, i) {\n    if (typeof keys[i+1] === 'number') {\n      val[key] = [];\n    }\n    else {\n      val[key] = {};\n    }\n    return val[key];\n  }, val);\n};\nKeypather.prototype.parseFunctionArgs = function (argsStr) {\n  argsStr = argsStr.trim();\n  if (argsStr.length === 0) {\n    return [];\n  }\n  else if (argsStr==='%') {\n    return this.fnArgs.pop() || [];\n  }\n  var argsSplit = argsStr.split(',').map(trim);\n  var replacementArgs;\n  var self = this;\n  return argsSplit.map(function (arg) {\n    if (arg==='%') {\n      replacementArgs = replacementArgs || self.fnArgs.pop() || [];\n      arg = replacementArgs.pop();\n      return arg;\n    }\n    else {\n      var parsed = parseBracketKey(arg);\n      parsed = exists(parsed) ? parsed : keypather().get(self.obj, arg);\n      if (exists(parsed)) {\n        return parsed;\n      }\n      else {\n        throw new ReferenceError('KeypatherError: Invalid function argument \"'+arg+'\"');\n      }\n    }\n  });\n};\n\nfunction parseBracketKey (key) {\n  key = key.replace(/'/g, '\"'); // single quotes to double\n  try {\n    return JSON.parse(key);\n  }\n  catch (err) { //invalid\n    // console.error(err);\n    return;\n  }\n}\n\nfunction exists (val) {\n  return val !== null && val !== undefined;\n}\nfunction last (arrOrStr) {\n  return arrOrStr[arrOrStr.length - 1];\n}\nfunction makeArray (val) {\n  return Array.isArray(val) ? val : [val];\n}\nfunction trim (str) {\n  return str.trim();\n}\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.Ractive.transitions.fade = factory()\n}(this, function () { 'use strict';\n\n\tvar ractive_transitions_fade = fade;\n\tvar DEFAULTS = {\n\t\tdelay: 0,\n\t\tduration: 300,\n\t\teasing: \"linear\"\n\t};\n\tfunction fade(t, params) {\n\t\tvar targetOpacity;\n\n\t\tparams = t.processParams(params, DEFAULTS);\n\n\t\tif (t.isIntro) {\n\t\t\ttargetOpacity = t.getStyle(\"opacity\");\n\t\t\tt.setStyle(\"opacity\", 0);\n\t\t} else {\n\t\t\ttargetOpacity = 0;\n\t\t}\n\n\t\tt.animateStyle(\"opacity\", targetOpacity, params).then(t.complete);\n\t}\n\n\treturn ractive_transitions_fade;\n\n}));","/*\n * Компонент adfox баннера\n *\n * Свойства компонента: uri - url ссылка инициализации баннера\n *\n */\n\nvar\n\n    _getId = () => {\n        return Math.random().toString(36).substring(7);\n    },\n\n    // подкючение шаблона\n    template = `{{#banner.content}}<div id=\"{{banner.id}}\" class=\"b-ads b-adfox__item\">{{{banner.content}}}</div>{{/banner.content}}`,\n\n    // Компонент\n    Component = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n\n                // получаем из тега\n                uri: null,\n                appear: null,\n                screentype: null,\n\n                // Активный баннер\n                banner: {\n                    id: null,\n                    content: null\n                }\n\n            }\n        },\n\n        oninit() {\n            RG.logger.debug('Adfox component init');\n        },\n\n        onrender() {\n\n            var self = this,\n                screentype = self.get('screentype'),\n                screentypeList = null;\n\n            // Если баннер должен показываться на определенном типе экрана\n            if (!!screentype) {\n\n                screentypeList = screentype.split(' ');\n\n                // Получаем информацию о экране\n                RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n                    // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n                    self.checkForScreenType(screentypeList, RG.ScreenViewer.getScreenInfo().type, self.prepareRun.bind(self));\n\n                    // Если информация обновилась\n                    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n                        // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n                        self.checkForScreenType(screentypeList, screenInfo.type, self.prepareRun.bind(self));\n                    });\n\n                });\n\n            } else {\n\n                // Подготовка баннера\n                self.prepareRun();\n\n            }\n\n        },\n\n        /*\n         * Методы\n         *\n         */\n\n        // Устанавливаем поведение по показу\n        setAppear(id, adfox) {\n\n            var self = this,\n                appear = null;\n\n            /*$(window).load(function(){\n\n                appear = new Waypoint({\n                    element: $(`#${id}`)[0],\n                    handler: function() {\n\n                        // Загружаем баннер\n                        self.loadBanner(adfox);\n\n                        RG.logger.log(`banner #${id}, appeared`);\n\n                        appear.disable();\n                    },\n                    offset: 'bottom-in-view'\n                });\n\n            });*/\n\n        },\n\n        // Подготовка uri\n        prepareUri() {\n\n            var uri = this.get('uri'),\n                adsUri = RG.meta.getPlatform();\n\n            uri = `${uri}&amp;dl=${adsUri}`;\n\n            this.set('uri', uri);\n        },\n\n        // Инициализация баннера\n        initBanner(uri, appear) {\n\n            var tgNS = window.ADFOX.RELOAD_CODE,\n\n                id = _getId(),\n                initData = null,\n\n                adfoxParam = null;\n\n            // Получаем баннер\n            // через метод AdFox - tgNS\n            initData = tgNS.initBanner(id, uri);\n\n            // Добавляем id\n            this.set('banner.id', id);\n\n            // Вставляем в элемент\n            // контент баннера\n            this.set('banner.content', initData.html);\n\n            // Формуируем объект адфокса\n            // для загрузки баннера\n            adfoxParam = {\n                    tgNS,\n                    initData,\n                    uri\n                };\n\n            RG.logger.log(adfoxParam);\n\n            // Проверяем на догрузку по скроллу\n            if (!appear) {\n\n                // Загружаем баннер\n                //tgNS.loadBanner(initData.pr1, uri, initData.sessionId);\n\n                this.loadBanner(adfoxParam);\n\n            } else {\n\n                // Инициализируем догрузку по скроллу\n                this.setAppear(id, adfoxParam);\n            }\n\n        },\n\n        // Загрузка баннера\n        loadBanner(adfox) {\n\n            // Загружаем баннер\n            adfox.tgNS.loadBanner(adfox.initData.pr1, adfox.uri, adfox.initData.sessionId);\n        },\n\n        // Проверка, подходит ли тип экрана\n        checkForScreenType(screentypeList, globalScreenType, callb) {\n\n            var self = this;\n\n            // Проходим по всем типам экрана и проверяем, можем ли мы загрузить баннер\n            $.each(screentypeList, function(i, item){\n\n                // Инициализируем компонент\n                if (item === globalScreenType) {\n\n                    // Если баннера еще нет\n                    if (!self.get('banner.content')) {\n\n                        // Запускаем обратный вызов\n                        callb();\n\n                    }\n                }\n\n            });\n\n        },\n\n        // Предварительная подготовка перед инициализацией баннера\n        prepareRun() {\n\n            // Подготовка uri для баннера\n            this.prepareUri();\n\n            // Инициализация баннера\n            this.initBanner(this.get('uri'), this.get('appear'));\n        }\n\n    });\n\n// Экспортируем компонент\nmodule.exports = Component;","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-filters\\\":\\\"b-search-filters__body\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"is-show\\\":\\\"is-hide\\\"\"}},\" group\"]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_theme group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Темы\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"themes\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.themes\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_projects group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Специальные проекты\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"projects\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.projects\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_period group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Период\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_select b-field_select_select b-search-filters__item_select\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"select\",\"a\":{\"class\":\"b-field__select b-field__select_select\",\"value\":[{\"t\":2,\"r\":\"period\"}],\"type\":\"select\"},\"v\":{\"change\":{\"n\":\"setPeriod\",\"d\":[{\"t\":2,\"r\":\"period\"}]}},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\"value\"}]},\"f\":[{\"t\":2,\"r\":\"name\"}]}],\"r\":\"filters.periods\"}]}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-from b-custom-datepicker_input\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"c\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.from\"}]},\"o\":\"date-picker\"}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-to b-custom-datepicker_input\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"по\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.to\"}]},\"o\":\"date-picker\"}]}]}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__submit group\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit b-field_accent \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":\"Найти\",\"disabled\":[{\"t\":2,\"r\":\"loading\"}]},\"v\":{\"click\":\"find\"}}]}]},\" \"]}]}]}","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-filters b-search-filters_doc\\\":\\\"b-search-filters__body\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"is-show\\\":\\\"is-hide\\\"\"}},\" group\"]},\"f\":[\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-datepub group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Дата публикации\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-from b-custom-datepicker_input\"},\"v\":{\"click\":\"datepiker\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"c\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.from\"}]},\"o\":\"date-picker\"}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text b-search-filters__item_datepicker-to b-custom-datepicker_input\"},\"v\":{\"click\":\"datepiker\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[\"по\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"value\":[{\"t\":2,\"r\":\"searchFilters.to\"}]},\"o\":\"date-picker\"}]}]}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-type group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Тип документа\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"doctype\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.doctype\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-department group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Ведомства\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"org\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.org\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__wrapper_doc-theme group\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__name\"},\"f\":[\"Тема документа\"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__content\"},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_checkbox\"},\"v\":{\"click\":{\"n\":\"addFilter\",\"a\":[\"themes\"]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"name\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"checked\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}],\"i\":\"i\",\"r\":\"filters.themes\"}]}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__submit group\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":\"Применить\"},\"v\":{\"click\":\"find\"}}]}]},\" \"]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-filters__wrapper b-search-filters__reset group\"},\"f\":[{\"t\":7,\"e\":\"a\",\"a\":{\"class\":\"b-link b-link_blue\"},\"f\":[\"Сбросить фильтр\"]}]}]}]}","/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar searchFilters = require('./config').searchFilters,\n    documentsFilters = require('./config').documentsFilters,\n\n    searchTemplate = require('../b-search-filters.ihtml'),\n    documentTemplate = require('../b-search-filters_doc.ihtml'),\n\n    SearchFilters = Ractive.extend({\n\n        template() {\n            return this.get('type') === 'search' ? searchTemplate : documentTemplate;\n        },\n\n        data() {\n            return {\n                paper: false,\n                period: 'any',\n                loading: false,\n\n                // Добавил Леха\n                hide: false // показать|скрыть блок\n            };\n        },\n\n        oninit() {\n\n            RG.logger.debug('SearchFilters');\n\n            let query = RG.query.get(),\n                resultFilters = {};\n\n            this.set('searchFilters', this.get('type') === 'search' ? {\n                    themes: [],\n                    materialTypes: [],\n                    projects: [],\n                    origin: null\n                } : {\n                    themes: [],\n                    doctype: [],\n                    materialTypes: ['doc'],\n                    statuses: [],\n                    org: []\n                });\n\n            switch(this.get('type')) {\n\n                case 'search':\n\n                    this.set('filters', searchFilters);\n                    break;\n\n                case 'document':\n\n                    this.set('filters', documentsFilters);\n                    break;\n            }\n\n            this.on({\n                'addFilter': this.addFilter.bind(this),\n                'setPeriod': this.setPeriod.bind(this),\n                'paper': this.setPaper.bind(this),\n                'find': RG.events.publish.bind(RG.events, 'search.find'),\n                'setOrigin': RG.events.publish.bind(RG.events, 'search.filters.update', this.get('searchFilters')),\n            });\n\n            if(query && !_.isEmpty(query)) {\n\n                if(query.projects) {\n                    resultFilters.projects = query.projects.split(',');\n                }\n\n                if(query.materialTypes) {\n                    resultFilters.materialTypes = query.materialTypes.split(',');\n                }\n\n                if(query.doctype) {\n                    resultFilters.doctype = query.doctype.split(',');\n                }\n\n                if(query.org) {\n                    resultFilters.org = query.org.split(',');\n                }\n\n                if(query.themes) {\n                    resultFilters.themes = query.themes.split(',');\n                }\n\n                if(query.statuses) {\n                    resultFilters.statuses = query.statuses.split(',');\n                }\n\n                if(_.isString(query.from) && _.isString(query.to)) {\n\n                    resultFilters.from = query.from;\n                    resultFilters.to = query.to;\n                }\n                \n                let filters = this.get('filters'),\n                    searchFilters = _.extend(this.get('searchFilters'), resultFilters);\n\n                this.set('searchFilters', searchFilters);\n\n                _.each(filters, (item, index) => {\n\n                    if(_.isArray(item)) {\n\n                        _.each(item, (filter) => {\n\n                            if(typeof searchFilters[index] != 'undefined' && searchFilters[index].indexOf(filter.value) !== -1) {\n                                filter.checked = true;\n                            }\n                        });\n                    }\n\n                });\n\n                this.set('filters', filters);\n\n                //this.emitFilters();\n            }\n\n            RG.events.subscribe('search.find', (topic) => {\n\n                this.set('loading', true);\n            });\n\n            RG.events.subscribe('search.result.show', (topic) => {\n\n                this.set('showResult',true);\n                this.set('loading', false);\n            });\n\n            RG.events.subscribe('date.picked', (topic, inst) => {\n\n                RG.logger.info(topic);\n\n                let from = inst.get('searchFilters.from') || moment().format('DD.MM.YYYY'),\n                    to = inst.get('searchFilters.to') || moment().format('DD.MM.YYYY');\n\n                from = moment(new Date(from.split('.').reverse().join('/')));\n                to = moment(new Date(to.split('.').reverse().join('/')));\n\n                if(from.diff(to) > 0) {\n\n                    to = from;\n                }\n\n                this.set('searchFilters.from', from.format('DD.MM.YYYY'));\n                this.set('searchFilters.to', to.format('DD.MM.YYYY'));\n\n                this.emitFilters();\n            });\n\n            // Леха добавил\n            let filterToggleTopic = this.get('filterTopic') || 'search.filters';\n\n            RG.logger.log(filterToggleTopic);\n\n            RG.events.subscribe(filterToggleTopic + '.show', (topic) => {\n\n                RG.logger.info(topic + 'user');\n\n                //this.set('show', isShow);\n                this.toggle('show');\n            });\n        },\n\n        addFilter(event, name) {\n\n            let checked = `${event.keypath}.checked`,\n                filters = this.get(`searchFilters.${name}`);\n\n            this.toggle(checked);\n\n            if(this.get(checked)) {\n\n                Array\n                    .prototype\n                    .push\n                    .call(filters, event.context.value);\n\n                this.set(`searchFilters.${name}`, filters);\n            } else {\n\n                Array\n                    .prototype\n                    .splice\n                    .call(filters, _.findIndex(event.context.value), 1);\n\n                this.set(`searchFilters.${name}`, filters);\n            }\n\n            this.emitFilters();\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        setPeriod(event, period) {\n\n            let from = null,\n                to = moment().format('DD.MM.YYYY');\n\n            switch(period) {\n\n                case 'any':\n\n                    break;\n                case 'today':\n\n                    from = moment();\n                    break;\n                case 'yestarday':\n\n                    from = moment().subtract(1, 'days');\n                    to = moment().subtract(1, 'days').format('DD.MM.YYYY');\n                    break;\n                case 'week':\n\n                    from = moment().subtract(1, 'weeks');\n                    break;\n                case 'month':\n\n                    from = moment().subtract(1, 'months');\n                    break;\n                case 'year':\n\n                    from = moment().subtract(1, 'years');\n                    break;\n            }\n\n            this.set('searchFilters.to', to);\n            this.set('searchFilters.from', from.format('DD.MM.YYYY'));\n\n            this.emitFilters();\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        setPaper(event) {\n\n            this.toggle('paper');\n\n            event.original.preventDefault();\n            event.original.stopPropagation();\n        },\n\n        emitFilters() {\n\n            var data = _.objFilter(this.get('searchFilters'), elem => {\n\n                return !_.isEmpty(elem);\n            });\n\n            RG.events.publish('search.filters.update', data);\n        }\n    });\n\nmodule.exports = SearchFilters;","/**\n * Created by esolovyev on 25.11.2015.\n */\n\n/**\n * Конфигурационный\n * @type {string}\n */\nvar Config = {\n\n        // Фильры страницы документов\n        documentsFilters: {\n            themes: [\n\n                {\n                    value: 'tema/gos',\n                    name: 'Власть'\n                },\n                {\n                    value: 'tema/ekonomika',\n                    name: 'Экономика'\n                },\n                {\n                    value: 'tema/regional',\n                    name: 'В регионах'\n                },\n                {\n                    value: 'tema/mir',\n                    name: 'В мире'\n                },\n                {\n                    value: 'tema/bezopasnost',\n                    name: 'Происшествия'\n                },\n                {\n                    value: 'tema/obshestvo',\n                    name: 'Общество'\n                },\n                {\n                    value: 'tema/sport',\n                    name: 'Спорт'\n                },\n                {\n                    value: 'tema/kultura',\n                    name: 'Культура'\n                }\n            ],\n            org: [\n                {\n                    name: 'Все ведомства',\n                    value: 'all',\n                    check: true,\n                    \n                },\n                {\n                    name: 'Президент',\n                    value: 'org/prezident',\n                    subDepartments: [\n                        {\n                            name: 'Администрация Президента',\n                            value: 'org/prezident/admin',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет Безопасности',\n                            value: 'org/prezident/sovbez',\n                            \n                            \n                        },\n                        {\n                            name: 'Государственный Совет',\n                            value: 'org/prezident/gossovet',\n                            \n                            \n                        },\n                        {\n                            name: 'Полпреды Президента в федеральных округах',\n                            value: 'org/prezident/polpred',\n                            \n                            \n                        },\n                        {\n                            name: 'Главное управление специальных программ',\n                            value: 'org/prezident/gusp',\n                            \n                            \n                        },\n                        {\n                            name: 'Общественная палата',\n                            value: 'org/prezident/palata',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет по правам человека',\n                            value: 'org/prezident/sovet',\n                            \n                            \n                        },\n                        {\n                            name: 'Уполномоченный по правам ребенка',\n                            value: 'org/prezident/detombudsmen',\n                            \n                            \n                        },\n                        {\n                            name: 'Уполномоченный по правам человека',\n                            value: 'org/prezident/prava',\n                            \n                            \n                        },\n                        {\n                            name: 'Управление делами Президента',\n                            value: 'org/prezident/upravdelami',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Законодательная власть',\n                    value: 'org/zakon',\n                    subDepartments: [\n                        {\n                            name: 'Госдума',\n                            value: 'org/zakon/gosduma',\n                            \n                            \n                        },\n                        {\n                            name: 'Совет Федерации',\n                            value: 'org/zakon/sovfed',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Правительство',\n                    value: 'org/pravitelstvo',\n                    subDepartments: [\n                        {\n                            name: 'Председатель Правительства',\n                            value: 'org/pravitelstvo/premier',\n                            \n                            \n                        },\n                        {\n                            name: 'Вице-премьеры',\n                            value: 'org/pravitelstvo/vicepremijery',\n                            \n                            \n                        },\n                        {\n                            name: 'Президиум',\n                            value: 'org/pravitelstvo/prezidium',\n                            \n                            \n                        },\n                        {\n                            name: 'Аппарат Правительства',\n                            value: 'org/pravitelstvo/apparat',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство иностранных дел',\n                            value: 'org/pravitelstvo/mid',\n                            \n                            \n                        },\n                        {\n                            name: 'Государственная фельдъегерская служба (ГФС)',\n                            value: 'org/pravitelstvo/feldegeri',\n                            \n                            \n                        },\n                        {\n                            name: 'Служба внешней разведки (СВР)',\n                            value: 'org/pravitelstvo/razvedka',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба охраны (ФСО)',\n                            value: 'org/pravitelstvo/fso',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по финансовому мониторингу (Росфинмониторинг)',\n                            value: 'org/pravitelstvo/fedmonitoring',\n                            \n                            \n                        },\n                        {\n                            name: 'Генеральная прокуратура',\n                            value: 'org/pravitelstvo/genprok',\n                            \n                            \n                        },\n                        {\n                            name: 'Следственный комитет (СК)',\n                            value: 'org/pravitelstvo/sledkom',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство культуры',\n                            value: 'org/pravitelstvo/minkultmk',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по делам Крыма',\n                            value: 'org/pravitelstvo/minkrym',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по делам Северного Кавказа',\n                            value: 'org/pravitelstvo/minsevkavkaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по развитию Дальнего Востока',\n                            value: 'org/pravitelstvo/daliniy',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство спорта',\n                            value: 'org/pravitelstvo/minsport',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство строительства и жилищно-коммунального хозяйства (Минстрой)',\n                            value: 'org/pravitelstvo/stroitelstvozhkh',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство транспорта',\n                            value: 'org/pravitelstvo/mintranssvyaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство труда и социальной защиты',\n                            value: 'org/pravitelstvo/trud',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство энергетики',\n                            value: 'org/pravitelstvo/minenergo',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная антимонопольная служба (ФАС)',\n                            value: 'org/pravitelstvo/fedantimonopol',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба государственной статистики (Росстат)',\n                            value: 'org/pravitelstvo/statistika',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная миграционная служба (ФМС)',\n                            value: 'org/pravitelstvo/migracia',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по надзору в сфере защиты прав потребителей и благополучия человека (Роспотребнадзор)',\n                            value: 'org/pravitelstvo/potrebnadzor',\n                            \n                            \n                        },\n                        {\n                            name: 'Рособоронзаказ',\n                            value: 'org/pravitelstvo/oboronzakaz',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по регулированию алкогольного рынка (Росалкогольрегулирование)',\n                            value: 'org/pravitelstvo/posalk',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по финансовым рынкам (ФСФР)',\n                            value: 'org/pravitelstvo/fktsb',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по экологическому, технологическому и атомному надзору (Ростехнадзор)',\n                            value: 'org/pravitelstvo/atom',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное космическое агентство (Роскосмос)',\n                            value: 'org/pravitelstvo/kosmos',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное агентство по обустройству государственной границы (Росграница)',\n                            value: 'org/pravitelstvo/rosgranica',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральное агентство научных организаций (ФАНО)',\n                            value: 'org/pravitelstvo/fano',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство внутренних дел',\n                            value: 'org/pravitelstvo/mvd',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство по чрезвычайным ситуациям',\n                            value: 'org/pravitelstvo/emercom',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство обороны',\n                            value: 'org/pravitelstvo/minoboroni',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство юстиции',\n                            value: 'org/pravitelstvo/minyust',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба безопасности (ФСБ)',\n                            value: 'org/pravitelstvo/fsb',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по контролю за оборотом наркотиков (ФСКН)',\n                            value: 'org/pravitelstvo/narkomitet',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство здравоохранения и социального развития',\n                            value: 'org/pravitelstvo/minzdravsoc',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство образования и науки',\n                            value: 'org/pravitelstvo/minobrnauka',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство природных ресурсов и экологии',\n                            value: 'org/pravitelstvo/minprirody',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство промышленности и торговли',\n                            value: 'org/pravitelstvo/minpromenergo',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство регионального развития',\n                            value: 'org/pravitelstvo/minreg',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство связи и массовых коммуникаций',\n                            value: 'org/pravitelstvo/svyazj',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство сельского хозяйства',\n                            value: 'org/pravitelstvo/minselhoz',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство финансов',\n                            value: 'org/pravitelstvo/minfin',\n                            \n                            \n                        },\n                        {\n                            name: 'Министерство экономического развития',\n                            value: 'org/pravitelstvo/minekonom',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная таможенная служба (ФТС)',\n                            value: 'org/pravitelstvo/fts',\n                            \n                            \n                        },\n                        {\n                            name: 'Федеральная служба по тарифам (ФСТ)',\n                            value: 'org/pravitelstvo/slujba-tarif',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Судебная власть',\n                    value: 'org/sudvlast',\n                    subDepartments: [\n                        {\n                            name: 'Конституционный суд',\n                            value: 'org/sudvlast/konstsud',\n                            \n                            \n                        },\n                        {\n                            name: 'Верховный суд',\n                            value: 'org/sudvlast/sudobshyurisdik/verhsud',\n                            \n                            \n                        },\n                        {\n                            name: 'Суды общей юрисдикции',\n                            value: 'org/sudvlast/sudobshyurisdik',\n                            \n                            \n                        },\n                        {\n                            name: 'Военные суды',\n                            value: 'org/sudvlast/voensud',\n                            \n                            \n                        }\n                    ]\n                },\n                {\n                    name: 'Госфонды и контрольные органы',\n                    value: 'org/goskontrol',\n                    subDepartments: [\n                        {\n                            name: 'Агентство стратегических инициатив',\n                            value: 'org/goskontrol/asi',\n                        },\n                        {\n                            name: 'Российский фонд прямых инвестиций',\n                            value: 'org/goskontrol/investicii',\n\n                        },\n                        {\n                            name: 'Российский фонд федерального имущества (РФФИ)',\n                            value: 'org/goskontrol/gosfond',\n\n                        },\n                        {\n                            name: 'Счетная палата',\n                            value: 'org/goskontrol/schet',\n\n                        },\n                        {\n                            name: 'Пенсионный фонд',\n                            value: 'org/goskontrol/pensii',\n                        },\n                        {\n                            name: 'Федеральный фонд обязательного медицинского страхования',\n                            value: 'org/goskontrol/ffomc',\n                        },\n                        {\n                            name: 'Фонд социального страхования',\n                            value: 'org/goskontrol/sotcial',\n                        },\n                        {\n                            name: 'Центральная избирательная комиссия',\n                            value: 'org/goskontrol/cik',\n                        },\n                        {\n                            name: 'Центральный банк России',\n                            value: 'org/goskontrol/zbrf',\n                        }\n                    ]\n                }\n            ],\n            doctype: [\n                {\n                    name: 'Все типы',\n                    value: 'any',\n                },\n                {\n                    name: 'Федеральный закон',\n                    value: 'fedzakon',\n                },\n                {\n                    name: 'Постановление',\n                    value: 'postanov',\n                },\n                {\n                    name: 'Указ',\n                    value: 'ukaz',\n\n                },\n                {\n                    name: 'Приказ',\n                    value: 'prikaz',\n                },\n                {\n                    name: 'Сообщение',\n                    value: 'soobshenie',\n                },\n                {\n                    name: 'Распоряжение',\n                    value: 'raspr',\n\n                },\n                {\n                    name: 'Законопроект',\n                    value: 'zakonoproekt',\n                }\n            ],\n            statuses: [\n                {\n                    value: 'publishing',\n                    name: 'Опубликован'\n                },\n                {\n                    value: 'effective',\n                    name: 'Вступает в силу'\n                },\n                {\n                    value: 'lost',\n                    name: 'Утратил силу'\n                },\n            ]\n        },\n\n        // Фильтры страницы поиска\n        searchFilters: {\n            themes: [\n\n                {\n                    value: 'tema/gos',\n                    name: 'Власть'\n                },\n                {\n                    value: 'tema/ekonomika',\n                    name: 'Экономика'\n                },\n                {\n                    value: 'tema/regional',\n                    name: 'В регионах'\n                },\n                {\n                    value: 'tema/mir',\n                    name: 'В мире'\n                },\n                {\n                    value: 'tema/bezopasnost',\n                    name: 'Происшествия'\n                },\n                {\n                    value: 'tema/obshestvo',\n                    name: 'Общество'\n                },\n                {\n                    value: 'tema/sport',\n                    name: 'Спорт'\n                },\n                {\n                    value: 'tema/kultura',\n                    name: 'Культура'\n                }\n            ],\n            materialTypes: [\n\n                {\n                    value: 'art',\n                    name: 'Новости'\n                },\n                {\n                    value: 'dok',\n                    name: 'Документы'\n                },\n                {\n                    value: 'fot',\n                    name: 'Фоторепортажи'\n                },\n            ],\n\n            origins: [\n\n                {\n                    value: 'rg',\n                    name: 'Российская газета'\n                },\n                {\n                    value: 'rodina',\n                    name: 'Родина'\n                },\n            ],\n\n            projects: [\n\n                {\n                    value: 'sila',\n                    name: 'Русское оружие'\n                },\n                {\n                    value: 'digital',\n                    name: 'Digital'\n                },\n                {\n                    value: 'kino',\n                    name: 'Кинократия'\n                }\n            ],\n\n            periods: [\n                {\n                    value: 'any',\n                    name: 'Любой'\n                },\n                {\n                    value: 'today',\n                    name: 'За сегодня'\n                },\n                {\n                    value: 'yestarday',\n                    name: 'За вчера'\n                },\n                {\n                    value: 'week',\n                    name: 'За неделю'\n                },\n                {\n                    value: 'month',\n                    name: 'За месяц'\n                },\n                {\n                    value: 'year',\n                    name: 'За год'\n                }\n            ]\n\n        }\n    };\n\nmodule.exports = Config;\n","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-bar\"},\"f\":[{\"t\":7,\"e\":\"form\",\"a\":{\"class\":\"b-form b-search-bar__form\"},\"f\":[{\"t\":7,\"e\":\"fieldset\",\"a\":{\"class\":\"b-form__fieldset\"},\"f\":[\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_input b-field_input_text\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_text\",\"type\":\"text\",\"id\":\"searchInput\",\"value\":[{\"t\":2,\"r\":\"keywords\"}]}}]}]},\" \",{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_submit b-field_accent \",{\"t\":2,\"x\":{\"r\":[\"loading\"],\"s\":\"_0?\\\"b-spinner\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"i\",\"a\":{\"class\":\"b-icon b-icon_type_search\",\"type\":\"submit\",\"value\":\"Найти\",\"disabled\":[{\"t\":2,\"r\":\"loading\"}],\"twoway\":\"false\"},\"v\":{\"click\":\"find\"}}]}]},\" \"]}]}]}]}","/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar template = require('../b-search-bar.ihtml'),\n    SearchBar = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n                keywords: '',\n                type: null,\n\n            };\n        },\n\n        oninit() {\n            RG.logger.debug('SearchBar');\n\n            this.on({\n                'find': event => {\n\n/*                    switch(this.get('type')) {\n\n                        case 'redirect':\n\n                            let keywords = this.get('keywords');\n\n                            window.location = `${window.location.origin}/search/?keywords=${keywords}`;\n\n                            break;\n\n                        default:\n                            RG.events.publish('search.find');\n                    }*/\n\n                    RG.events.publish('search.bar.find');\n\n                    event.original.preventDefault();\n                    event.original.stopPropagation();\n                }\n            });\n\n            this.observe('keywords', (nVal, oVal) => {\n\n                if(!_.isEmpty(nVal.trim()) && !_.isEmpty(oVal.trim()) && nVal.trim() !== oVal.trim()) {\n\n                    RG.events.publish('search.filters.update', {\n                        keywords: this.get('keywords')\n                    });\n                }\n            });\n\n            RG.events.subscribe('search.keywords', (topic, sugestion) => {\n\n                let word = sugestion || '';\n                \n                this.set('keywords', word);\n                //RG.events.publish('search.find');\n            });\n\n            RG.events.subscribe('search.find', (topic) => {\n\n                this.set('loading', true);\n            });\n\n            RG.events.subscribe('search.result.show', (topic) => {\n\n                this.set('loading', false);\n            });\n\n            RG.events.subscribe('search.bar.find', (topic) => {\n\n                RG.logger.info('search.bar.find');\n\n                switch(this.get('type')) {\n\n                    case 'redirect':\n\n                        let keywords = this.get('keywords');\n\n                        window.location = encodeURI(`${window.location.origin}/search/?keywords=${keywords}`);\n\n                        break;\n\n                    default:\n                        RG.events.publish('search.find');\n                }\n            });\n        },\n\n        onrender() {\n\n            this.nodes.searchInput.focus();\n        }\n    });\n\nmodule.exports = SearchBar;","/**\n * Created by esolovyev on 16.11.2015.\n */\n\nvar\n\n    template = require('../search-info.ihtml'),\n\n    SearchInfo = Ractive.extend({\n        \n        template,\n\n        data() {\n            return {\n                sort: false,\n            };\n        },\n\n        oninit() {\n            RG.logger.debug('SearchInfo');\n\n            this.on({\n\n                sort: event => {\n\n                    let sort = this.get('sort') ? 'date' : 'relevant';\n\n                    RG.events.publish('search.sort', sort);\n\n                    this.toggle('sort');\n\n                    event.original.preventDefault();\n                    event.original.stopPropagation();\n                }\n            });\n\n            RG.events.subscribe('search.result.show', (topic, data) => {\n\n                this.set('showResult', true);\n                this.set('materials', data.count);\n            });\n        }\n    });\n\nmodule.exports = SearchInfo;","module.exports={\"v\":3,\"t\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[{\"t\":2,\"x\":{\"r\":[\"rgb\"],\"s\":\"!_0?\\\"b-search-info\\\":\\\"b-search-info__body\\\"\"}},\" group\"]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-search-info__sort\"},\"f\":[\"Сортировать: \",{\"t\":7,\"e\":\"a\",\"a\":{\"class\":\"b-search-info__link b-link b-link_blue\",\"href\":\"#\"},\"v\":{\"click\":\"sort\"},\"f\":[{\"t\":2,\"x\":{\"r\":[\"sort\"],\"s\":\"_0?\\\"По алфавиту\\\":\\\"По рейтингу\\\"\"}}]}]}]}],\"r\":\"showResult\"}]}","/*\n * Блок шаринга через социальные сети (использует yandex share https://tech.yandex.ru/share/)\n *\n * Принцип работы:\n *  В js коде получаем компонент new Ractive.components.share\n *  В ractive шаблоне это компонент <share options={{ Опции модуля yandex share }} owner={{ Топик издателя }} />\n *  По топику издателя - owner мы вызываем событие обновления данных для шаринга\n *\n */\n\nmodule.exports = Ractive.extend({\n\n\t// Шаблон\n\ttemplate: `<div class=\"b-share__body {{ classes }}\">\n                    {{#if content }}<div class=\"b-share__content b-share__item\">{{{content}}}</div>{{/if}}\n                    <div class=\"b-share_ya-share b-share__item\" decorator=\"yandexShare\"></div>\n                </div>`,\n\n\tdecorators: {\n\t\tyandexShare(node) {\n\n            var\n                // Блок яндекса\n                Ya = window.Ya || null,\n                \n                // Алиас на модуль\n                share = null,\n\n                // Стандартные настройки модуля\n                options = {\n                    theme: {\n                        services: 'facebook,twitter,vkontakte,odnoklassniki,gplus',\n                        lang: 'ru',\n                        size: 's'\n                    }\n                };\n\n            // Устанавливаем опции\n            options = $.extend(true, {}, options, this.get('options'));\n\n            // Инициализируем шаринг\n            if (!!Ya && !!Ya.share2) {\n                share = Ya.share2(node, options);\n            }\n\n            // Сохраняем в данные\n            this.set('share', share);\n\n            return {\n                teardown: () => {\n                    $(node).destroy();\n                }\n            };\n\n        }\n\t},\n\n\t// Данные\n    data: () => {\n    \treturn {\n\n            // Топик подписчика, от которого\n            // получаем данные для шеринга\n            owner: null,\n\n            // Настройки yashare\n            options: null,\n\n            // Кастомный текст в блоке\n            // может быть и с тегами\n            content: null,\n\n            // Модификаторы модуля\n            classes: 'b-share_horizontal'\n    \t}\n    },\n\n    /*\n     * Методы\n     *\n     */\n\n    oninit() {},\n\n    onrender() {\n\n        RG.events.subscribe(this.get('owner'), (topic, data) => {\n\n            if (!!data) {\n\n                try {\n\n                    // ОБновляем данные для шаринга\n                    this.get('share').updateContent({\n                        //url: data.url.replace('beta', 'www') || '',\n                        url: data.url || '',\n                        title: data.title || '',\n                        description: data.description || '',\n                        image: data.image || ''\n                    });\n\n                } catch(error) {\n\n                    RG.logger.error('Share не может обновить данные');\n                    RG.logger.error(error);\n                }\n            }\n\n        });\n    }\n\n});","/**\n * Created by esolovyev on 10.12.2015.\n */\n\nvar template = require('../tabs.ihtml'), // подкючение шаблона\n\n    Tabs = Ractive.extend({\n\n        template,\n\n        data: () => {\n            return {\n                selected: 0,\n                items: [],\n            }\n        },\n\n        oninit() {\n\n            RG.logger.debug('Tabs');\n        },\n\n        onrender() {\n\n            /**\n             * Получение позиции выбраного элемента\n             */\n            var index = this.get('selected'),\n                tab = this.findAll('.b-tabs__item')[index],\n\n                selectHandler = _.debounce((event, item) => {\n\n                    let items = this.get('items'),\n                        index = _.findIndex(items, item),\n                        topic = item.topic || 'tab.click.${index}',\n                        data = item.data || null;\n\n                    this.set('selected', index);\n\n                    this.setPosition(event.node);\n\n                    /**\n                     * Вызов глобального события\n                     */\n                    RG.events.publish(topic, data);\n                }, 500);\n\n            /**\n             * Установка ползунка на начальную позицию\n             */\n            this.setPosition(tab);\n\n            /**\n             * Инициализация нажатия на элемент\n             */\n\n            this.on('select', selectHandler);\n\n            RG.events.subscribe('tab.selected.set', (topic, element) => {\n\n                RG.logger.info(topic);\n\n                this.setPosition(element);\n            });\n        },\n\n        /**\n         * Установка позиции ползунка\n         */\n        setPosition(element) {\n\n            if(element) {\n\n                var $element = $(element),\n                    left = $element.position().left,\n                    width = $element.width();\n\n                this.set('left', left);\n                this.set('width', width);\n            }\n        }\n    });\n\nmodule.exports = Tabs;","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-tabs\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-tabs__item b-tabs__item_underline\",\"style\":[\"left: \",{\"t\":2,\"r\":\"left\"},\"px; width: \",{\"t\":2,\"r\":\"width\"},\"px;\"]}},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-tabs__item \",{\"t\":2,\"x\":{\"r\":[\"item.class\",\"i\"],\"s\":\"_0?_0:\\\"b-tab__item_\\\"+_1\"}}]},\"v\":{\"click\":{\"n\":\"select\",\"d\":[{\"t\":2,\"r\":\".\"}]}},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-tabs__title \",{\"t\":2,\"x\":{\"r\":[\"i\",\"selected\"],\"s\":\"_0===_1?\\\"b-tab__title_selected\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":3,\"r\":\"title\"}]}]}],\"i\":\"i\",\"r\":\"items\"}]}]}","/*\n * Компонент директа\n *\n * Свойства компонента\n *\n\n items = [\n    // объекты по разрешениям\n    {\n        // Разрешение на котором показываем\n        resolution: { desktop: true },\n        \n        // Блоки директа, которые показываем в ротации\n        blocks: [\n            id: ID блока,\n            rate: ПРИОРИТЕТ РОТАЦИИ,\n            yaDirect: ОБЪЕКТ НАСТРОЕКТ ДИРЕКТА\n        ]\n    }\n ]\n \n *\n */\n\nvar \n\n    // Выбрать по приоритету   \n    // @list Array - список элементов\n    // @rateMap Array - карта весов  \n    _getRandomItem = (list, rateMap) => {\n\n        var randomNum = null,\n            weightSum = 0,\n\n            rateList = rateMap.list,\n            iterator = 0,\n            listLength = list.length;\n\n        // Получаем случайное число в пределах\n        // наших баннеров\n        randomNum = rand(0, rateMap.fullRate);\n         \n        // Алгоритм\n        for (; iterator < listLength; iterator++) {\n\n            weightSum += rateList[iterator];\n\n            // Преобразуем в число\n            weightSum = +weightSum;\n             \n            if (randomNum <= weightSum) {\n                return list[iterator];\n            }\n\n        }\n         \n        // Выдать рандомное число от и до\n        function rand(min, max) {\n            return Math.random() * (max - min) + min;\n        };\n    },\n    \n    // Получить STAT_ID\n    _getStatId = (param) => {\n\n        var statId = null,\n            screenInfoMap = {\n                mobile: 1,\n                tablet: 2,\n                tabletLandscape: 3,\n                desktop: 4,\n                desktopFull: 5\n            };\n\n        /*\n         *  ID Проекта (10-99) (Основной сайт - 10) ID места (10-99) ID Эксперимента (1-9)  Разрешение экрана (1-5)\n            \n            Пользовательское разрешение экрана:\n            1 - Телефон\n            2 - Планшет\n            3 - Планшет(ландшат)\n            4 - Монитор\n            5 - Широкоформатный\n            \n            Например: 11 5 2 15\n            \n            Максимальное возможное число 16 777 215 https://yandex.ru/support/partner/products-direct/variables-description.xml\n        *\n        */\n\n        statId = [\n            param.project, // ID Проекта берем из шаблона компонента\n            param.place, // площадка, берем из шаблона компонента\n            param.id, // ID эксперимента, берем из шаблона компонента\n            screenInfoMap[param.screenInfo.type], // разрешение экрана\n        ];\n\n        return statId.join('');\n\n    },\n\n    //template = `{{#items}}<div id=\"{{containerId}}\" class=\"ya-direct-root ya-direct-{{yaDirect.type}}\"></div>{{/items}}`, // подкючение шаблона\n    template = `<div id=\"{{banner.containerId}}\" class=\"ya-direct-root ya-direct-{{banner.yaDirect.type}}\"></div>`, // подкючение шаблона\n\n    // Компонент\n    Yadirect = Ractive.extend({\n\n        template,\n\n        data() {\n            return {\n                project: null, // получаем из тега\n                place: null, // получаем из тега\n                items: null, // получаем из тега\n\n                screenInfo: null\n            }\n        },\n\n        oninit() {\n            RG.logger.debug('Yadirect component init');\n        },\n\n        onrender() {\n\n            var self = this;\n\n            // Получаем информацию о экране\n            RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n                self.set('screenInfo', RG.ScreenViewer.getScreenInfo());\n\n                // Инициализируем директ\n                self.initDirect();\n\n                // Если информация обновилась\n                RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n                    self.set('screenInfo', RG.ScreenViewer.getScreenInfo());\n\n                    // Инициализируем директ\n                    self.initDirect();\n                });\n\n            });\n        },\n\n        /*\n         * Методы\n         *\n         */\n\n        // Инициализация компонента баннера\n        initDirect() {\n\n            var self = this,\n                items = this.get('items'),\n                directPlaceId = '29789',\n                screenInfo = self.get('screenInfo'),\n                resolution = null, // разрешение, при котором показываем\n\n                banner = null, // Выбранный баннер\n                containerId = null, // ID контейнера\n                prop = null; // Свойства идут в директ\n\n            // Фильтруем элементы по подходящему разрешению\n            $.each(items, function(index, item){\n\n                var resolution = item.resolution,\n                    blocks = null;\n\n                // Если в карте разрешений, текущее разрешение совпадает, то выводим\n                if (!!resolution[screenInfo.type]) {\n\n                    // Находим баннеры\n                    blocks = item.blocks;\n\n                    // Выбираем баннер\n                    banner = _getRandomItem(blocks, self.getRateMap(blocks));\n\n                    // Свойства идут в директ\n                    prop = banner.yaDirect;\n\n                    // ID контенера, куда инициализируем директ (совпадает с тем, что в шаблоне)\n                    containerId = `${prop.ad_format}_${prop.type}_${banner.id}_${Math.random().toString(36).substring(7)}`;\n\n                    // Устанавливаем свойства для шаблона\n                    self.set('banner.containerId', containerId);\n                    self.set('banner.yaDirect', prop);\n\n                    // Задаем пространство имен\n                    window.yandex_context_callbacks = window.yandex_context_callbacks || [];\n\n                    // Дополняем параметры непонятно, что с этим делаем\n                    // Stat_id\n                    prop.stat_id = _getStatId({\n                        project: self.get('project'),\n                        screenInfo: screenInfo,\n                        id: banner.id,\n                        place: self.get('place'),\n                    });\n\n                    RG.logger.log(prop);\n\n                    // Инициализируем баннер\n                    window.yandex_context_callbacks.push(function() {\n                        Ya.Direct.insertInto(directPlaceId, containerId, prop);\n                    });\n\n                    // Инициализируем библиотеку\n                    self.loadLib();\n\n                } else {\n\n                    $('#' + self.get('banner.containerId')).empty();\n                }\n\n            });\n\n        },\n\n        // Загрузка библиотеки\n        loadLib() {\n\n            var libSrc = '//an.yandex.ru/system/context.js';\n\n            // Грузим библиотеку\n            $.getScript(libSrc);\n\n        },\n\n        // Получаем сумму всех весов\n        // которая будет границей диапазона\n        getRateMap(blocks) {\n\n            var map = {};\n\n            // Заполняем карту весов\n            map.fullRate = 0;\n            map.list = [];\n\n            // Получаем сумму\n            $.each(blocks, function(index, banner) {\n\n                var rate = banner.rate;\n\n                map.list.push(rate);\n                map.fullRate += rate;\n            });\n\n            return map;\n        },\n\n    });\n\n// Экспортируем компонент\nmodule.exports = Yadirect;","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-button\"},\"f\":[{\"t\":7,\"e\":\"button\",\"a\":{\"class\":\"b-button__button b-field__input_submit\"},\"v\":{\"click\":\"press\"},\"f\":[{\"t\":2,\"r\":\"txt\"}]}]}]}","/**\n * Created by esolovyev on 07.03.2016.\n */\n\nvar template = require('../b-button.ihtml'),\n\n    Button = Ractive.extend({\n\n        template,\n\n        oninit() {\n\n            this.on('press', event => {\n\n                let context = this.get(),\n                    topic = this.get('topic');\n\n                RG.events.publish(topic, context);\n\n                event.original.preventDefault();\n            });\n        }\n    });\n\nmodule.exports = Button;\n","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_checkbox \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_input_checkbox_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"v\":{\"click\":\"toggle\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":3,\"r\":\"label\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_checkbox\",\"type\":\"checkbox\"},\"m\":[{\"t\":2,\"x\":{\"r\":[\"value\"],\"s\":\"_0?\\\"checked\\\":\\\"\\\"\"}}]},\" \",{\"t\":7,\"e\":\"span\",\"a\":{\"class\":\"b-field__icon\"}}]}]}]}","/**\n * Created by esolovyev on 29.02.2016.\n */\n\nvar \n    \n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-checkbox.ihtml'),\n\n    Checkbox = Ractive.extend(\n\n        FormTools,\n\n        {\n            \n            template,\n\n            data() {\n                return {\n                    name: 'checkbox',\n                    highlight: true,\n                    highlighted: false,\n                }\n            },\n\n            oninit() {\n\n                let form = this.get('form'),\n                    name = this.get('name');\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n                });\n\n                this.on('toggle', (e) => {\n\n                    this.toggle('value')\n\n                    RG.events.publish(`form.${form}.update.${name}`, this.get('value'));\n\n                    e.original.preventDefault();\n                });\n            },\n\n            reset() {\n\n                this.set('value', false);\n            },\n\n            check() {\n                \n                // Если поле обязательное, проверяем\n                // выбрано ли оно\n                if(this.get('required')) {\n                    return this.get('value');\n                }\n\n                return true;\n            }\n\n        }\n    );\n\nmodule.exports = Checkbox;\n","/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar Input = require('../../b-input/scripts/Input'),\n    Email = Input.extend({\n\n        data() {\n            return {\n                name: 'email',\n                type: 'email',\n                placeholder: 'e-mail',\n                format: 'email',\n                label: ''\n            }\n        }\n    });\n\nmodule.exports = Email;\n","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":[\"b-form-message b-form-message\",{\"t\":2,\"x\":{\"r\":[\"show\"],\"s\":\"_0?\\\"_show\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-form-message__content\"},\"f\":[{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-form-message__title\"},\"f\":[{\"t\":3,\"r\":\"title\"}]},\" \",{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-form-message__text\"},\"f\":[{\"t\":3,\"r\":\"txt\"}]},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-form-message__button\"},\"f\":[{\"t\":7,\"e\":\"rg-button\",\"a\":{\"txt\":[{\"t\":2,\"r\":\"button\"}],\"topic\":[\"'form.\",{\"t\":2,\"r\":\"form\"},\".message.hide'\"]}}]}]}]}]}","/**\n * Created by esolovyev on 07.03.2016.\n */\n\nvar Button = require('../../b-button/scripts/Button.js'),\n    template = require('../b-form-message.ihtml'),\n\n    FormMessage = Ractive.extend({\n\n        template,\n\n        components: {\n            'rg-button': Button\n        },\n\n        oninit() {\n\n            let form = this.get('form');\n        \n            RG.events.subscribe(`form.${form}.message.show`, topic => {\n\n                RG.logger.info(topic);\n\n                this.set('show', true);\n            }); \n\n            RG.events.subscribe(`form.${form}.message.hide`, topic => {\n                \n                RG.logger.info(topic);\n                \n                this.set('show', false);\n            });\n        }\n    });\n\nmodule.exports = FormMessage;\n","/**\n * Created by esolovyev on 27.02.2016.\n */\n\nclass Form {\n\n    constructor(options) {\n\n        RG.logger.debug('Form');\n\n        this.el = options.el;\n        this.options = options.data || {};\n        this.template = options.data.template;\n        this.formData = {};\n\n        let components = [];\n\n        if(!_.isEmpty(this.options.tmpl)) {\n\n            this.template = this._getTemplate(this.options.tmpl);\n        }\n\n        if(!_.isEmpty(this.template)) {\n\n            return this.renderForm();\n        } else {\n\n            components = RG.parser.findComponents(this.el);\n\n            this.registerEvents(components);\n            this.fields = this.renderComponents(components);\n        }\n    }\n\n    updateFormData(topic, value) {\n\n        RG.logger.info(topic);\n\n        let name = topic.split('.').pop();\n\n        this.formData[name] = value;\n    }\n\n    setFormData(data) {\n\n        if(!_.isEmpty(data) && this.fields.length) {\n\n            _.each(data, (value, name) => {\n\n                RG.events.publish(`form.${this.options.name}.set.${name}`, value);\n            });\n        }\n    }\n\n    getFormData() {\n\n        let data = {};\n\n        if(this.fields.length) {\n\n            _.each(this.fields, field => {\n\n                let name = field.get('name'),\n                    value = field.get('value');\n\n                if(!_.isEmpty(name) && value) {\n\n                    data[name] = value;\n                }\n            });\n        }\n\n        data.form_id = parseInt(this.options.id);\n        data.article_id = RG.meta.getMaterial() || 0;\n        data.user_id = RG.session.getUserData().id || 0;\n\n        return data;\n    }\n\n    renderForm() {\n\n        this.form = new Ractive({\n            data: this.options,\n            el: this.el,\n            template: this.template\n        });\n\n        let components = this.form.findAllComponents();\n\n        this.fields = _.filter(components, component => {\n\n            return component.form === this.name;\n        });\n\n        RG.forms[this.options.name] = this;\n\n        return this.form;\n    }\n\n    renderComponents(items) {\n\n        let fields = [];\n\n        if(items.length) {\n\n            _.each(items, component => {\n\n                let instances = RG.parser.render(component.tag);\n\n                fields = fields.concat(instances);\n            });\n        }\n\n        return fields;\n    }\n\n    registerEvents(items) {\n\n        RG.events.subscribe(`form.${this.options.name}.submit`, this._submit.bind(this));\n\n        _.each(items, item => {\n\n            RG.events.subscribe(`form.${this.options.name}.update.${item.data.name}`, this.updateFormData.bind(this));\n        });\n    }\n\n    validate() {\n\n        var fields = this.fields,\n            length = this.fields.length,\n            valid = true;\n\n        if(length) {\n\n            for(let i = 0; i < length; i++) {\n\n                if(_.isFunction(fields[i].validate)) {\n\n                    if(!fields[i].validate(valid)) {\n                        valid = false;\n                    }\n                }\n            }\n        }\n\n        return valid;\n    }\n\n    _getTemplate(url) {\n\n        let template = '';\n\n        $.ajax({\n            url,\n            success: tmpl => {\n\n                template = tmpl;\n            },\n            async: false\n        });\n\n        return template;\n    }\n\n    _submit(topic, context) {\n\n        RG.logger.info(topic);\n\n        $('.js-ask-submit').addClass('disabled');\n\n        if(context.form === this.options.name) {\n\n            if(this.validate()) {\n\n                let method = this.options.method;\n\n                this.formData = this.getFormData(this.options.id);\n\n                RG.logger.trace(this.formData);\n\n                if(method === 'get' || method === 'post') {\n\n                    $[method](this.options.action, this.formData).then(response => {\n\n                        if(this.options.empty) {\n\n                            RG.events.publish(`form.${this.options.name}.empty`);\n                        }\n\n                        RG.events.publish(`form.${this.options.name}.message.show`, response);\n\n                        _.each(this.fields, item => {\n\n                            if (_.isFunction(item.resetField)) {\n                                item.resetField();\n                            }\n\n                        });\n\n                    });\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = Form;\n\n","/*\n * Вспомогательные методы для\n * обработки формы и полей формы\n *\n */\n\n /*\n  * Для подключения счетчика введенных символов,\n  * к атрибутам в data надо добавить объект maxlength,\n  * в котором есть 3 параметра: size (int, ограничитель вводимых символов),\n  * show (boolean, показывать ли этот счётчик)\n  * и backward (boolean, считать от 0 до maxlength или наоборот)\n  *\n  */\n\nvar FormTools = Ractive.extend({\n\n    checkMaxLength(form, name) {\n\n        let maxNum = this.get('maxlength.size'), // Максимальная длина инпута\n            maxlengthback = this.get('maxlength.backward');  // Обратный отсчёт\n\n        // Слушатель изменения инпута\n        this.observe('value', (nVal, oVal) => {\n\n            // Если есть значение, или оно не равно предыдущему значению\n            if (!_.isEmpty(nVal) && nVal !== oVal) {\n\n                // Если в обратку\n                if (maxlengthback) {\n\n                    // То вычитываем из максимального числа длину введённых символов\n                    this.set('enteredValueLength', (maxNum - nVal.length));\n\n                } else {\n\n                    // Считываем длину введённых символов\n                    this.set('enteredValueLength', nVal.length);\n\n                }\n\n                // Если длина введённых символов больше максмимального значения\n                if (nVal.length >= maxNum) {\n\n                    // выкидываем событие максимальной заполненности\n                    RG.events.publish(`form.${form}.${name}.reached.max`, nVal);\n\n                }\n\n                // Выкидываем событие обновления инпута\n                RG.events.publish(`form.${form}.update.${name}`, nVal);\n\n            } else {\n\n                // Если в обратку\n                if (maxlengthback) {\n\n                    // Выставляем 0, если значение инпута отсутсвует\n                    this.set('enteredValueLength', maxNum);\n\n                } else {\n\n                    // Выставляем 0, если значение инпута отсутсвует\n                    this.set('enteredValueLength', 0);\n\n                }\n\n                // Выкидываем событие отсутствия заполненности\n                RG.events.publish(`form.${form}.${name}.reached.zero`, nVal);\n\n            }\n        });\n\n    },\n                                 \n    // Валидация\n    validate(show) {\n\n        // Если проверка пройдена\n        if (this.check()) {\n\n            // Убираем подсветку\n            return !this.highlight(false);\n            \n        } else {\n\n            if (show) {\n                this.showMsg();\n            }\n\n            $('.js-ask-submit').removeClass('disabled');\n\n            // Подсвечиваем\n            return !this.highlight(true);\n\n        }\n    },\n\n    // Сообщения об ошибках\n    showMsg() {\n\n        var errorMsg = null,\n            error = this.get('error'),\n            type = this.get('type');\n\n        errorMsg = error ? error : RG.config.messages[`${type}NotValid`] || RG.config.messages['inputNotValid'];\n\n        this.set('errorMsg', null);\n        this.set('errorMsg', errorMsg);\n\n    },\n\n    // Подсветка ошибок\n    highlight(highlight) {\n\n        if (this.get('highlight')) {\n\n            this.set('highlighted', highlight);\n\n        }\n\n        return highlight;\n\n    },\n\n    // Сброс заполнения формы\n    resetField() {\n\n        if (this.get('type') !== 'submit') {\n\n            this.set('value', null);\n\n            $(\".b-field__select option\").each(function() {\n                if (!+$(this).attr('value')) {\n                    $(this).prop(\"selected\", true);\n                }\n            });\n\n            $('.js-ask-submit').removeClass('disabled');\n\n        }\n\n    }\n\n});\n\nmodule.exports = FormTools;","module.exports={\"v\":3,\"t\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"t0\":\"fade\",\"a\":{\"class\":[\"b-input-notification \",{\"t\":2,\"r\":\"class\"}]},\"v\":{\"click\":\"notify\"},\"f\":[{\"t\":7,\"e\":\"p\",\"a\":{\"class\":\"b-input-notification__msg\"},\"f\":[{\"t\":3,\"r\":\"msg\"}]}]}],\"r\":\"show\"}]}","/**\n * Created by esolovyev on 07.10.2015.\n */\n\nvar template = require('../b-input-notification.ihtml'),\n\n    InputNotification = Ractive.extend({\n        template,\n        timeOut: null,\n        data: {\n            msg: '',\n            show: false,\n            class: ''\n        },\n        oninit() {\n\n            RG.logger.debug('InputNotification');\n\n            this.observe('msg', this.showMsg.bind(this));\n        },\n\n        showMsg(msg) {\n\n            RG.logger.trace('notification');\n            \n            clearTimeout(this.timeOut);\n\n            if(this.get('msg') !== '') {\n                this.set('show', true);\n\n                this.timeOut = setTimeout(() => {\n\n                    //this.set('msg',null);\n                    this.set('show', false);\n                }, this.get('off'));\n            }\n\n            this.on('notify', event => {\n\n                RG.events.publish('notification.click');\n            });\n        }\n    });\n\nmodule.exports = InputNotification;","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_input b-field_input_text \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_input_text_highlighted\\\":\\\"\\\"\"}},\" b-field_input_\",{\"t\":2,\"r\":\"type\"},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":3,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[{\"t\":2,\"r\":\"enteredValueLength\"},\"/\",{\"t\":2,\"r\":\"size\"}]}],\"n\":51,\"r\":\"backward\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[\"Осталось символов: \",{\"t\":2,\"r\":\"enteredValueLength\"}]}],\"r\":\"backward\"}],\"r\":\"show\"}],\"r\":\"maxlength\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input-notification\",\"a\":{\"msg\":[{\"t\":2,\"r\":\"errorMsg\"}],\"off\":\"5000\"}},\" \",{\"t\":7,\"e\":\"input\",\"a\":{\"name\":[{\"t\":2,\"r\":\"name\"}],\"class\":[\"b-field__input b-field__input_text b-field__input_\",{\"t\":2,\"r\":\"type\"}],\"type\":[{\"t\":2,\"r\":\"type\"}],\"placeholder\":[{\"t\":2,\"r\":\"placeholder\"}],\"value\":[{\"t\":2,\"r\":\"value\"}]},\"m\":[{\"t\":4,\"f\":[\"maxlength=\\\"\",{\"t\":2,\"r\":\"size\"},\"\\\"\"],\"r\":\"maxlength\"}]}]}]}]}","/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar \n\n    // Подключаем уведомления по инпутам\n    InputNotification = require('../../b-input-notification/scripts/InputNotification'),\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-input.ihtml'),\n\n    Input = Ractive.extend(\n\n        FormTools,\n\n        {\n\n            template,\n\n            components: {\n                'input-notification': InputNotification\n            },\n\n            data() {\n\n                return {\n                    highlight: true,\n                    highlighted: false,\n                    type: 'text',\n                    name: 'input'\n                }\n\n            },\n\n            oninit() {\n\n                let form = this.get('form'), // Элемент формы\n                    name = this.get('name'), // Имя инпута\n                    maxNum = this.get('maxlength.size'), // Максимальная длина инпута\n                    maxlengthback = this.get('maxlength.backward');  // Обратный отсчёт\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n\n                });\n\n                // Слушатель изменения инпута\n                this.observe('value', (nVal, oVal) => {\n\n                    if(!_.isEmpty(nVal) && nVal !== oVal) {\n\n                        RG.events.publish(`form.${form}.update.${name}`, nVal);\n                    }\n                });\n\n                this.checkMaxLength(form, name);\n            },\n\n            check() {\n\n                var pattern = this.get('pattern') || /.+/gi,\n                    format = this.get('format'),\n                    value = this.get('value');\n\n                if (format) {\n\n                    pattern = RG.config.formats[format];\n\n                }\n\n                if (this.get('required')) {\n\n                    return pattern.test(value);\n\n                }\n\n                return true;\n\n            }\n\n        }\n    );\n\nmodule.exports = Input;\n","/**\r\n * Created by esolovyev on 29.02.2016.\r\n */\r\n\r\nvar Input = require('../../b-input/scripts/Input'),\r\n    Name = Input.extend({\r\n\r\n        data() {\r\n            return {\r\n                name: 'name',\r\n                type: 'text',\r\n                placeholder: 'Имя',\r\n                format: 'name'\r\n            };\r\n        },\r\n    });\r\n\r\nmodule.exports = Name;\r\n","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_select b-field_select_select \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_select_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"select\",\"a\":{\"class\":\"b-field__select b-field__select_select\",\"value\":[{\"t\":2,\"r\":\"selectedOption\"}],\"type\":\"select\"},\"v\":{\"change\":\"select\"},\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\"value\"}]},\"f\":[{\"t\":3,\"r\":\"content\"}]}],\"n\":50,\"x\":{\"r\":[\"value\"],\"s\":\"_0!==null&&_0!==undefined\"}},{\"t\":4,\"n\":51,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\".\"}]},\"f\":[{\"t\":3,\"r\":\"content\"}]}],\"x\":{\"r\":[\"value\"],\"s\":\"_0!==null&&_0!==undefined\"}}],\"r\":\"isObject\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"option\",\"a\":{\"value\":[{\"t\":2,\"r\":\".\"}]},\"f\":[{\"t\":3,\"r\":\".\"}]}],\"n\":51,\"r\":\"isObject\"}],\"r\":\"items\"}]}]}]}]}","/**\n * Created by esolovyev on 14.02.2016.\n */\n\nvar template = require('../b-select.ihtml'), // подкючение шаблона\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    Select = Ractive.extend(\n\n        FormTools,\n\n        {\n            template,        \n            data() {\n                return {\n                    items: [],\n                    selectedOption: null,\n                    name: 'select',\n                    isObject: true,\n                    highlight: true,\n                    highlighted: false\n                };\n            },    \n            oninit() {\n                RG.logger.debug('Select');\n\n                var self = this,\n                    items = this.get('items'),\n                    isObject = null;\n\n                if ($('rg-select').hasClass('js-ask-form-select')) {\n                    $.ajax({\n                        url: 'https://pravo.rg.ru/ask/?format=json',\n                        success: function(data) {\n                            var itemsDefault = self.get('items'),\n                                itemsNew = data.rubrics,\n                                itemsList = null;\n\n                            itemsList = itemsDefault.concat(itemsNew);\n\n                            self.set('items', itemsList);\n                        },\n                        error: function(data) {\n                            console.log(data);\n                        }\n                    });\n                }\n            },\n\n            onrender() {\n\n                var items = this.get('items');\n                //isObject = _.some(items, item => { return !item.value});\n\n                // Проверяем, массив ли у нас списка или массив объектов    \n                this.set('isObject', _.isObject(items[0]));\n\n                /**\n                 *\n                 * Локалные события\n                 */\n                this.on({\n                    'select': (event) => {    \n                        var item = this.get('selectedOption'),\n                            form = this.get('form'),\n                            name = this.get('name');\n    \n                        // Если вообще есть выбранная опция\n                        // или ее данные (не будет работать, если <option value=\"null\")\n                        if (item) {\n\n                            // Если есть параметр ссылки,\n                            // то переходим по ссылке с перезагрузкой страницы\n                            if(item.href && item.href !== '#') {\n\n                                document.location.href = item.href;\n\n                            // Если есть кастомное событие\n                            // вызываем его\n                            } else if(item.topic) {\n\n                                RG.events.publish(item.topic, item);\n\n                            // Публикуем обновление данных формы\n                            // вариант, когда просто селект в форме\n                            } else {\n\n                                RG.events.publish(`form.${form}.update.${name}`, item);\n\n                            }\n\n                            // Я не знаю что это, Ефим делал\n                            // какая-то связка данных\n                            // если оставить без проверки, то он сохраняет в value - строку [object Object]\n                            // если вообще закомментировать, то ничего не работает при каком-то условии, не помню каком\n                             // if (!!this.get('value')) {\n                                this.set('value', item);\n                             // }\n\n                        }       \n                        event.original.preventDefault();\n                    }\n                });\n    \n            },\n    \n            check() {\n\n                console.log(this);\n    \n                if(this.get('required')) {    \n                    return this.get('value'); \n                }\n    \n                return true;\n    \n            }\n        }\n\n    );\n\nmodule.exports = Select;","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":\"b-field b-field_type_comment b-field_input b-field_input_submit js-ask-submit\"},\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"input\",\"a\":{\"class\":\"b-field__input b-field__input_submit\",\"type\":\"submit\",\"value\":[{\"t\":2,\"r\":\"text\"}]},\"v\":{\"click\":\"submit\"}}]}]}]}","/**\n * Created by esolovyev on 25.02.2016.\n */\n\nvar template = require('../b-submit.ihtml'),\n\n    Submit = Ractive.extend({\n\n        template,\n\n        data() {\n\n            return {\n                type: 'submit'\n            }\n        },\n\n        oninit() {\n\n            this.on('submit', e => {\n\n                let context = this.get(),\n                    form = this.get('form');\n\n                RG.events.publish(`form.${form}.submit`, context);\n            });\n        }\n    });\n\nmodule.exports = Submit;\n","module.exports={\"v\":3,\"t\":[{\"t\":7,\"e\":\"label\",\"a\":{\"class\":[\"b-field b-field_textarea b-field_textarea_textarea \",{\"t\":2,\"x\":{\"r\":[\"highlighted\"],\"s\":\"_0?\\\"b-field_textarea_highlighted\\\":\\\"\\\"\"}},\" \",{\"t\":2,\"x\":{\"r\":[\"required\"],\"s\":\"_0?\\\"b-field_required\\\":\\\"\\\"\"}}]},\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__label\"},\"f\":[{\"t\":2,\"r\":\"label\"}]}],\"r\":\"label\"},\" \",{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[{\"t\":2,\"r\":\"enteredValueLength\"},\"/\",{\"t\":2,\"r\":\"size\"}]}],\"n\":51,\"r\":\"backward\"},\" \",{\"t\":4,\"f\":[{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__maxlength\"},\"f\":[\"Осталось символов: \",{\"t\":2,\"r\":\"enteredValueLength\"}]}],\"r\":\"backward\"}],\"r\":\"show\"}],\"r\":\"maxlength\"},\" \",{\"t\":7,\"e\":\"div\",\"a\":{\"class\":\"b-field__wrapper\"},\"f\":[{\"t\":7,\"e\":\"textarea\",\"a\":{\"name\":[{\"t\":2,\"r\":\"name\"}],\"class\":\"b-field__textarea b-field__textarea_textarea\",\"placeholder\":[{\"t\":2,\"r\":\"placeholder\"}],\"value\":[{\"t\":2,\"r\":\"value\"}]},\"m\":[{\"t\":4,\"f\":[\"maxlength=\\\"\",{\"t\":2,\"r\":\"size\"},\"\\\"\"],\"r\":\"maxlength\"}]}]}]}]}","/**\n * Created by esolovyev on 29.02.2016.\n */\n\n\nvar \n\n    // Подключаем уведомления по инпутам\n    InputNotification = require('../../b-input-notification/scripts/InputNotification'),\n\n    // Инструменты, расширяющие стандартный модуль\n    FormTools = require('../../b-form/scripts/FormTools'),\n\n    // Шаблон\n    template = require('../b-textarea.ihtml'),\n\n    Textarea = Ractive.extend(\n\n        FormTools,\n\n        {\n\n            template,\n\n            components: {\n                'input-notification': InputNotification\n            },\n\n            data() {\n\n                return {\n                    name: 'textarea',\n                    highlight: true,\n                    highlighted: false\n                }\n\n            },\n\n            oninit() {\n\n                let form = this.get('form'),\n                    name = this.get('name');\n\n                RG.events.subscribe(`form.${form}.set.${name}`, (topic, value) => {\n\n                    this.set('value', value);\n                });\n\n                this.observe('value', (nVal, oVal) => {\n\n                    if(!_.isEmpty(nVal) && nVal !== oVal) {\n\n                        RG.events.publish(`form.${form}.update.${name}`, nVal);\n                    }\n                });\n\n                this.checkMaxLength(form, name);\n\n            },\n\n            check() {\n\n                var value = this.get('value');\n\n                if(this.get('required')) {\n                    return !_.isEmpty(value);\n                }\n\n                return true;\n\n            }\n        }\n    );\n\nmodule.exports = Textarea;\n","$(document).ready(function() {\r\n/*if (window.location.search === '?dev=true') {\r\n\t$('.b-search').css('display', 'inline-block');\r\n}*/\r\n\tfunction mobileMenuDisplay() {\r\n\t\tvar menuMobileLink = $('#js-mobile-menu'),\r\n\t\t\tmenuMobile = $('.b-menu-mobile');\r\n\r\n\t\tmenuMobileLink.on('click tap', function(e) {\r\n\t\t\tmenuMobile.toggle();\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\t$(document).on('click tap', function(e) {\r\n\t\t\tif (menuMobile.has(e.target).length === 0) {\r\n\t\t\t\tmenuMobile.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction searchBarDisplay() {\r\n\t\tvar\tsearchIcon = $('#js-search-icon'),\r\n\t\t\tsearchOverlay = $('#cboxOverlay'),\r\n\t\t\tsearchBar = $('#js-search-bar');\r\n\r\n\t\tsearchIcon.on('click', function(e) {\r\n\t\t\t/*searchOverlay.show().append(searchBar);\r\n\t\t\tsearchBar.show();*/\r\n\t\t\tRG.events.publish('search.overlay.show');\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\t\t/*searchOverlay.on('click', function() {\r\n\t\t\t$(this).hide().remove(searchBar);\r\n\t\t\tsearchBar.hide();\r\n\t\t});*/\r\n\t}\r\n\t\r\n\tmobileMenuDisplay();\r\n\tsearchBarDisplay();\r\n\r\n\t/*$('#form').on('submit', function() {\r\n\t\twindow.location.href = \r\n\t\t\t\"/search/?query=\" + encodeURIComponent($(this).find(\"input[name=input_text]\").val()) + \r\n\t\t\t'&search=' + $(this).find(\"#select\").val();\r\n\t});*/\r\n\r\n});\r\n","/**\n * Created by esolovyev on 29.01.2016.\n */\n\nvar LiveReload = Ractive.extend({\n\n    data() {\n        return {\n            dateFormat: RG.datetime.parseVmDate\n        }\n    },\n\n    oninit() {\n\n        //RG.logger.log(this.get());\n\n        RG.logger.debug('LiveReload');\n\n        /*this.on({\n\n        });\n\n        RG.events.registerList({\n\n        });*/\n    }\n\n});\n\nmodule.exports = LiveReload;","/**\n * Created by esolovyev on 06.10.2015.\n */\n\n/**\n * Осноыной JSON конфигурации\n * @type {{paths: {root: string}, env: string, formats: {email: RegExp, conformAtionCode: RegExp}}}\n */\nvar root = '//front.rg.ru/',\n    outer = '//outer.rg.ru/',\n\n    config = {\n        // основные пути\n        paths: {\n\n            // путь до Api\n            //root: 'https://front.rg.ru/app_dev.php/',\n            root: root,\n\n            // путь до свежего выпуска,\n            // после, параметры и оканчивается на gazeta.json\n            fresh: '/json/gazeta',\n\n            // путь до последних материалов\n            // после, параметры common, region-ID, common+region-ID\n\n            accountInclude: '/include/tmpl-b-feed/is-announce/num-3/index.json',\n\n            popularMaterials: `${outer}plain/popular/`,\n            popularCommentMaterials: `${root}comments/top_list`,\n            // путь до списка спецвыпусков\n            // используется в шаблоне fascicles-index\n            // после, параметры\n            //    {path}/\n            //      year-{YYYY} - фильтр по году\n            //      after-fascicle-{ID} - если догружаем выпуски\n            //      {type} || common - либо по типу, либо все сразу\n            fascicles: '/json/fascicles',\n\n            // путь до супершпигелей\n            // после, параметры региона (если есть) region-ID и даты yyyy-mm-dd\n            supersp: '/json/supersp',\n\n            lastNews: '/json/last_news/',\n\n            broadcastSport: `${outer}plain/sport_translations/api/sport.php?id=`,\n            broadcastOnline: `${outer}plain/online_translations/api/online.php?id=`,\n\n            // Путь до партнерок\n            // название файла от 1 до 10, генерим рандомом\n            partners: 'api/partners/',\n\n            // Пути до шаблонов в public\n            tmpl: {\n\n                // Блок b-news\n                bFeed: '/res/templates/b-feed.html',\n                bNewsInner: '/res/templates/b-news-inner.html',\n                bNewsInner_doc: '/res/templates/b-news-inner_doc.html',\n                bNews: '/res/templates/b-news.html',\n                bNews_broadsides: '/res/templates/b-news_broadsides.html',\n                broadcastOnline: '/res/templates/b-broadcast-online.html',\n                broadcastSport: '/res/templates/b-broadcast-sport.html',\n                bPartners: '/res/templates/b-partners.html'\n            },\n        },\n\n        regions: null,\n\n        env: 'dev', // установка окружения\n        formats: {\n            email: /\\S+@\\S+\\.\\S+/, // паттерн email\n            conformAtionCode: /\\b\\d{6}\\b/g, // паттерн кода подтверждения\n            name: /^[а-яА-ЯёЁa-zA-Z ,.'-]+$/ // паттерн кода подтверждения\n        },\n\n        messages: {\n\n            inputNotValid: 'Неверный формат',\n            emailNotValid: 'Неверный формат адреса электронной почты',\n            nameNotValid: 'Неверный формат имени',\n            codeIsSent: 'Код уже отправлен, попробуйте позднее',\n            codeNotValid: 'Неверный код',\n\n    }\n};\n\nmodule.exports = config;","/**\n * Created by nsinetskiy on 16.05.2016.\n */\n\n\n'use strict'\n\n/**\n * Инициализация главного модуля\n * @type {{}|*}\n */\nwindow.RG = window.RG || {};\n\n// HELLO WORLD :)\nconsole.debug(`From RG team with \\u2764`);\n\n/**************************************************************************************\n ПОДКЛЮЧАЕМ ДЕКОРАТОРЫ\n *************************************************************************************/\n\nrequire('./global/decorators');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ КОМПОНЕНТЫ\n *************************************************************************************/\n\nrequire('./global/components');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ МОДУЛИ\n *************************************************************************************/\n\nrequire('./global/modules');\n\n/*************************************************************************************\n ПОДКЛЮЧАЕМ РАСШИРЕНИЯ\n *************************************************************************************/\n\nrequire('./global/extends');\n\n/**\n * Подключение блока модального поиска\n */\n// var SearchOverlay = require('../blocks/overlays/b-search-overlay/scripts/SearchOverlay');\n\n/**\n * Решение проблемы CORS\n */\n$.ajaxSetup({\n    xhrFields: {\n        withCredentials: true\n    }\n});\n\n/**************************************************************************************\n DOM READY\n *************************************************************************************/\n$(function() {\n\n    'use strict';\n\n    $('#openKartaProezda').colorbox({\n        title: \"Редакция &laquo;Российской газеты&raquo;, ул. Правды, д. 24, строение 4\",\n        className: \"karta-proezda-ctx\"\n    });\n\n    var\n\n    // Записываем в переменную элемент colorbox\n        $cbox = $('#colorbox'),\n\n    // Записываем в переменную элемент colorbox overlay\n        $cboxOverlay = $('#cboxOverlay');\n\n\n    // Поехали дальше кодить, мужики!\n\n    // Запускаем парсер компонентов (из подключенного выше файла компонентов)\n    RG.parser.init();\n\n    //Инициализация модуля просмотренных матеиралов\n    RG.Viewed.init();\n\n    /**\n     * Ошибка при запросе\n     */\n    /*    $(document).ajaxError(function(event, jqxhr, settings, thrownError) {\n\n     RG.logger.error(thrownError);\n\n     $.colorbox({\n\n     html: '<div class=\"\"><p class=\"\">Произошла ошибка. Обратитесь к разработчикам</p></div>',\n\n     returnFocus: false,\n     scrolling: false,\n     opacity: 0.7,\n\n     width: 360,\n     height: 100,\n     });\n     });*/\n\n    // Регистрируем событие клика на документе\n    $(document).on('click', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.click', event);\n    });\n\n    // Регистрируем событие клика на документе\n    $(document).on('mousedown', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.mousedown', event);\n    });\n\n    // Регистрируем событие клика на документе\n    $(document).on('mouseup', function(event){\n\n        // Публикуем событие клика\n        RG.events.publish('document.mouseup', event);\n    });\n\n    /**************************************************************************************\n     КОД АГИМЫ\n     *************************************************************************************/\n\n    // Хелперы\n    window.$windowHeight = window.innerHeight;\n    window.$windowWidth = window.innerWidth;\n\n    $(document).on('scroll', function() {\n\n        window.$scrollTop = window.pageYOffset;\n        window.$windowHeight = window.innerHeight;\n    });\n\n    $(window).on('resize', function() {\n\n        window.$scrollTop = window.pageYOffset;\n        window.$windowHeight = window.innerHeight;\n\n        // Этот код убивал все!!!\n        /*if ($currentWindowWidth != $windowWidth) {\n         $.colorbox.close();\n         }*/\n\n        // Реинициализация панели данных на главной странице\n        /*if($('.js-slide').length) {\n         slidePosition($('.js-slide.is-active'), $('.js-slide'));\n         }*/\n    });\n\n    /**\n     * TODO Удалить этот код\n     */\n    // Панель данных на главной странице\n    /*if($('.js-slide').length) {\n     slidePosition ($('.js-slide.is-active'), $('.js-slide'));\n     }*/\n\n    // Выбор таба на главной\n    /*$(document).on('click', '.js-slide', function(){\n\n     var $this = $(this),\n     $collection = $('.js-slide');\n\n     slidePosition($this, $collection);\n\n     return false;\n     });*/\n\n    // Движение таба в панели данных\n    /*function slidePosition (e, col) {\n\n     var $active = e.siblings('.is-border'),\n     $pos = e.position().left,\n     $itemWidth = e.width();\n\n\n     col.removeClass('is-active');\n     e.addClass('is-active');\n\n     $active.css({\n     'left': $pos,\n     'width': $itemWidth\n     });\n     }*/\n\n\n    /**\n     * Инициализация дейтпикера\n     * TODO вынести в отдельный файл\n     */\n    (function initCalendar() {\n\n        var $datepicker = $(\".js-datepicker\");\n\n        if (!!$datepicker.length) {\n            $datepicker.datepicker({\n                showOn: 'button',\n                buttonText: '',\n                showButtonPanel: true,\n                showOtherMonths: true,\n                selectOtherMonths: true,\n                beforeShow: function() {\n                    $('.ui-datepicker-trigger').addClass('is-active').addClass('animated').addClass('bounceIn');\n                },\n                onClose: function(){\n                    $('.ui-datepicker-trigger').removeClass('is-active').removeClass('animated').removeClass('bounceIn');\n                }\n            });\n            $datepicker.datepicker( $.datepicker.regional['ru'] );\n        }\n    })();\n\n    // Инициализируем стикер баннера в левом сайтбаре\n    $(\".b-scroll-block_sidebar-left\").stick_in_parent({\n        parent: '.l-page__body',\n        spacer: false // если его включить, то html5 баннеры перезагружаются, при ресайзе\n    });\n\n    // Инициализируем кастомный скролл\n    $(\".js-scroll-bar\").mCustomScrollbar({\n        autoHideScrollbar: true\n    });\n\n    /**\n     * TODO Зачем здесь это?\n     */\n    // Инициализация скролла в новостях левого сайтбара\n    /*$('.b-feed_last-news .b-feed__list').mCustomScrollbar({\n     autoHideScrollbar: true\n     });*/\n\n    RG.parser.render('rg-form');\n\n    $(\"label a\").on(\"click\", function(e) {\n        e.stopPropagation();\n    });\n\n    /**\n     * Инициализация блока подписок\n     */\n    RG.Subscribe.init();\n\n    if(RG.meta.getSujet()) {\n        RG.parser.render('rg-follow-sujet', {\n            data: {\n                subscribed: false,\n                txt: 'Следить за сюжетом',\n                sujet: RG.meta.getSujet()\n            }\n        });\n\n    }\n\n    /**\n     * Сохранённых статей\n     */\n    RG.Saved.init();\n\n    /*\n     * Инициализация Аналитики\n     */\n    RG.Analytics.init();\n    RG.Analytics.run();\n\n    // Отправляем событие, что баннеры начали грузиться\n    /*RG.events.subscribe('Ads.init', function(){\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'start'\n     }\n     });\n\n     });*/\n\n    // Проверяем на то, инициализировались ли баннеры\n    /*RG.events.subscribe('Adfox.platform.loaded', function(){\n\n     (function(){\n\n     var bannersNotLoaded = true; // по-умолчанию баннер не загружен (предполагаем)\n\n     setTimeout(function() {\n\n     // Проходим по всем площадкам\n     $('[id^=\"ads\"]').each(function(index, el) {\n\n     // Если контейнер не пустой\n     // все ок\n     // выходим из цикла проверки\n     if (!$(el).is(':empty')) {\n\n     // Говорим что баннер не загружен\n     bannersNotLoaded = false;\n\n     // Выхдим из цикла\n     return false;\n     }\n\n     });\n\n     // Если баннеры не были загружены\n     // то есть во всех контейнерах пусто,\n     // то отправляем запрос\n     if (bannersNotLoaded) {\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'failed'\n     }\n     });\n\n     RG.logger.log('Баннеры не загрузились, блоки пустые');\n     RG.logger.log($('[id^=\"ads\"]'));\n\n     } else {\n\n     RG.Analytics.Ga.sendTracker({\n     param: {\n     hitType: 'event',\n     eventCategory: 'JS',\n     eventAction: 'Banners init',\n     eventLabel: 'done'\n     }\n     });\n\n     RG.logger.log('Баннеры все-таки загрузились, среди этих блоков есть');\n     RG.logger.log($('[id^=\"ads\"]'));\n     }\n\n     }, 5000);\n\n     })();\n\n     });*/\n\n    /*RG.Analytics.Ga.register({\n     type: 'send',\n     param: {\n     tagLabel: '.b-sidebar-left__item .b-categories__item',\n     event: 'click',\n     hitType: 'event',\n     eventCategory: 'Левое меню',\n     eventAction: 'Клик',\n     eventLabel: 'Элемент меню'\n     }\n     });*/\n\n    /*\n     * Отправляем\n     * счетчик, без вешания на событие\n     * пример: по таймауту\n     */\n\n    /*RG.Analytics.Ga.sendTracker({\n     type: 'НазваниеСчетчика.send',\n     param: {\n     hitType: 'event',\n     eventCategory: 'Категория',\n     eventAction: 'По таймауту',\n     eventLabel: 'Какие-то элементы'\n     }\n     });*/\n\n    /**\n     * Тестовая аналитика\n     * TODO удалить\n     */\n\n    /*RG.Analytics.Ga.register({\n     type: 'send',\n     param: {\n     tagLabel: '[data-blocksshifterid=\"rgb_feed_last-news\"]',\n     event: 'click',\n     hitType: 'Клик',\n     eventCategory: 'Лента новостей',\n     eventAction: 'Клик',\n     eventLabel: 'Блок правый сайтбар 240х400',\n     eventValue: 'Значение, просто так'\n     }\n     });\n\n     RG.Analytics.Ga.registerList({\n     list: [\n     {\n     send: [\n     {\n     tagLabel: '.b-header',\n     event: 'click',\n     hitType: 'click',\n     eventCategory: 'Шапка',\n     eventAction: 'Клик',\n     eventLabel: 'Блок шапки',\n     eventValue: null\n     },\n     {\n     tagLabel: '.b-logo',\n     event: 'mouseenter',\n     hitType: 'hover',\n     eventCategory: 'Логотип',\n     eventAction: 'Курсор над блоком',\n     eventLabel: 'Логотип в шапке',\n     eventValue: null\n     }\n     ]\n     }\n     ]\n     });*/\n\n    // ОТправка на печать\n    (function toPrint(){\n\n        var $printBtn = $('.b-icon_type_print');\n\n        if (!!$printBtn.length) {\n            $printBtn.on('click', function(e){\n                e.preventDefault();\n\n                window.print();\n            });\n        }\n\n    })();\n\n    /*\n     * Инициализация счетчиков\n     */\n    RG.Counters.init();\n\n    // Включаем счетчики\n    RG.events.publish('Counters.run');\n\n    /*\n     * Инициализация Рекламы\n     */\n    RG.Ads.init();\n\n    // Инициализируем компонент баннера adfox\n    RG.parser.render('rg-adfox');\n\n    // Инициализируем баннер Adfox\n    RG.events.publish(`${RG.Ads.Adfox_modulePrefix}.run`);\n\n    // Инициализируем Директ\n    RG.Ads.YaDirect.init();\n\n    // Инициализируем компонент директа\n    RG.parser.render('rg-yadirect');\n\n    // Инициализируем Ivengo\n    /*if (!RG.meta.getAdsHide()) {\n\n        RG.logger.log('Ads Ivengo hide false');\n\n        RG.Ads.Ivengo.init();\n    } else {\n        RG.logger.log('Ads Ivengo hide true');\n    }*/\n\n    // Инициализируем Turboroller\n    //RG.Ads.Turboroller.init(); Выключил пока они не поддреживают https\n\n    // Инициализация Партнерок\n    // После того, как получили путевой лист\n    /*RG.events.subscribe('Adfox.platform.loaded', function(topic, places){\n\n        // Запускается один раз только\n        RG.Partners.init(places);\n    });*/\n\n    /*\n     * Инициализация модуля ScreenViewer\n     */\n    RG.ScreenViewer.init();\n\n    // Инициализируем подписку\n    RG.events.publish(`${RG.ScreenViewer._modulePrefix}.check`);\n\n    // Считываем тип экрана после ресайза\n    $(window).on('resize', () => {\n\n        RG.events.publish('window.resize');\n    });\n\n    /*\n     * Инициализация модуля BlocksShifter\n     */\n    RG.BlocksShifter.init();\n\n    /*\n     * Работа с модулем BlocksShifter\n     * Когда обновляется информация о типе экрана,\n     * запускаем перестановку блоков\n     */\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n        var screenInfo = RG.ScreenViewer.getScreenInfo();\n\n        RG.logger.info(topic);\n\n        // Инициализируем получение площадок\n        RG.Place.init(screenInfo);\n\n        // Настраиваем BlockShifter\n        RG.events.publish(`${RG.BlocksShifter._modulePrefix}.run`, screenInfo);\n\n        RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n            RG.logger.info(topic);\n            RG.events.publish(`${RG.BlocksShifter._modulePrefix}.run`, screenInfo);\n        });\n    });\n\n    /**\n     * Инициализация модуля региональных новостей\n     */\n    RG.RegionalNews.init();\n\n    /**\n     * Инициализация блока перезагрузки контента\n     */\n    RG.LiveReload.init();\n    RG.LiveReload.run();\n\n    /**\n     * Костыль, что бы не ломать авторизацию\n     * TODO Избавиться от этого кода\n     */\n    /*RG.storage.set('auth', {\n        email: '',\n        firstName: '',\n        lastName: ''\n    });*/\n\n    //let auth = RG.storage.get('auth');\n    /**\n     * TODO Избавиться от этого кода\n     */\n\n    /**\n     * Инициализация модуля авторизации\n     */\n    //RG.Auth.init();\n\n    /**\n     * Инициализация сессии пользователя\n     */\n    //RG.session.init();\n\n    /**\n     * Проверка сессии пользователя\n     */\n    //RG.events.publish('session.check');\n\n    /**\n     * Запуск меню\n     */\n    // RG.Menu.init();\n    // RG.Menu.run();\n\n    /**************************************************************************************\n     ШАПКА\n     *************************************************************************************/\n    /**\n     * Инициализируем меню партнеров в шапке\n     * TODO Необходимо как то упростить этот код или вынести в отдельный модуль\n     */\n    (function() {\n\n        $('.b-vendors__item_more-btn').colorbox({\n\n            onComplete() {\n                //RG.events.publish('colorbox.opened');\n            },\n\n            onOpen() {\n                RG.events.publish('colorbox.opened');\n            },\n\n            onCleanup() {\n                RG.events.publish('colorbox.closed');\n            },\n\n            className: 'b-vendors b-vendors_overlay',\n            inline: true,\n            href: $('.b-vendors_header').html(),\n\n            width: '408px',\n            height: '400px',\n\n            opacity: 0.7,\n\n            //transition: 'none',\n            initialWidth: 0,\n            initialHeight: 0,\n        });\n\n    })();\n\n    /**************************************************************************************\n     ПОДВАЛ\n     *************************************************************************************/\n\n    /**\n     * Инициализация Раскрывающегося блока в футере\n     */\n\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.check`, (topic) => {\n\n        var screenInfo = RG.ScreenViewer.getScreenInfo();\n\n        if (screenInfo.type !== 'tabletLandscape' && screenInfo.type !== 'desktop' && screenInfo.type !== 'desktopFull') {\n\n            // Если блок еще не инициализировался\n            if (!window.footerContentToggler) {\n\n                window.footerContentToggler = new RG.ContentToggler($('.b-footer')[0], {\n                    btn: '.b-footer__toggle',\n                    ctx: '.b-footer__links',\n                    opened: false\n                });\n\n            } else {\n\n                // Если объект был создан,\n                // а мы перешли из десктопа,\n                // то просто скрываем блок\n                // + дополнительная проверка, на телефоне при скролле за пределы экрана срабатывает ресайз\n                if (!!screenInfo.infoBefore && (screenInfo.infoBefore.screenWidth !== screenInfo.screenWidth)) {\n                    if (screenInfo.infoBefore.type !== 'tabletLandscape' || screenInfo.infoBefore.type === 'desktop' || screenInfo.infoBefore.type === 'desktopFull') {\n                        window.footerContentToggler.initialHide();\n                    }\n                }\n\n            }\n\n        } else {\n\n            // Если перешли в десктоп - уничтожаем блок\n            if (window.footerContentToggler) {\n                window.footerContentToggler.destroy();\n            }\n\n        }\n\n    });\n\n    RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, function(topic, screenInfo) {\n\n        if (screenInfo.type !== 'tabletLandscape' && screenInfo.type !== 'desktop' && screenInfo.type !== 'desktopFull') {\n\n            // Если блок еще не инициализировался\n            if (!window.footerContentToggler) {\n\n                window.footerContentToggler = new RG.ContentToggler($('.b-footer')[0], {\n                    btn: '.b-footer__toggle',\n                    ctx: '.b-footer__links',\n                    opened: false\n                });\n\n            } else {\n\n                // Если объект был создан,\n                // а мы перешли из десктопа,\n                // то просто скрываем блок\n                // + дополнительная проверка, на телефоне при скролле за пределы экрана срабатывает ресайз\n                if (!!screenInfo.infoBefore && (screenInfo.infoBefore.screenWidth !== screenInfo.screenWidth)) {\n                    if (screenInfo.infoBefore.type !== 'tabletLandscape' || screenInfo.infoBefore.type === 'desktop' || screenInfo.infoBefore.type === 'desktopFull') {\n                        window.footerContentToggler.initialHide();\n                    }\n                }\n\n            }\n\n        } else {\n\n            // Если перешли в десктоп - уничтожаем блок\n            if (window.footerContentToggler) {\n                window.footerContentToggler.destroy();\n            }\n\n        }\n\n    });\n\n    /**\n     * Инициализация карусели продуктов в футере\n     */\n    $('#vendorsRg').slick({\n        dots: false,\n        infinite: true,\n        speed: 300,\n        slidesToShow: 7,\n        responsive: [\n            {\n                breakpoint: 768,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    //slidesToShow: 2\n\n                    variableWidth: true,\n                    slidesToShow: 1,\n                    centerMode: true\n                }\n            },\n            {\n                breakpoint: 1024,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    slidesToShow: 4\n                }\n            },\n            {\n                breakpoint: 1366,\n                settings: {\n                    dots: false,\n                    infinite: true,\n                    speed: 300,\n                    slidesToShow: 7\n                }\n            }\n        ]\n    });\n\n    /**\n     * Инициализируем меню рубрик в футере на телефоне\n     *\n     * Убрали эту штуковину и рубрики ушли в шапку\n     *\n     */\n    /*(function() {\n\n     $('.b-footer__categories').colorbox({\n\n     onComplete() {\n     RG.events.publish('colorbox.opened');\n     },\n\n     onCleanup() {\n     RG.events.publish('colorbox.closed');\n     },\n\n     className: 'b-categories b-categories_overlay',\n     inline: true,\n     href: $('.b-sidebar-left__item.b-categories').html(),\n\n     width: '408px',\n     height: '360px'\n     });\n\n     })();*/\n\n    // ЧТО это мужики?!\n    (() => {\n\n        if(document.location.hash === '#code') {\n\n            login('code.required', false, true);\n        }\n    })();\n\n    /**************************************************************************************\n     ГЛОБАЛЬНЫЕ СОБЫТИЯ\n     TODO ЖЕЛАТЕЛЬНО ВЫНЕСТИ В ОТДЕЛЬНЫЙ ФАЙЛ\n     *************************************************************************************/\n    RG.events.registerList({\n\n        /**\n         * События всплывающих окон\n         */\n        'login': login,\n\n        /**\n         * Вызов модального окна поиска\n         */\n        'search.overlay.show': searchOverlayShow,\n\n        /**\n         * Вызов модального окна регионов\n         * @param topic\n         */\n        'region.overlay.show': topic => {\n\n            RG.logger.info(topic);\n\n            if(RG.config.regions) {\n                regionOverlayShow('region.overlay.show', RG.config.regions);\n            } else {\n                RG.events.subscribe('geolocation.region.update', regionOverlayShow, RG.config.regions);\n                RG.events.publish('geolocation.region.all');\n            }\n        },\n\n        /**\n         * Вызов модального окна сюжетов\n         */\n        'followed.show': followedOverlayShow,\n\n        /**\n         * Вызов модального окна просмотренных материалов\n         */\n        'viewed.show': viewedOverlayShow,\n\n        /**\n         * Событие переалрисации от соц. сети\n         */\n        'session.confirm.required': topic => {\n\n            RG.logger.info(topic);\n            if(document.location.hash === '#social_redirect') {\n                RG.events.publish('login', true);\n            }\n        },\n\n        /**\n         * Изменяет размер модального окна под контент\n         * @param topic\n         */\n        'overlay.resize': (topic) => {\n\n            RG.logger.info(topic);\n\n            let $list = $('#colorbox').find('.js-height-list');\n\n            if($list.offset()) {\n\n                $list.css('height', $windowHeight - $list.offset().top);\n            }\n\n            $.colorbox.resize();\n\n            setBodyFixed();\n        },\n\n        // add Alex 30.11.2016\n        /**\n         * Фиксирует окно\n         */\n        'colorbox.opened': setBodyFixed,\n\n        /**\n         * Отменяет фиксацию окна\n         */\n        'colorbox.closed': unsetBodyFixed,\n\n        /**\n         * Показать модальное окно\n         */\n        'overlay.show': () => {\n            overlayShow(true);\n        },\n\n        /**\n         * Скрыть модальное окно\n         */\n        'overlay.hide': () => {\n            overlayShow(false);\n        },\n\n        /**\n         * Обработка авторизованного пользователя\n         * @param topic\n         */\n        'session.user.authorized': (topic) => {\n\n            RG.logger.info(topic);\n\n            RG.Auth.destruct();\n            $.colorbox.close();\n        },\n\n        /**\n         * Инициализация скролла\n         * @param topic\n         * @param $element\n         */\n        'scroll.init': (topic, $element) => {\n\n            RG.logger.info(topic);\n\n            let type = RG.ScreenViewer.getScreenInfo().type;\n\n            if(type !== 'tabletLandscape' && type !== 'tablet' && type !== 'mobile') {\n\n                $element = $element || $('.js-scroll-bar');\n\n                if($element.length) {\n\n                    $element.mCustomScrollbar(\"destroy\");\n\n                    $element.mCustomScrollbar({\n                        autoHideScrollbar: true\n                    });\n                }\n            }\n        },\n\n        /**\n         * Деактивация скролла\n         * @param topic\n         * @param $element\n         */\n        'scroll.destroy': (topic, $element) => {\n\n            RG.logger.info(topic);\n\n            $element = $element || $('.js-scroll-bar');\n\n            $element.mCustomScrollbar(\"destroy\");\n        },\n\n        'livereload.init': topic => {\n\n            RG.logger.info(topic);\n\n            if (!!$('.b-broadcast-sport').length) {\n\n                // Инициализируем переключалку контента\n                new RG.ContentHandler('.b-broadcast-sport', {\n                    labelList: '.b-broadcast-sport__menu-item'\n                });\n\n                RG.ScrollTopBroadcast.init();\n            }\n\n            $.getScript('//platform.twitter.com/widgets.js');\n            $.getScript('//platform.instagram.com/en_US/embeds.js\"');\n\n            RG.events.publish('scroll.init');\n        },\n        'geolocation.region.changed': topic => {\n\n            RG.logger.info(topic);\n\n            $.colorbox.close();\n        }\n    });\n\n    /**************************************************************************************\n     ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ\n     TODO ВЫНЕСТИ В ОТДЕЛЬНЫЙ ФАЙЛ\n     *************************************************************************************/\n\n    // add Alex 30.11.2016\n    function setBodyFixed() {\n        //$('body').addClass('is-fixed');\n        $('body').addClass('scroll-disabled');\n    }\n\n    // add Alex 30.11.2016\n    function unsetBodyFixed() {\n        //$('body').removeClass('is-fixed');\n        $('body').removeClass('scroll-disabled');\n    }\n\n    function login(topic, social, code) {\n\n        RG.logger.info(topic);\n\n        // Говорим, что загрузка колорбокса началась\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        // Обработка всплывашки\n        $.colorbox({\n\n            html: '<div id=\"authContainer\"></div>',\n\n            onComplete() {\n\n                var type = code ? 'code' : null;\n\n                RG.Auth.run(type);\n                RG.events.publish('colorbox.opened', 'login');\n\n                social ? RG.events.publish('aurh.confirm.required') : null;\n\n                setTimeout(function(){\n\n                    // Обновляем колорбокс\n                    $.colorbox.resize({\n                        innerWidth: 360,\n                        innerHeight: 600\n                    });\n\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n\n                    RG.events.publish('tab.selected.set', $('.b-auth .b-tab__item_1'));\n                }, 1000);\n\n            },\n\n            onLoad() {},\n\n            onCleanup() {\n                RG.logger.info('close colorbox');\n                RG.events.publish('colorbox.closed', 'login');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            returnFocus: false,\n            scrolling: false,\n            opacity: 0.7,\n\n            //width: 360,\n            //height: 700,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function searchOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"searchOverlay\"></div>',\n            // closeButton: false,\n\n            onComplete() {\n\n                // new SearchOverlay();\n                $('#searchOverlay').load('/bundles/jurist/static_tmpl/b-search-form.html');\n                $.colorbox.resize({width: '1100px', height: '40px'});\n                RG.events.publish('colorbox.opened', 'search');\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('colorbox.closed', 'search');\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            className: 'b-modal_search',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function followedOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"followed\"></div>',\n\n            onComplete() {\n\n                RG.events.publish('followed.run');\n                RG.events.publish('colorbox.opened', 'followed');\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('followed.destroy');\n                RG.events.publish('colorbox.closed', 'followed');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            transition: 'none',\n            top: $('#menu').offset().top + 53,\n            right: 0,\n            className: 'b-modal_header',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0\n        });\n    }\n\n    function viewedOverlayShow(topic) {\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"viewed\"></div>',\n\n            onComplete() {\n\n                RG.events.publish('viewed.run');\n                RG.events.publish('colorbox.opened', 'viewed');\n\n                // Обновляем колорбокс\n                $.colorbox.resize({\n                    innerWidth: 390\n                });\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n\n                RG.events.publish('viewed.destroy');\n                RG.events.publish('colorbox.closed', 'viewed');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            transition: 'none',\n            top: $('#menu').offset().top + 53,\n            right: 0,\n            className: 'b-modal_header',\n            opacity: 0.7,\n\n            initialWidth: 0,\n            initialHeight: 0\n        });\n    }\n\n    function regionOverlayShow(topic, regions) {\n\n        RG.config.regions = regions;\n\n        RG.events.unsubscribe('geolocation.region.update');\n\n        RG.logger.info(topic);\n\n        $cbox.addClass('has-loading');\n        $cboxOverlay.addClass('has-loading');\n\n        $.colorbox({\n\n            html: '<div id=\"region\"></div>',\n\n            onComplete() {\n\n                new Region();\n                RG.events.publish('colorbox.opened', 'region');\n\n                // Обновляем колорбокс\n                $.colorbox.resize({\n                    innerWidth: 900,\n                    innerHeight: 300\n                });\n\n                setTimeout(function(){\n                    // Удаляем класс загрузки\n                    $cbox.removeClass('has-loading');\n                    $cboxOverlay.removeClass('has-loading');\n                }, 300);\n            },\n\n            onLoad() {\n\n            },\n\n            onCleanup() {\n                RG.events.publish('colorbox.closed', 'region');\n\n                // Процесс скрытия блока\n                $cbox.addClass('hidding');\n                setTimeout(function(){\n                    $cbox.removeClass('hidding');\n                }, 1000);\n            },\n\n            onClosed() {\n\n            },\n\n            returnFocus: false,\n            scrolling: false,\n            opacity: 0.7,\n            //width: 900,\n            //height: 300,\n\n            initialWidth: 0,\n            initialHeight: 0,\n            transition: 'none'\n        });\n    }\n\n    function overlayShow(show) {\n\n        var $overlay = $('#cboxOverlay');\n\n        if(show) {\n            $overlay.show();\n            setBodyFixed();\n        } else {\n            $overlay.hide();\n            unsetBodyFixed();\n        }\n\n        return false;\n    }\n\n    function setFixedMenu() {\n    \tvar scrollStart = 100,\n    \t\tscrollCurrent = $(window).scrollTop(),\n    \t\tmenu = document.querySelector('.b-menu');\n\n    \tif (scrollCurrent > scrollStart) {\n\n    \t\tmenu.classList.add('b-menu_fixed');\n\n    \t} else {\n\n    \t\tmenu.classList.remove('b-menu_fixed')\n\n    \t}\n\n    }\n\n    $(window).on('scroll', setFixedMenu);\n\n/**\n * Инициализация модуля замены списка выпадающим меню\n */\n\nnew RG.ListHeadToSelect('.b-categories__link', '.b-categories', '.b-categories__list');\n\n});\n// END DOM READY\n\n\n\n$(function() {\n    (function () {\n\n        var share = new Ractive.components.share({\n            el: '#share',\n            data() {\n                return {\n                    owner: 'share',\n                    options: {\n                        theme: {\n                            counter: true\n                        }\n                    },\n                    content: 'Поделиться:'\n                }\n            }\n        });\n\n        RG.events.publish('share.set', {\n            url: $('meta[property=\"og:url\"]').attr('content'),\n            title: $('meta[property=\"og:title\"]').attr('content'),\n            description: $('meta[name=\"description\"]').attr('content'),\n            image: $('meta[property=\"og:image\"]').attr('content')\n        });\n\n    })();\n});\n","/**************************************************************************************\n КОМПОНЕНТЫ\n *************************************************************************************/\n\nRactive.components = {\n    /**\n     * Компонент вывода ошибки в полях формы\n     */\n    'input-notification': require('../../blocks/forms/b-input-notification/scripts/InputNotification'),\n\n    /**\n     * Табы\n     */\n    'tabs': require('../../blocks/crosslayouts/b-tabs/scripts/Tabs'),\n\n    /**\n     * Поле ввода для поиска (Search bar)\n     */\n\n    'search-bar': require('../../blocks/crosslayouts/b-search-form/scripts/SearchBar'),\n\n    /**\n     * Информация по поиску\n     */\n\n    'rg-search-info': require('../../blocks/crosslayouts/b-search-info/scripts/SearchInfo'),\n\n    /**\n     * Информация по поиску\n     */\n\n    'rg-search-filters': require('../../blocks/crosslayouts/b-search-filters/scripts/SearchFilters'),\n\n    /**\n     * Социальный шаринг\n     */\n    'share': require('../../blocks/crosslayouts/b-share/scripts/share'),\n\n    /**\n     * Поле ввода\n     */\n    'rg-input': require('../../blocks/forms/b-input/scripts/Input'),\n\n    /**\n     * Поле почты\n     */\n    'rg-email': require('../../blocks/forms/b-email/scripts/Email'),\n\n    /**\n     * Поля имени\n     */\n    'rg-name': require('../../blocks/forms/b-name/scripts/Name'),\n\n    /**\n     * Галочка\n     */\n    'rg-checkbox': require('../../blocks/forms/b-checkbox/scripts/Checkbox'),\n\n    /**\n     * Выпадающий список\n     */\n    'rg-select': require('../../blocks/forms/b-select/scripts/Select'),\n\n    /**\n     * Текстовое поле\n     */\n    'rg-textarea': require('../../blocks/forms/b-textarea/scripts/Textarea'),\n\n    /**\n     * Кнопка отправки\n     */\n    'rg-submit': require('../../blocks/forms/b-submit/scripts/Submit'),\n\n    /**\n     * Форма\n     */\n    'rg-form': require('../../blocks/forms/b-form/scripts/Form'),\n\n    /**\n     * Yandex Direct\n     */\n    'rg-yadirect': require('../../blocks/crosslayouts/b-yadirect/scripts/Yadirect'),\n\n    /**\n     * Текстовое сообщение\n     */\n    'rg-form-message': require('../../blocks/forms/b-form-message/scripts/FormMessage'),\n\n    /*\n     * Adfox баннеры\n     */\n\n    'rg-adfox': require('../../blocks/crosslayouts/b-adfox/scripts/Adfox')\n};","/**\n * Декораторы\n */\nRactive.decorators = {\n\n    'date-picker': function(node) {\n\n        var ractive = this\n\n        $(node).datepicker({\n            onSelect: function(dateValue) {\n\n                ractive.updateModel();\n\n                RG.events.publish('date.picked', ractive);\n            },\n            dateFormat: 'dd.mm.yy',\n            constrainInput: true,\n            showOn: 'button',\n            buttonText: 'Select...',\n            showButtonPanel: true,\n            maxDate: '0'\n        });\n\n        return {\n            teardown: function() {\n                $(node).datepicker(\"destroy\");\n            }\n        };\n    },\n    'scroll-bar': node => {\n\n        $(node).mCustomScrollbar({\n            autoHideScrollbar: true\n        });\n\n        return {\n            teardown() {\n                $(node).mCustomScrollbar('destroy');\n            }\n        };\n    }\n};","/**\n * Подулючения директивы плавной анимации\n * https://github.com/ractivejs/ractive-transitions-fade\n */\nRactive.transitions.fade = require('ractive-transitions-fade');\n\n/**\n * Дополнения для underscore\n * TODO Вынести в отдельный файл\n */\n_.mixin({\n\n    getQueryParam: (url, name) => {\n\n        if (!url) url = window.location.href;\n        url = url.toLowerCase(); // This is just to avoid case sensitiveness\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\").toLowerCase();// This is just to avoid case sensitiveness for query parameter name\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    },\n\n    remove: (obj, key) =>{\n        delete obj[key];\n        return obj;\n    },\n    // ### _.objMap\n    // _.map for objects, keeps key/value associations\n    objMap: (input, mapper, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            obj[k] = mapper.call(context, v, k, input);\n            return obj;\n        }, {}, context);\n    },\n    // ### _.objFilter\n    // _.filter for objects, keeps key/value associations\n    // but only includes the properties that pass test().\n    objFilter: (input, test, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            if (test.call(context, v, k, input)) {\n                obj[k] = v;\n            }\n            return obj;\n        }, {}, context);\n    },\n    // ### _.objReject\n    //\n    // _.reject for objects, keeps key/value associations\n    // but does not include the properties that pass test().\n    objReject: (input, test, context) => {\n        return _.reduce(input, function (obj, v, k) {\n            if (!test.call(context, v, k, input)) {\n                obj[k] = v;\n            }\n            return obj;\n        }, {}, context);\n    }\n});\n\n/*\n * Русификация дейтпикера(Агима)\n * TODO Вынести в отдельный файл\n */\n\nif (!!jQuery.datepicker) {\n    jQuery.datepicker.regional['ru'] = {\n        closeText: '',\n        prevText: 'Пред.',\n        nextText: 'След.',\n        currentText: 'Сегодня',\n        monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\n            'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        monthNamesShort: ['Янв.', 'Февр.', 'Март', 'Апрель', 'Май', 'Июнь',\n            'Июль.', 'Авг.', 'Сент.', 'Окт.', 'Нояб.', 'Дек.'],\n        dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        dayNamesShort: ['Вск.', 'Пон.', 'Вт.', 'Ср.', 'Чт.', 'Пт.', 'Суб.'],\n        dayNamesMin: ['вс','пн','вт','ср','чт','пт','сб'],\n        weekHeader: 'Sem.',\n        dateFormat: 'dd.mm.yy',\n        firstDay: 1,\n        isRTL: false,\n        showMonthAfterYear: false,\n        yearSuffix: ''\n    };\n\n    jQuery.datepicker.setDefaults(jQuery.datepicker.regional['ru']);\n}","/**************************************************************************************\n МОДУЛИ\n *************************************************************************************/\n\n/**\n * Подключения конфигурационного модуля\n */\nRG.config = RG.config || require('../config');\n\n/**\n * Подключения модуля, работающего с meta данными\n */\nRG.meta = RG.meta || require('../modules/Meta');\n\n/**\n * Устанавливаем окружение\n */\nRG.config.env = RG.meta.getEnv();\nRactive.DEBUG = (RG.meta.getEnv() === 'dev');\n\nRG.config.paths.root = (RG.config.env === 'dev') ? 'https://front-dev.rg.ru/app_dev.php/' : 'https://front.rg.ru/';\n\n/**\n * Подключения модуля логирования\n * Если RG.config.env 'dev' || 'test' тогда всё логируется в консоль\n */\nRG.logger = RG.logger || require('../modules/Logger');\n\n/**\n * Подключения модуля, обрабатывающего события\n * https://github.com/mroderick/PubSubJS\n */\nRG.events = RG.events || require('../modules/Events');\n\n/**\n * Подключения модуля, работающего с cookie\n * https://github.com/ScottHamper/Cookies \n */\nRG.session = RG.session || require('../modules/Session');\n\n/**\n * Подключения модуля, работающего строкой поиска\n */\nRG.query = RG.query || require('../modules/Query');\n\n/**\n * Подключения модуля, работающего с cookie\n * https://github.com/ScottHamper/Cookies\n */\nRG.storage = RG.storage || require('../modules/Storage');\n\n/**\n * Подключения модуля, работающего со временем\n */\nRG.datetime = RG.datetime || require('../modules/DateTime');\n\n/**\n * Подключения модуля, работающего с выделением текста\n */\nRG.selection = RG.selection || require('../modules/Selection');\n\n/**\n * Подключения модуля, работающего с DOM\n */\nRG.parser = RG.parser || require('../modules/Parser');\n\n/**\n * Подключение модуля определения типа экрана\n */\nRG.ScreenViewer = RG.ScreenViewer || require('../modules/ScreenViewer');\n\n/**\n * Подключение модуля подписок\n */\nRG.Subscribe = RG.Subscribe || require('../modules/Services/Subscribe');\n\n/**\n * Подключение модуля сохранённых статей\n */\nRG.Saved = RG.Saved || require('../modules/Services/Saved');\n\n/**\n * Подключение модуля просмотренных статей\n */\nRG.Viewed = RG.Viewed || require('../modules/Services/Viewed');\n\n/**\n * Подключение модуля геопределения\n */\nRG.Geolocation = RG.Geolocation || require('../modules/Services/Geolocation');\n\n/**\n * Подключение сервиса рекламных площадок\n */\nRG.Place = RG.Place || require('../modules/Services/Place');\n\n/**\n * Подключение модуля аналитики\n */\nRG.Analytics = RG.Analytics || require('../modules/Analytics/Analytics');\n\n/**\n * Подключение модуля счетчиков\n */\nRG.Counters = RG.Counters || require('../modules/Counters');\n\n/**\n * Подключение модуля рекламы\n */\nRG.Ads = RG.Ads || require('../modules/Ads/Ads');\n\n/**\n * Подключение модуля перестановки блоков\n */\nRG.BlocksShifter = RG.BlocksShifter || require('../modules/BlocksShifter');\n\n/**\n * Подключение модуля открытия/скрытия контента\n */\nRG.ContentToggler = RG.ContentToggler || require('../modules/ContentToggler');\n\n/**\n * Подключения модуля выбора контента по кнопке\n */\nRG.ContentHandler = RG.ContentHandler || require('../modules/ContentHandler');\n\n/**\n * Подключение блока перезагрузки контента\n */\nRG.LiveReload = RG.LiveReload || require('../modules/LiveReload');\n\n/**\n * Подключение блока перезагрузки контента\n */\nRG.RegionalNews = RG.RegionalNews || require('../modules/Services/RegionalNews');\n\n/**\n * Подключение модуля конвертации списка в выпадающее меню\n */\nRG.ListHeadToSelect = RG.ListHeadToSelect || require('../modules/ListHeadToSelect');\n\n/**\n* Подключение модуля верхнего меню\n*/\nRG.Menu = RG.Menu || require('../../blocks/header/b-menu/scripts/b-menu');\n\n\n/**\n * Формы РГ\n */\nRG.forms = RG.forms || {};","/*\n * Загрузчик баннеров AdFox\n * Основан на документации http://specs.adfox.ru/page/99/\n *\n * @Adfox.run - по событию загружаем и вставляем баннеры\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Adfox',\n\n    /*\n     * Инициализация баннера\n     *\n     * @bannerPlaceId - id-аттрибут элемента, куда вставлять баннер\n     * @requestSrc - ссылка запроса AdFox (можно получить из кода вставки)\n     *\n     */\n\n    initAdFoxBanner = ($ads, banners) => {\n\n        var tgNS = window.ADFOX.RELOAD_CODE,\n            initData = null;\n\n        $ads.html('');\n\n        let iteratorGlobal = 0;\n\n        _.each(banners, banner => {\n\n            if(!_.isEmpty(banner['uri'])) {\n\n                var adsId = 'adfox_' + Math.random().toString(36).substring(7),\n                    $adsWrapper = null,\n                    uri = banner['uri'],\n                    scroll = banner['scroll'];\n\n                $adsWrapper = $('<div />', {\n                    'id': adsId,\n                    'class': 'adfox_item'\n                });\n\n                // Получаем баннер\n                // через метод AdFox - tgNS\n                initData = tgNS.initBanner(adsId, uri);\n\n                // Вставляем в элемент\n                // контент баннера\n                $ads.append($adsWrapper.append(initData.html));\n\n                //tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                // Проверка на доскролл\n                if (!!scroll) {\n\n                    // Если это не фулскрин (костыль, потом убрать),\n                    if ($ads.closest('.b-ads').hasClass('b-ads_fullscreen')) {\n\n                        tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                    } else {\n\n                        RG.logger.log('loadBanner with appear ' + adsId);\n\n                        setAppear(adsId, {\n                            tgNS,\n                            initData,\n                            uri\n                        },\n                        function(){\n                            //checkBanner($adsWrapper);\n                        });\n\n                    }\n\n                } else {\n\n                    // Просто грузим баннер\n                    tgNS.loadBanner(initData.pr1, banner['uri'], initData.sessionId);\n\n                    // Проверяем, если баннер не пустой - показываем\n                    //checkBanner($adsWrapper);\n                }\n\n                // МЕтод проверки\n                function checkBanner($adsWrapper) {\n\n                    var $adfoxSrcEl = null,\n                        iterator = 0,\n                        intervalId = null;\n\n                    if (!!$adsWrapper.find('[id^=\"AdFox_banner\"]').length) {\n\n                        $adsWrapper.hide();\n                        $adsWrapper.css('visibility', 'hidden');\n                        $adsWrapper.addClass('animated');\n\n                        intervalId = setInterval(function() {\n\n                            if (!$adsWrapper.find('[id^=\"AdFox_banner\"]').is(':empty') || iterator > 15) {\n                                clearInterval(intervalId);\n\n                                $adfoxSrcEl = $adsWrapper.find('[id^=\"AdFox_banner\"]');\n\n                                if (!$adfoxSrcEl.is(':empty')) {\n\n                                    $adsWrapper.show(function(){\n\n                                        $adsWrapper.addClass('fadeIn');\n                                        $adsWrapper.css('visibility', 'visible');\n\n                                        // Укастыливание из-за canary\n                                        $adfoxSrcEl.css('height', $adfoxSrcEl.height() + '.001');\n                                    });\n                                }\n                            }\n\n                            iterator++;\n\n                        }, 1000);\n\n                    } else {\n\n                        $adsWrapper.show(function() {\n                            $adsWrapper.addClass('fadeIn');\n                            $adsWrapper.css('visibility', 'visible');\n                        });\n\n                    }\n                    \n                }                \n\n                // Мы сделали тут https://yadi.sk/i/plLlmaMoqGcHW\n                // Как удалялку пустого баннера\n                /*setTimeout(function(){\n\n                    checkBannerFail($adsWrapper.find('iframe'), $adsWrapper.find('iframe')[0]);\n\n                }, 5000);*/\n\n                /*function checkBannerFail($iframe, iframe) {\n\n                    RG.logger.log($iframe.attr('id'));\n                    RG.logger.log(iframe.contentWindow);\n                    RG.logger.log(iframe.contentWindow.adfoxBannerFail);\n                    RG.logger.log('iframe.contentWindow.adfoxBannerFail ' + iframe.contentWindow.adfoxBannerFail);\n\n                    //return iframe.contentDocument.adfoxBannerFail;\n                }*/\n\n            } else if (!_.isEmpty(banner['code'])) {\n\n                $ads.append(banner['code']);\n            }\n        });\n\n    },\n\n    // Устанавливаем поведение по показу\n    setAppear = (id, adfox, callb) => {\n\n        // Вешаем плагин на элемент\n        $(`#${id}`).appear();\n\n        // Подписываем событие\n        $(`#${id}`).one('appear', function(e, $all_appeared_elements) {\n\n            // Загружаем баннер\n            adfox.tgNS.loadBanner(adfox.initData.pr1, adfox.uri, adfox.initData.sessionId);\n\n            callb();\n        });\n\n        // Принудительно загружаем, если в пределах экрана\n        $.force_appear();\n\n    },\n\n    setPlaces = (topic, places) => {\n\n        RG.logger.info(topic);\n\n        for(let place in places) {\n\n            let id = `#ads${place}`,\n                $place = $(id);\n            \n            if($place.length) {\n\n                initAdFoxBanner($place, places[place]);\n            }\n        };\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        //RG.events.subscribe(`${_modulePrefix}.run`, initAdFox);\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Модуль работы с рекламой\n * Инициализирует отдельные модули\n *\n *\n */\n\nvar\n\n    places = [],\n    //resolution = null, // Назначаем при первой инициализации\n\n\t// модуль работы с AdFox баннерами\n\tAdfox = require('./Adfox'),\n\n    // Модуль работы с видео баннерами Teads\n    Teads = require('./Teads'),\n\n    // Модуль директа\n    YaDirect = require('./YaDirect'),\n\n    // Модуль Ivengo\n    Ivengo = require('./Ivengo'),\n\n    // Модуль Turboroller\n    Turboroller = require('./Turboroller'),\n\n    NativeRoll = require('./NativeRoll'),\n\n\t// Наклбас Ефима для Adfox баннеров\n\tinit = () => {\n\t\t\n        // Инициализация адфокса\n        Adfox.init();\n\n        // Что-то от Ефима\n        // getBanners();\n\n        RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, screenInfo) => {\n\n            //if(screenInfo.type !== resolution) { вынесли в модуль ScreenViewer\n\n                //RG.logger.log(screenInfo);\n\n            //resolution = screenInfo.type;\n            filterResolution(places, screenInfo.type);\n                \n            //}\n        });\n\t},\n\n\t/*getBanners = () => {\n\n        var platform = RG.meta.getPlatform() || '/static/main/ind';\n\n        //$.get(`${RG.config.paths.root}ads/platform${platform}`).then(data => {\n        $.get(`https://front.rg.ru/ads/platform${platform}`).then(data => {\n\n            places = data;\n\n            filterResolution(places, RG.ScreenViewer.getScreenInfo().type);\n\n            // start-- Добавил Леха, надо понять, как мы это уберем          \n            RG.events.publish('Adfox.platform.loaded', data);\n            // end-- Добавил Леха, надо понять, как мы это уберем\n\n        });\n    },*/\n\n    filterResolution = (data, resolution) => {\n\n        var filteredPlaces = {};\n\n        _.forEach(data, (place, index) => {\n\n            filteredPlaces[index] = _.filter(place, banner => {\n\n                return parseInt(banner[resolution]);\n            });\n        });\n\n        // Передаем в адфокс площадки\n        RG.events.publish('Adfox.places.set', filteredPlaces);\n\n        // Передаем в турбороллер площадки\n        RG.events.publish('Turboroller.places.set', filteredPlaces);\n\n        // Передаем в директ площадки\n        RG.events.publish('YaDirect.places.set', filteredPlaces);\n\n        // Передаем в партнерки площадки\n        //RG.events.publish('Partners.places.set', filteredPlaces);\n    };\n\nmodule.exports = {\n\n    // Перфиксы\n    Adfox_modulePrefix: Adfox._modulePrefix,\n    Teads_modulePrefix: Teads._modulePrefix,\n    YaDirect_modulePrefix: YaDirect._modulePrefix,\n    Ivengo_modulePrefix: Ivengo._modulePrefix,\n\tTurboroller_modulePrefix: Turboroller._modulePrefix,\n\n    // Модули\n    Adfox,\n    Teads,\n    YaDirect,\n    Ivengo,\n    Turboroller,\n    NativeRoll,\n\n\tinit\n};","/*\n * Загрузчик баннеров Ivengo\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Ivengo',\n\n    // Окружение\n    _ENV = RG.config.env,\n\n    libSrc = '//s.i-vengo.com/js/ivengo.min.js',\n\n    // ID компании\n    _placeId = {\n        prod: '18s59u0l2mb',\n        //dev: '00000000' \n        dev: '18s59u0l2mb'\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc)\n            .done(function(){\n                \n                // Пускаем событие готовности\n                RG.events.publish(`${_modulePrefix}.lib.loaded`);\n            });        \n\n    },\n\n    setup = () => {\n\n        var typeScreen = RG.ScreenViewer.getScreenInfo().type,\n            iVengo = window.iVengo || null;\n\n        // Если мы в телефоне\n        if(typeScreen === 'mobile' && !!iVengo) {\n\n            // Инициализация\n            iVengo.init({\n                appId: _placeId[_ENV],\n                //appId: '18s59u0l2mb',\n                logLevel: 'info'\n            });\n        \n            // Для отображения не полноэкранного баннера\n            // Несколько типов рекламы в одном запросе\n            iVengo.fillSlot({\n                adType: ['standart', 'cube', 'inline_video', 'slim_video'],\n                width: '100%',\n                mobileOnly: true\n            }); \n\n            // Отображение полноэкранного баннера\n            iVengo.showInterstitial({\n                adType: 'fullscreen'\n            });\n\n        }\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    // Запуск модуля\n    run = () => {\n\n        initLib();\n\n        RG.events.subscribe(`${_modulePrefix}.lib.loaded`, setup);\n    },\n\n    // Глобальная инициализация\n    init = () => {\n\n        // Включаем по событию из Adfox\n        RG.events.subscribe(`${_modulePrefix}.init`, run); \n\n        // Запуск, после удалим и будет запуск через Adfox\n        //run();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Загрузчик баннеров Teads\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'NativeRoll',\n\n    _ENV = RG.config.env,\n\n    // Устанавливаем баннеры\n    setup = () => {\n\n        var \n            //target = document.getElementsByClassName('b-material-wrapper')[0],\n            target = $('.b-material-wrapper > article')[0],\n            param = {\n                onError: function (e) { console.log(e); }\n            };\n\n        // Заполняем параметрами\n        param.gid = '5715fa7b64225d0e308b456e';\n\n        // Если на тестовом, то включаем отладку\n        if (_ENV === 'dev') {\n            param.debug = true;\n        }\n\n        // Инициализируем плеер\n        SeedrPlayer(target, 20, param);\n\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        (function (a, b, c, d, e, f, g, h) {\n\n         g = b.createElement(c);\n         g.src = d;\n         g.type = \"application/javascript\";\n         g.async = !0;\n         h = b.getElementsByTagName(c)[0];\n         h.parentNode.insertBefore(g, h);\n         a[f] = [];\n         a[e] = function () {\n                a[f].push(Array.prototype.slice.apply(arguments));\n            }\n\n        })(window, document, \"script\", (document.location.protocol === \"https:\" ? \"https:\" : \"http:\") + \"//cdn01.nativeroll.tv/js/seedr-player.min.js\", \"SeedrPlayer\", \"seedrInit\");\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        // Инициализируем библиотеку\n        initLib();\n\n        // Устанавливаем баннеры\n        setup();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Загрузчик баннеров Teads\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Teads',\n\n    _ENV = RG.config.env,\n\n    _placeId = {\n        mobile: {\n            inread: {\n                prod: 25863,\n                dev: 25863//48562\n            }\n        },\n        desktop: {\n            inread: {\n                prod: 19301,\n                dev: 19301//48561\n            },\n            inboard: {\n                prod: 25888,\n                dev: 25888//48717\n            }\n        }\n    },\n\n    // Классы контейнеров для баннеров\n    adsElementsClasses = 'teads',\n\n    libSrc = '//cdn.teads.tv/media/format.js',\n\n    // Баннеры\n    banners = {\n\n        mobile: [\n\n            // Inread Mobile\n            /*{\n                pid          : _placeId.mobile.inread[_ENV]\n                ,lang        : 'ru'\n                ,slot        : '.b-material-wrapper article > p'\n                ,format      : 'inread'\n                ,minSlot     : 1\n                ,components  : { skip: {delay : 0}}\n                ,mutable     : true\n                ,css         : \"margin: 0px 0px 20px;\"\n            },  */         \n\n            {\n               pid          : _placeId.mobile.inread[_ENV]\n               ,lang        : \"ru\"\n               ,slot        : '[itemprop=\"articleBody\"] > p'\n               ,format      : \"inread\"\n               ,components  : { skip: {delay : 0}}\n               ,mutable     : true\n               ,css         : \"margin: 0px 0px 20px;\"\n            }\n\n        ],\n\n        desktop: [\n\n            // Inboard\n            /*{\n               pid          : _placeId.desktop.inboard[_ENV]\n               ,lang        : 'ru'\n               //,slot        : '.b-header_article'\n               ,slot        : '#rgb_header__menu #menu .b-menu'\n               ,format      : 'inboard'\n               ,className   : `${adsElementsClasses} teads_inboard`\n               ,mobile      : false\n               ,minSlot     : 1\n               ,components  : { skip: {delay : 0}}\n               ,mutable     : true\n               ,css         : \"padding: 10px 0px;\"\n            },*/           \n\n            {\n                   pid          : _placeId.desktop.inboard[_ENV]\n                   ,lang        : \"en\"\n                   ,slot        : '.l-page__wrapper #rgb_header_article #rgb_header__content'\n                   ,format      : \"inboard\"\n                   ,mobile      : false\n                   ,minSlot     : 3\n                   ,components  : { skip: {delay : 0}}\n                   ,mutable     : true\n                   ,css         : \"margin: 15px 0px 0px;\"\n            },\n\n            // Inread Desktop\n            {\n                pid         : _placeId.desktop.inread[_ENV]\n                ,lang       : 'ru'\n                ,slot       : '.b-material-wrapper article > p'\n                ,format     : 'inread'\n                ,className  : `${adsElementsClasses} teads_inread`\n                ,mobile      : false\n                ,minSlot     : 1\n                ,components  : { skip: {delay : 0}}\n                ,mutable     : true\n                ,css         : \"margin: 0px 0px 20px;\"\n            }\n\n        ]\n    },\n\n    // Устанавливаем баннеры\n    setup = () => {\n\n        // Задаем пространство имен\n        window._ttf = window._ttf || [];\n\n        // Помещаем баннеры в хранилище Teads\n        $.each(banners, function(index, bannersGroup){\n\n            $.each(bannersGroup, function(index, banner){\n                _ttf.push(banner);\n            });\n        });\n\n    },\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc);\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        // Устанавливаем баннеры\n        setup();\n\n        // Инициализируем библиотеку\n        initLib();\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Загрузчик баннеров Ivengo\n * \n */\n\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'Turboroller',\n\n    // Окружение\n    _ENV = RG.config.env,\n\n    // Класс блоков для поиска\n    _bannersClass = '.turboroller', \n\n    // ID компании\n    _placeId = {\n        prod: '9429',\n        dev: '9429'\n    },\n\n    // Инициализируем баннер\n    initBanner = (placeId) => {\n\n        var $place = $(`#ads${placeId}`),\n            $dummy = $('<div />'),\n            elId = null,\n            prefixId = 'turbo',\n            postfixId = 'roller' + Math.random().toString(36).substring(7),\n            urlReq = null;\n\n        if (!!$place.length) {\n\n            // Составляем id\n            elId = prefixId + postfixId;\n\n            // Составляем url запроса\n            urlReq = `//engine.turboroller.ru/Route?place=rg.ru-${_placeId[_ENV]}&ctx=${escape(document.title)}&r=${Math.floor(Math.random() * 99999999999)}&r2=${postfixId}&ct1=${document.defaultCharset}&ct2=${document.characterSet}`; \n\n            // Настраиваем\n            $dummy\n                .addClass('b-ads__tgb')\n                .attr('id', elId);\n\n            $place.append($dummy);\n\n            loadBanner(urlReq);\n\n        }\n\n    },\n\n    // Инициализация библиотеки\n    loadBanner = (url) => {\n\n        // Грузим библиотеку\n        $.getScript(url)\n            .done(function(){\n                \n                // Пускаем событие готовности\n                RG.events.publish(`${_modulePrefix}.loaded`);\n            });        \n\n    },\n\n    // Ищем код turboroller\n    setPlaces = (topic, places) => {\n\n        // Проходим по всем площадкам\n        $.each(places, function(placeId, place) {\n\n            // Проходим по баннерам в площадке\n            $.each(place, function(index, el) {\n\n                var turboroller = el.turboroller || null;\n\n                if (turboroller) {\n\n                    initBanner(placeId);\n                }\n\n            });\n\n        });\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Загрузчик Yandex Direct\n *\n */\nvar\n\n    // Префикс модуля\n    _modulePrefix = 'YaDirect',\n\n    directPlaceId = '29789',\n\n    libSrc = '//an.yandex.ru/system/context.js',\n\n    // Классы контейнеров для баннеров\n    adsElementsClasses = 'ya-direct-root',\n\n    // Класс-модификатор загруженного баннера\n    adsLoadedElementsClasses = 'ya-direct_loaded',\n\n    // Инициализация библиотеки\n    initLib = () => {\n\n        // Грузим библиотеку\n        $.getScript(libSrc);\n\n    },\n\n    // Получить STAT_ID\n    getStatId = (param) => {\n\n        var stat_store = null,\n            screenInfo = require('../ScreenViewer').getScreenInfo(),\n            screenInfoMap = {\n                mobile: 1,\n                tablet: 2,\n                tabletLandscape: 3,\n                desktop: 4,\n                desktopFull: 5\n            };\n\n        /*\n\t\t *  PlaceId (1-99) Разделитель (0) Пользовательское разрешение экрана (1-5) Разделитель (0) ID эксперимента (1-99)\n\n\t\t\tПользовательское разрешение экрана:\n\t\t\t1 - Телефон\n\t\t\t2 - Планшет\n\t\t\t3 - Планшет(ландшат)\n\t\t\t4 - Монитор\n\t\t\t5 - Широкоформатный\n\n\t\t\tНапример: 250501\n\n\t\t\tМаксимальное возможное число 16 777 215 https://yandex.ru/support/partner/products-direct/variables-description.xml\n\t\t*\n\t\t*/\n\n        stat_store = [\n            param.placeAdsId.replace('ads', ''), // площадка #ads\n            0, // разделитель\n            screenInfoMap[screenInfo.type], // разрешение экрана\n            0, // разделитель\n            1 // ID эксперимента\n        ];\n\n        /*stat_store = [\n            param.mobile,\n            param.tablet,\n            param.tabletLandscape,\n            param.desktop,\n            param.desktopFull\n        ];*/\n\n        //return `PlaceId0${stat_store.join('')}`;\n        return `${stat_store.join('')}`;\n\n    },\n\n    // Запускаем баннер\n    runBanners = ($place, banners) => {\n\n        $.each(banners, function(index, banner) {\n\n            var prop = banner.yadirect;\n\n            // Если есть директ, запускаем\n            if(!!prop) {\n\n                prop = JSON.parse(prop);\n\n                // Помещаем в площадку контейнер для директа\n                var $direct = $('<div />'),\n                    directElId = `yaDirect_${Math.random().toString(36).substring(7)}`;\n\n                // Настраиваем контейнер\n                $direct.attr({\n                    'id': directElId,\n                    'class': `ya-direct-${prop.type} ${adsElementsClasses} ${adsLoadedElementsClasses}`\n                });\n\n                // Вставляем баннер\n                $place.append($direct);\n\n                // Задаем пространство имен\n                window.yandex_context_callbacks = window.yandex_context_callbacks || [];\n\n                // Дополняем параметры\n                // Stat_id\n                prop.stat_id = getStatId({\n                    placeAdsId: $place.attr('id'),\n                    param: banner\n                });\n\n                // Инициализируем баннер\n                window.yandex_context_callbacks.push(function() {\n                    Ya.Direct.insertInto(directPlaceId, directElId, prop);\n                });\n\n            }\n\n        });\n\n\n\n        /*{\n            stat_id: 1,\n            ad_format: \"direct\",\n            type: \"posterHorizontal\",\n            limit: 2,\n            favicon: true,\n\n            font_size: .9,\n            font_family: 'arial',\n            border_type: 'block',\n            header_bg_color: 'D7D7D7',\n            border_color: 'D7D7D7',\n            title_color: '990000',\n            bg_color: 'ffffff',\n            url_color: '006699',\n            all_color: '000000',\n            text_color: '000000',\n            hover_color: '0066FF'\n        }*/\n\n    },\n\n    // Готовим места\n    setPlaces = (topic, places) => {\n\n        for(let place in places) {\n\n            let id = `#ads${place}`,\n                $place = $(id);\n\n            if($place.length) {\n\n                // Инициализируем баннер\n                // Передаем объект и параметры\n                runBanners($place, places[place]);\n            }\n        };\n\n        // Когда все баннеры установлены\n        // инициализируем\n        initLib();\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        RG.events.subscribe(`${_modulePrefix}.places.set`, setPlaces);\n    };\n\n// Add to global scope\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/*\n * Модуль инициализации аналитики\n *\n */\n\nvar\n\n    // Модуль Чартбита\n    // Chartbeat = require('./Chartbeat'),\n\n    // Модуль Google Аналитики\n    Ga = require('./Ga'),\n\n    // Модуль Contentinsights для аналитики статей\n    Contentinsights = require('./Contentinsights'),\n\n    // Инициализация модулей\n    init = () => {\n        // Chartbeat.init();\n        Ga.init();\n        Contentinsights.init();\n    },\n\n    // Запуск модулей\n    run = () => {\n        // RG.events.publish(`${Chartbeat._modulePrefix}.run`);\n        RG.events.publish(`${Ga._modulePrefix}.run`);\n    };\n\nmodule.exports = {\n    // Chartbeat,\n    Ga,\n    Contentinsights,\n    init,\n    run\n}","/*\n * Модуль Google аналитики\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Contentinsights',\n\n    // Наш ID сайта\n    _moduleId = '1339',\n\n    // Инициализация библиотеки\n    loadLib = () => {\n\n        // Взято отсюда contentinsights.com\n        // личный кабинет\n        (function (d, s) {\n        var sf = d.createElement(s); sf.type = 'text/javascript'; sf.async = true;\n        sf.src = (('https:' == d.location.protocol) ? 'https://d7d3cf2e81d293050033-3dfc0615b0fd7b49143049256703bfce.ssl.cf1.rackcdn.com' : 'http://t.contentinsights.com')+'/stf.js';\n        var t = d.getElementsByTagName(s)[0]; t.parentNode.insertBefore(sf, t);\n        })(document, 'script');\n\n    },\n\n    // Настраиваем\n    setup = () => {\n\n        var _ain = {\n                id: _moduleId,\n                url: RG.meta.getMaterialUrl() || '',\n                postid: RG.meta.getMaterial() || '',\n                title: RG.meta.getMaterialTitle() || '',\n                pubdate: RG.meta.getPubTime() || '',\n                authors: RG.meta.getAuthorName() || '',\n                sections: RG.meta.getSectionName() || '',\n                //tags: \"news, politic, white house\",\n                //comments: \"24\"\n        };\n\n        // Как глобальная переменная\n        window._ain = _ain;\n\n        RG.logger.log(_ain);\n\n    },\n\n    // Инициализация\n    init = () => {\n        RG.logger.log('Contentinsights init');\n\n        RG.events.subscribe(`${_modulePrefix}.run`, run);\n    },\n\n    // Запуск\n    run = () => {\n\n        RG.logger.log('Contentinsights run');\n\n        setup();\n        loadLib();\n    };\n\nmodule.exports = {\n    init,\n    _modulePrefix\n}","/*\n * Модуль Google аналитики\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Ga',\n\n    _gaId = 'UA-7039329-31',\n\n    // Конфигурация dimensions\n    dimensionsConf = {\n        1: \"rubric:id\" // ID рубрики\n    },\n\n    // Загрузка и инициализация библиотеки\n    loadLib = () => {\n\n        // Взято отсюда developers.google.com/analytics/devguides/collection/analyticsjs/\n        $.getScript('//www.google-analytics.com/analytics.js');\n    },\n\n    // Устанавливаем dimensions\n    dimensionsSet = () => {\n\n        $.each(dimensionsConf, function(dimension, prop){\n\n            var targetLabel = null,\n                val = null;\n\n            // Устанавливаем селектор элемента\n            targetLabel = `meta[property=\"${prop}\"]`;\n\n            // Получаем значение\n            val = $(targetLabel).attr('content');\n\n            // Если значение есть, то устанавливаем\n            // соответственный dimension\n            if (!!val) {\n\n                // Если проверка на длину,\n                // округляем\n                if (prop === 'article:length') {\n                    val = Math.floor(+val/100)*100;\n                }\n\n                RG.logger.log('article:length = ' + val);\n\n                ga('set', `dimension${dimension}`, val);\n\n            }\n\n        });\n\n    },\n\n    // Настройка стандартных параметров\n    setup = () => {\n\n        var customGaId = RG.meta.getGaId(),\n            //customGaURI = RG.meta.getGaURI();\n            customGaURI = RG.meta.getProjectUri();\n\n    \t// Настройка глобального обЪекта\n    \twindow.ga = window.ga || function(){ \n    \t\tga.q = ga.q || [];\n    \t\tga.q.push(arguments);\n    \t};\n\n    \tga.l = +new Date;\n\n        RG.logger.log('ga id: ' + customGaId);\n        RG.logger.log('ga GaURI: ' + customGaURI);\n\n    \t// Настройки счетчика\n        ga('create', _gaId, 'rg.ru');\n\n        // Если есть кастомный счетчик для GA\n        if(!!customGaId) {\n            ga('create', customGaId, 'rg.ru', {'name': customGaURI});\n        }\n\n        //ga('create', 'UA-7039329-30', 'auto');\n\n        // Устанавливаем dimensions\n        dimensionsSet();\n\n        // Отправляем информацию по экрану\n        ga('set', 'dimension2', RG.ScreenViewer.getScreenInfo().type);\n\n        ga('require', 'displayfeatures');\n        ga('send', 'pageview');\n    },\n\n    // Регистрация одного события в GA\n    // @data\n    //\ttype - тип события (send или set)\n    //\tparam - объект с параметрами\n    //\t\ttagLabel - лейбл, по которому искать элемент\n    //\t\tevent - событие, по которому срабатывает счетчик\n    //\t\t\n    //\t\thitType -  тип события\n    //\t\teventCategory - категория события\n    //\t\teventAction - действие по событию\n    //\t\teventLabel - подпись события\n    //\t\teventValue - значение события\n\n    register = (data) => {\n\n    \tvar type = data.type,\n    \t\tparam = data.param;\n\n    \t// Вешаем слушателя\n    \t$(param.tagLabel).on(param.event, function(e) {\n\n            sendTracker({\n                type: type, \n                param: {\n                    hitType: param.hitType,\n                    eventCategory: param.eventCategory,\n                    eventAction: param.eventAction,\n                    eventLabel: param.eventLabel,\n                    eventValue: param.eventValue\n                }\n            });\n\n            // старый код\n    \t\t/*ga(type, {\n\t\t\t\thitType: param.hitType,\n\t\t\t\teventCategory: param.eventCategory,\n\t\t\t\teventAction: param.eventAction,\n\t\t\t\teventLabel: param.eventLabel,\n\t\t\t\teventValue: param.eventValue\n    \t\t});*/\n\n    \t\tRG.logger.log(`send GA, event: ${param.event}, on element ${param.tagLabel}`);\n\n    \t});\n\n    \tRG.logger.log(`Зарегестрировано событие GA, event: ${param.event}, на элементе ${param.tagLabel}`);\n\n    },\n\n    // Регистрация пакета событий GA\n    registerList = (data) => {\n\n    \tvar list = data.list,\n    \t\tmeta = data.meta;\n\n    \t// Проходим по списку событий\n    \t$.each(list, function(index, item){\n\n    \t\t// ОБрабатываем каждый набор событий\n\t    \t// @type - тип события (send или set)\n\t    \t// @param - параметры отправляемого события\n\t    \t$.each(item, function(type, param){\n\n\t    \t\t// Регистрируем все события\n\t    \t\t$.each(param, function(index, paramItem){\n\n\t    \t\t\tregister({ type: type, param: paramItem });\n\n\t    \t\t});\n\n\t    \t});\n\n    \t});\n\n    },\n\n    // Отправка события\n    // @type - тип события, по умолчанию send\n    // @param - передаваемые параметры\n    sendTracker = (data) => {\n\n        var type = data.type || 'send',\n            param = data.param;\n\n        // отправляем\n        ga(type, {\n            hitType: param.hitType,\n            eventCategory: param.eventCategory,\n            eventAction: param.eventAction,\n            eventLabel: param.eventLabel,\n            eventValue: param.eventValue,\n            nonInteraction: param.nonInteraction || true\n        });\n\n        RG.logger.log(`Отправлены GA данные, по событию ${type}`);\n        RG.logger.log('Отправлены GA данные, с параметрами', param);\n\n    },\n\n    // Инициализация\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, run);\n    },\n\n    // Запуск\n    run = () => {\n        loadLib();\n        setup();\n    };\n\nmodule.exports = {\n    _modulePrefix,\n    register,\n    registerList,\n    sendTracker,\n    init\n}","/*\n* BlocksShifter\n* Модуль перестановки блоков в зависимости от ширины экрана\n*\n* Ширина высчитывается, как в медиазапросах - min-width\n* То есть блок показывается в контейнере начиная с полученной ширины и больше\n*\n* @BlocksShifter.run - запускаем смещение блоков\n* \n*/\n\nvar\n    // Подключаем модуль, проверки путей\n    keypather = require('keypather')(),\n\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс модуля\n    _modulePrefix = 'BlocksShifter',\n\n    // Стандартный класс контейнеров\n    _shiftContainerLabel = '.shiftContainer',\n\n    // Модификатор активного контейнера\n    _shiftContainerActiveClass = 'shiftContainer_active',\n\n    // Аттрибут, с которого считываем id блока\n    _shiftContainerId = 'data-blocksShifterId',\n\n    // Аттрибут, с которого считываем данные о ширине экрана\n    _shiftContainerWidthHash = 'data-blocksShifterWidthHash',\n\n    // Хранилище методов,\n    // соответствующих блоку\n    _callbackList = {},\n\n    /*\n     * Методы\n     * \n     */\n\n    // Перемещаем блоки\n    shiftBlocks = (topic, screenProp) => {\n\n        // Находим контейнеры для модуля\n        var $shiftContainer = $(_shiftContainerLabel);\n\n        // Если элементы есть\n        if (!!$shiftContainer.length) {\n\n            // Анализируем элемент\n            checkToShift($shiftContainer, screenProp);\n\n        }\n\n    },\n\n    // Перемещаем один блок\n    /*shiftBlock = (shiftContainerIdValue) => {\n\n        var $containers = $(`[${_shiftContainerId}=${shiftContainerIdValue}]`);\n\n    },*/\n\n    // Анализируем элементы\n    // и отбираем те, которые подходят\n    // под тип экрана\n    checkToShift = ($shiftContainer, screenProp) => {\n\n        // Получаем параметры,\n        // которые будут использоваться в сдвиге\n        var screenType = screenProp.type; // тип экрана\n\n        $shiftContainer.each((index, el) => {\n\n            var $el = $(el),\n                shiftContainerWidthHashValue = $el.attr(_shiftContainerWidthHash),\n                shiftContainerIdValue = $el.attr(_shiftContainerId),\n                $activeBlock = null;\n\n            // В блоке разрешений может быть несколько\n            // Поэтому преобразуем строку в массив\n            // и проходим по нему\n            shiftContainerWidthHashValue = shiftContainerWidthHashValue.split(' ');\n\n            $.each(shiftContainerWidthHashValue, (index, el) => {\n\n                // Если блок подходит под тип экрана\n                if (el === screenType) {\n\n                    // Находим активный блок\n                    $activeBlock = $(`[${_shiftContainerId}=${shiftContainerIdValue}].${_shiftContainerActiveClass}`);\n\n                    //RG.logger.log('Шифтану ка я блок - #' + $activeBlock.attr('id'));\n                    \n                    // Обрабатываем блок\n                    processBlock($el, $activeBlock, shiftContainerIdValue, screenType, _shiftContainerActiveClass);\n\n                }\n\n            });\n\n        });\n\n    },\n\n    /*\n     * Инструменты\n     * \n     */\n\n    // Обрабатываем блок\n    processBlock = ($el, $activeBlock, shiftContainerIdValue, screenType, activeClass) => {\n\n        // Если контейнер пустой,\n        // то заполняем его\n        if (!$el.children().length) {\n\n            // Заполняем контентом\n            // RIP Устарело!!\n            //$el.html(getBlockContent($activeBlock));\n\n            // Заменяем содержимое элемента\n            // контентом\n            $activeBlock\n                .children()\n                .appendTo($el.empty());\n        }\n\n        // Если есть обратный вызов на этом блоке\n        // вызываем его\n        if (keypather.in(_callbackList, `${shiftContainerIdValue}.${screenType}.callback`)) {\n\n            // Передаем туда элемент в который мы будем помещать контент\n            // Передаем элемент, из которого контент вытягиваем\n            // Передаем сам модуль\n            _callbackList[shiftContainerIdValue][screenType].callback($el, $activeBlock);\n\n        }\n\n        // удаляем активный класс у бывшего :)\n        $activeBlock.removeClass(activeClass);\n\n        // добавляем активный класс\n        $el.addClass(activeClass);\n\n    },\n\n    // Получаем каонтент блока, по его Id\n    getBlockContent = ($activeBlock) => {\n\n        var content = null;\n\n        // если блок есть\n        if (!!$activeBlock.length) {\n\n            // и возвращаем контент\n            content = $activeBlock.html();\n        }\n\n        return content;\n\n    },\n    \n    // Привязываем к блоку действие (callback)\n    // Получаем массив функций, и регистрируем каждую\n    // @param - объект настроек, состоит из\n    // @blockId - имя блока, в котором будет вызов\n    // @screenType - тип экрана, в котором будет вызов\n    // @callback - функция. которая вызовется\n    setCallback = (callbackList) => {\n\n        $.each(callbackList, (index, callbackParam) => {\n\n            var blockId = callbackParam.blockId || null,\n                screenType = callbackParam.screenType.split(' ') || null,\n                callback = callbackParam.callback || null;\n\n            try { \n\n                // Если есть все данные,\n                // то назначаем обработчик\n                if (!!(blockId && screenType && callback)) {\n\n                    // добавляем Блок в список\n                    if (!_callbackList[blockId]) {\n                        _callbackList[blockId] = {};\n                    }\n\n                    // Проходим по всем типам экрана\n                    $.each(screenType, (index, screenTypeItem) => {\n\n                        // добавляем в блоке тип\n                        if (!_callbackList[blockId][screenTypeItem]) {\n                            _callbackList[blockId][screenTypeItem] = {};\n                        }\n\n                        // Назначаем обработчик\n                        _callbackList[blockId][screenTypeItem].callback = callback;\n\n                    });                    \n\n                } else {\n                    throw new Error('не указаны все данные для функции');\n                }\n\n            } catch (err) {\n                RG.logger.error(`Модуль ${_modulePrefix}, функция setCallback.\\nОшибка: ${err}`);\n            }\n\n        });\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, shiftBlocks);\n    };\n\n// Экспортируем как модуль\n// передаем метод установки собственных функций\n// и метод инициализации\nmodule.exports = {\n    setCallback,\n    //shiftBlock,\n    _modulePrefix,\n    init\n};","/*\n * Модуль раскрывающихся блоков по клику на элемент\n *\n * Передаем элементы,\n * кликая на которые,\n * изменяем связанные с ними блоки.\n *\n * Изменение осуществляется css\n *\n * Когда активно - класс is-active\n * По инициализации нужно передать дефолтный активный элемент\n *\n */\n\nfunction Module(root, options) {\n\n    var $root = $(root),\n        _options = null,\n        defaults = {\n            labelList: '.b-content-handler__btn',\n            contentList: '.b-content-handler__ctx',\n            active: 'is-active',\n            attrFind: 'data-content-handler'\n        };\n\n    this.options = _options = $.extend({}, defaults, options);            \n\n    // Родительский контейнер\n    this.$root = $root;\n\n    // Кнопки\n    this.$labelList = $root.find(_options.labelList);\n\n    // Контент\n    this.$contentList = $root.find(_options.contentList);\n\n    // Стор активной кнопки\n    this.$activeBtn = null;\n\n    // Стор активного элемента\n    this.$activeCtx = null;\n\n    // Инициализируем\n    this.init();\n\n};\n\n// Коротака язапись для удобства\nModule.fn = Module.prototype;\n\n/*\n * Методы\n *\n */\n\n// Выбор элемента\nModule.fn.select = function($btn, ctxLabel) {\n\n    var $ctx = null;\n\n    // Удаляем активный класс у бывших элементов\n    this.deselect();\n\n    // выделяем кнопку\n    $btn.addClass(this.options.active);\n\n    // Сохранение выбранной кнопки\n    this.storeBtn($btn);\n\n    // Находим связанный с кнопкой элемент\n    $ctx = this.$root.find(ctxLabel);\n\n    // RG.logger.log($ctx);\n    // RG.events.publish('ContentHandler.select', {});\n\n    if (!!$ctx) {\n\n        // добавляем активный класс у выбранного элемента\n        $ctx.addClass(this.options.active);\n\n        // сохраняем выделенный элемент\n        this.storeCtx($ctx);    \n\n    } else {\n        throw new Error(`Не найден выбранный элемент, проверьте аттрибут поиска элемента: ${this.options.attrFind}`);\n    }\n\n    return this;\n\n};\n\n// Удаление выбора элемента\nModule.fn.deselect = function() {\n\n    // Удаляем активный класс у кнопки\n    if (!!this.$activeBtn) {\n        this.$activeBtn.removeClass(this.options.active);\n    }\n\n    // Удаляем активный класс у контента\n    if (!!this.$activeCtx) {\n        this.$activeCtx.removeClass(this.options.active);\n    }\n\n    return this;\n\n};\n\n// Сохранение выбранной кнопки\nModule.fn.storeBtn = function($el) {\n\n    this.$activeBtn = $el;\n\n    return this;\n\n};\n\n// Сохранение выбранного элемента\nModule.fn.storeCtx = function($el) {\n\n    this.$activeCtx = $el;\n\n    return this;\n\n};\n\n// Инициализируем активную кнопку и контент\nModule.fn.storeActiveEl = function() {\n\n    var active = this.options.active;\n\n    // Сохраняем кнопку\n    this.$activeBtn = this.$labelList.filter(`.${active}`);\n\n    // Сохраняем текст\n    this.$activeCtx = this.$contentList.filter(`.${active}`);\n\n    return this;\n\n};\n\n// Инициализация модуля\nModule.fn.init = function() {\n\n    var self = this;\n\n    this\n\n        // Инициализируем активную кнопку и контент\n        .storeActiveEl()\n\n        // вешаем событие на кнопки\n        .$labelList.on('click', function(e) {\n\n            var $btn = $(this),\n                ctxLabel = null;\n\n            // на случай если будет ссылка на элементе\n            e.preventDefault();\n\n            // Получаем контекст элемента\n            ctxLabel = $btn.attr(self.options.attrFind);\n\n            if (!!ctxLabel) {\n\n                // выделяем элемент\n                self.select($btn, ctxLabel);\n\n            } else {\n                throw new Error(`Не установлен аттрибут поиска элемента: ${self.options.attrFind}`);\n            }\n\n        })\n\n        // закрываем цепочку\n        ;\n\n    return this;\n\n};\n\n// Экспортируем модуль\nmodule.exports = Module;","/*\n * Модуль раскрывающихся блоков по клику на элемент\n *\n * Передаем родительский элемент,\n * в котором есть кнопка и контент,\n * который будем скрывать.\n *\n * Скрытие осуществляется самостоятельно через css (по-умолчанию)\n * если в опциях \n *\n *\n * Когда открыто - класс is-show, закрыто - is-hide\n * По инициализации нужно передать,\n * какое дефолтное состояние должно быть у блока,\n * Методж show или hide\n *\n */\n\nfunction Module(root, options) {\n\n    var $root = $(root),\n        _options = null,\n        defaults = {\n            btn: '.b-content-toggler__btn',\n            ctx: '.b-content-toggler__ctx',\n            show: 'is-show',\n            hide: 'is-hide',\n            opened: false \n        };\n\n    $.extend({\n      'location'         : 'top',\n      'background-color' : 'blue'\n    }, options);\n\n    // Настройки\n    this.options = _options = $.extend({}, defaults, options);            \n\n    // Родительский контейнер\n    this.$root = $root;\n\n    // Кнопка для действия\n    this.$btn = $root.find(_options.btn);\n\n    // Скрываемый элемент\n    this.$ctx = $root.find(_options.ctx);\n\n    // Инициализируем модуль\n    this.init();\n};\n\n\n// Короткая запись\nModule.fn = Module.prototype;\n\n// Уничтожаем \nModule.fn.destroy = function() {\n\n    this.$root\n            .removeClass(this.options.show)\n            .removeClass(this.options.hide);\n    this.$ctx.css('height', 'auto');\n\n    return this;\n};\n\nModule.fn.setHeight = function($el) {\n\n    // Выставление высоты скрываемому/открываемому элементу\n\n    $el.css('height', $el.children().outerHeight(true));\n\n    return this;\n};\n\n// Статус скрыт контент\nModule.fn.initialHide = function($el) { \n\n    // Скрыть\n    var show = this.options.show;\n    var hide = this.options.hide;\n    this.$ctx.css('height', 0);\n    this.$root\n        .removeClass(show)\n        .addClass(hide);\n\n    return this;\n};\n\nModule.fn.showHide = function($el) { \n\n    // Скрыть или показать, в зависимости от класса\n\n    var show = this.options.show;\n    var hide = this.options.hide;\n\n    if (this.$root.hasClass(show)) {\n        this.$ctx.css('height', 0);\n        this.$root\n            .removeClass(show)\n            .addClass(hide);\n    } else {\n        this.setHeight(this.$ctx);\n        this.$root\n            .removeClass(hide)\n            .addClass(show);\n    }\n\n    return this;\n};\n\nModule.fn.initialShow = function($el) { \n\n    // Скрыть или показать, в зависимости от класса\n\n    var show = this.options.show;\n    var hide = this.options.hide;\n    \n    this.setHeight(this.$ctx);\n    this.$root\n        .removeClass(hide)\n        .addClass(show);\n\n    return this;\n};\n\nModule.fn.init = function() {\n\n    var self = this;\n\n    // Проверка начального состояния\n    if (this.options.opened) { \n        this.$root.addClass(this.options.show);\n\n        // Не всегда высота при загрузке соответствует высоте после загрузки :(\n        setTimeout(function(){\n            self.setHeight(self.$ctx);\n        }, 1000);\n    } else { \n        this.initialHide(this.$ctx);\n    }\n\n    $(window).resize(function(){ \n        if (self.$root.hasClass(self.options.show)) {\n            self.setHeight(self.$ctx);\n        } \n    });\n\n\n    // клик по кнопке\n    this.$btn.on('click', function(){ \n        self.showHide(self.$ctx);\n    });\n\n    RG.events.subscribe('ContentHandler.select', function(t, e) { \n        self.setHeight(self.$ctx);\n    });\n\n    return this;\n};\n\n\n\n\n\n// Экспортируем модуль\nmodule.exports = Module;","/*\n * Модуль инициализации счетчиков\n *\n */\n\nvar\n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'Counters',\n\n    // Протокол\n    protocol = 'https:',\n\n    // Массив счетчиков\n    counters = [\n\n        // Мейл.ру\n        {\n            name: 'mailruCounter',\n            targetId: '#mailruCounter',\n\n            init: (elementId) => {\n\n                var\n\n                    _tmr = null, // Объект таймера\n\n                    $a = null, // ссылка на картинке счетчика\n                    $img = null; // Картинка счетчика\n                    //$pixel = null; // Картинка промерочного пикселя\n\n                // Настраиваем счетчик\n                //window._tmr = window._tmr || [];\n                _tmr = window._tmr || (window._tmr = []);\n\n                // Отправляем счетчик просмотра страницы\n                _tmr.push({id: \"2808226\", type: \"pageView\", start: (new Date()).getTime()});\n\n                // Инициализируем библиотеку\n                $.getScript(protocol + '//top-fwz1.mail.ru/js/code.js');\n\n                /*\n                 * Настраиваем блок счетчика\n                 *\n                 */                \n\n                $a = $('<a />', {\n                    target: '_blank',\n                    href: protocol + '//top.mail.ru/jump?from=2808226'\n                });\n\n                $img = $('<img />', {\n                    //src: '//dd.c2.b0.a0.top.mail.ru/counter?id=11659;t=216;l=1',\n                    src: protocol + '//top-fwz1.mail.ru/counter?id=2808226;t=409;l=1',\n                    alt: 'Рейтинг@Mail.ru',\n                    width: '88px',\n                    height: '31px',\n                    border: '0'\n                });\n\n                // Добавляем картинку счетчика в элемент\n                $(elementId).append($a.append($img));\n\n                /*\n                 * Настраиваем промерочный пиксель\n                 * 11.03.16 Max: Надо удалить этот пиксель, так как он должен быть прописан inline в шаблоне <noscripts>, в противном случае получается задвоение показателей.\n                 */\n\n                /*$pixel = $('<img />', {\n                    src: '//top-fwz1.mail.ru/counter?id=11659;js=na',\n                    alt: 'Рейтинг@Mail.ru',\n                    width: '1',\n                    height: '1',\n                    border: '0'\n                }).css({\n                    'position': 'absolute',\n                    'left': '-10000px'\n                });*/\n\n                // Добавляем пиксель в элемент\n                //$(elementId).append($pixel);\n\n                RG.logger.info('mailruCounter init');\n\n            }\n        }, \n\n        // Яндекс метрика\n        {\n            name: 'yaMetrikaCounter',\n            targetId: '#yaMetrika',\n\n            init: (elementId) => {\n\n                var $img = null,\n                    counterId = RG.meta.getYaMetrikaId() || '39269930';\n\n                RG.logger.log('Yandex Metrika id ' + RG.meta.getYaMetrikaId());\n\n                // Настраиваем счетчик\n                window.yandex_metrika_callbacks = window.yandex_metrika_callbacks || [];\n\n                window.yandex_metrika_callbacks.push(function() { \n                    try {\n\n                        window.yaCounter39269930 = new Ya.Metrika({\n                            id:counterId,\n                            clickmap:true,\n                            trackLinks:true,\n                            accurateTrackBounce:true,\n                            webvisor:true,\n                            trackHash:true\n                        });\n\n                    } catch(e) {\n                        RG.logger.error(e + '. Yandex Metrika error');\n                    } \n                }); \n\n                // Загружаем библиотеку\n                $.getScript(protocol + '//mc.yandex.ru/metrika/watch.js');\n\n\n                // Настраиваем блок счетчика\n                /*$img = $('<img />', {\n                    src: '//mc.yandex.ru/watch/' + counterId,\n                    border: '0',\n                    width: '1px',\n                    height: '1px'\n                }).css({\n                    'position': 'absolute',\n                    'left': '-10000px'\n                });*/\n\n                // Вставляем в контейнер\n                //$(elementId).append($img);\n\n                RG.logger.info('yaMetrika init');\n\n            }\n        },\n\n    ],\n\n    // Инициализация счетчиков\n    initCounters = () => {\n\n        // Инициализируем все счетчики\n        $.each(counters, function(index, counter){\n\n            counter.init(counter.targetId);\n\n        });\n\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n        RG.events.subscribe(`${_modulePrefix}.run`, initCounters);\n    };\n\n// Экспортируем модуль\nmodule.exports = {\n    init\n}","/**\r\n * Created by esolovyev on 20.01.2016.\r\n */\r\nvar getTime = (date) => {\r\n\r\n        var time = moment().format('HH:mm');\r\n\r\n        if(date) {\r\n            time = `${date.slice(-4, -2)}:${date.slice(-2)}`;\r\n        }\r\n\r\n        return time;\r\n    },\r\n\r\n    parseVmDate = (date) => {\r\n\r\n        if(date) {\r\n            var preparedDate = moment(date, 'YYYYMMDDhhmm');\r\n\r\n            if(preparedDate.isSame(moment(), 'day')) {\r\n                return preparedDate.format('HH:mm');\r\n            }\r\n\r\n            return preparedDate.format('DD.MM.YYYY');\r\n\r\n        } else {\r\n\r\n            return moment().format('HH:mm');\r\n        }\r\n    };\r\n\r\nmodule.exports = {\r\n    getTime,\r\n    parseVmDate\r\n};","/**\n * Created by esolovyev on 20.10.2015.\n */\n\nvar pubsub = PubSub;\n\n    pubsub.immediateExceptions = RG.config.env === 'dev';\n\n    /**\n     * Позволяет регестрировать список событий\n     * @param list\n     */\n/*    pubsub.subscribe = function(topic, func) {\n\n        lsbridge.subscribe(topic, func);\n    };\n\n    pubsub.publish = function(topic, func) {\n\n        lsbridge.send(topic, func);\n    };*/\n\n    pubsub.registerList = function(list = null) {\n\n        if(!_.isEmpty(list)) {\n\n            _.each(list, (callback, event) => {\n                if(_.isString(event) && _.isFunction(callback)){\n\n                    this.subscribe(event, callback);\n                }\n            });\n        }\n    }.bind(pubsub);\n\nmodule.exports = pubsub;","/**\n * Created by esolovyev on 14.02.2016.\n */\n\nvar Select = require('../../blocks/forms/b-select/scripts/Select');\n\n    class ListHeadToSelect {\n\n        constructor(itemClass, containerClass, listClass) {\n\n            this.id = _.random(0, 1000);\n            this.elementId = `selectRubric-${this.id}`;\n\n            this.$element = this.appendElement(containerClass);\n            this.$list = $(listClass).addClass('is-tablet_block').addClass('is-tabletLanscape');\n\n            RG.logger.log(this.$element);\n            RG.logger.log(this.$list);\n\n            this.collectItems(itemClass);\n\n  /*          RG.events.subscribe(`${RG.ScreenViewer._modulePrefix}.update`, (topic, info) => {\n\n                if (info.type === 'mobile' && info.type !== this.currentType) {\n\n                    RG.logger.info(topic);\n   */\n                    this.run();\n/*\n                } else if(this.currentType !== info.type) {\n\n                    this.$element.hide();\n                    this.$list.show();\n                }\n\n                this.currentType = info.type;\n            });*/\n        }\n\n        collectItems(itemClass) {\n\n            var items = [];\n\n            $(itemClass).each((i, el) => {\n\n                items.push(RG.parser.getAttributes(el));\n            });\n\n            return this.setItems(items);\n        }\n\n        appendElement(containerClass) {\n\n            var $element = $('<div />').attr('id', this.elementId).addClass('is-mobile_block');\n            $(containerClass).append($element);\n\n            return $element;\n        }\n\n        run() {\n\n            this.selectedOption = this.selectedOption || _.findWhere(this.getItems(), {href: document.location.pathname});\n            this.render();\n        }\n\n        getItems() {\n\n            return this.items;\n        }\n\n        setItems(list) {\n\n            this.items = list;\n            return this.items;\n        }\n\n        setSelected(item) {\n\n            this.selectedOption = item;\n            return this.selectedOption;\n        }\n\n        render() {\n\n            var items = this.getItems(),\n                selectedOption = null;\n\n            //RG.logger.trace(selectedOption);\n\n            if(items.length) {\n\n                // Устанавливаем выбранную опцию\n                selectedOption = this.selectedOption || this.setSelected(items[0]);\n\n/*                this.$element.show();\n                this.$list.hide();*/\n/*\n                if(this.component) {\n\n                    this.component.set('items', items);\n                    this.component.set('selectedOption', selectedOption);\n                } else {*/\n\n                // Инициализируем компонент селекта\n                this.component = new Select({\n                    el: this.elementId,\n                    isolated: true,\n                    data() {\n                        return {\n                            items,\n                            selectedOption\n                        };\n                    }\n                });\n\n/*                }*/\n            }\n        }\n    };\n\nmodule.exports = ListHeadToSelect;","/**\n * Created by esolovyev on 11.02.2016.\n */\n\nvar LiveReload = require('../../blocks/main/b-live-reload/scripts/LiveReload'),\n\n    blocks = [],\n    liveReloads = {},\n    templates = {},\n    partials = {},\n    data = {},\n    intervals = {},\n    requested = {},\n\n    init = () => {\n\n        getBlocks();\n    },\n\n    getBlocks = () => {\n\n        blocks = [];\n\n        $('.liveReload').each((i, el) => {\n\n            $(el).attr('id', `live_reload_${Math.random().toString(36).substring(10)}`);\n            let block = _.extend(RG.parser.getAttributes(el), {el: el});\n\n            _.each(block, (value, key) => {\n\n                let newKey = key.replace('data-', '');\n                block[newKey] = value;\n            })\n\n            blocks.push(block);\n        });\n    },\n\n    run = () => {\n\n        RG.logger.trace(blocks);\n\n        _.each(blocks, (block) => {\n\n            setStart(block);\n        });\n    },\n\n    setStart = (block) => {\n\n        setTimeout(() => {\n\n            if(!requested[block.tmpl]) {\n\n                getTemplate(block);\n                requested[block.tmpl] = true;\n\n            } else if(!requested[block.json]) {\n\n                getData(block);\n                requested[block.json] = true;\n            }\n        }, block.delay)\n    },\n\n    getTemplate = (block) => {\n\n        var tmplUrl = block.tmpl,\n            iterator = block.iterator,\n            template = '';\n\n        $.get(tmplUrl).then(response => {\n\n            if (iterator) {\n\n                template = `{{#${iterator}}}{{>part}}{{/${iterator}}}`;\n                partials[block.tmpl] = response;\n            } else {\n                template = response;\n            }\n\n            templates[tmplUrl] = template;\n\n            if(!requested[block.json]) {\n\n                getData(block);\n                requested[block.json] = true;\n            }\n        });\n    },\n\n    getData = (block) => {\n\n        if(block.request === 'jsonp') {\n\n            $.ajax({\n                url: block.json,\n                dataType: 'jsonp',\n                jsonp: 'callback',\n                jsonpCallback: 'callback',\n            }).then(response => {\n\n                data[block.json] = response;\n                renderComponent(block);\n            });\n        } else {\n\n            $.get(block.json).then(response => {\n\n                data[block.json] = response;\n                renderComponent(block);\n            });\n        }\n    },\n\n    renderComponent = (parrent) => {\n\n        RG.logger.trace(_(blocks).where({json: parrent.json}));\n\n        _.chain(blocks).where({json: parrent.json}).each(block => {\n\n            if (liveReloads[block.id]) {\n\n                if (_.isArray(data[block.json])) {\n\n                    liveReloads[block.id].reset(data[block.json]);\n                } else {\n\n                    try {\n\n                        liveReloads[block.id].set(data[block.json]);\n                    } catch (e) {\n\n                        RG.logger.log('LiveReload object is updated');\n                    }\n                }\n\n            } else {\n\n                liveReloads[block.id] = new LiveReload({\n                    template: templates[block.tmpl],\n                    data: data[block.json],// Ractive ругается!\n                    /*data() {\n                        var data = {};\n\n                        _.each(block.json, function(el){\n                            data\n                        });\n\n                        return data;\n                    },*/\n                    el: block.el,\n                    magic: true,\n                    partials: {\n                        part: partials[block.tmpl]\n                    }\n                });\n            }\n\n            RG.events.publish('livereload.init', block);\n        });\n\n        updateInterval(parrent);\n    },\n\n    updateInterval = (block) => {\n\n        var id = block.json,\n            blockData = data[block] || {},\n            interval = parseInt(blockData.interval) || 60000;\n\n        if(id in intervals) {\n\n            clearInterval(intervals[id].intervalId);\n            delete intervals[id];\n\n            if(interval === 0) {\n                return false;\n            }\n        }\n\n        interval = interval > 20000 ? interval : 20000;\n\n        intervals[id] = {\n            intervalId: setInterval(() => {\n\n                getData(block);\n            }, interval),\n            intervalTime: interval\n        };\n    };\n\nmodule.exports = {\n    init,\n    run\n};","/**\r\n * Created by esolovyev on 06.10.2015.\r\n */\r\n\r\n/**\r\n * Ставит время вызова функции\r\n * @returns {string}\r\n */\r\nvar time = () => {\r\n        var d = new Date();\r\n        return `${[d.getHours(),d.getMinutes(),d.getSeconds()].join(':')}.${d.getMilliseconds()}`;\r\n    },\r\n\r\n    /**\r\n     * Проверяет окружение\r\n     * @returns {boolean}\r\n     */\r\n    env = () => {\r\n        return (RG.config.env === 'dev' || RG.config.env === 'test')\r\n    },\r\n\r\n\r\n    log = msg => {\r\n\r\n        if(env()) console.log(time(), msg);\r\n    },\r\n    info = msg => {\r\n\r\n        if(env()) console.info(time(),msg);\r\n    },\r\n    warn = msg => {\r\n\r\n        if(env()) console.warn(time(),msg);\r\n    },\r\n    error = msg => {\r\n\r\n        if(env()) console.error(time(),msg);\r\n    },\r\n    debug = msg => {\r\n\r\n        if(env()) console.debug(time(),msg);\r\n    },\r\n    trace = msg => {\r\n\r\n        if(env()) console.trace(time(),msg);\r\n    };\r\n\r\n/**\r\n * Экспорт функций\r\n * @type {{log: Function, info: Function, warn: Function, error: Function, debug: Function}}\r\n */\r\nmodule.exports = {\r\n    log,\r\n    info,\r\n    warn,\r\n    error,\r\n    debug,\r\n    trace\r\n}","/**\n * Created by esolovyev on 06.12.2015.\n */\nvar getEnv = () => {\n\n        var env = $('meta[name=\"rg-data\"][property=\"env\"]').attr('content');\n\n        return env;\n    },\n\n    getMaterial = () => {\n\n        var material = $('meta[name=\"rg-data\"][property=\"article:id\"]').attr('content');\n\n        return material;\n    },\n\n    getMaterialTitle = () => {\n\n        var title = $('meta[property=\"og:title\"]').attr('content');\n\n        return title;\n    },\n\n    getMaterialUrl = () => {\n\n        var url = $('meta[property=\"og:url\"]').attr('content');\n\n        return url;\n    },\n\n    getMaterialImg = () => {\n\n        var img = $('meta[property=\"og:image\"]').attr('content');\n\n        return img;\n    },\n\n    getProjectUri = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"project:uri\"]').attr('content');\n    },\n\n    getSujet = () => {\n\n        var sujet = $('meta[name=\"rg-data\"][property=\"sujet:id:first\"]').attr('content');\n\n        return sujet;\n    },\n\n    getSujetTitle = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"sujet:title:first\"]').attr('content');\n    },\n\n    getPubTime = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"article:published_time\"]').attr('content');\n    },\n\n    getSectionName = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"section:name\"]').attr('content');\n    },\n\n    getAuthorName = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"author:name\"]').attr('content');\n    },\n\n    getPlatform = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"ads:uri\"]').attr('content');\n    },\n\n    getPage = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"page\"]').attr('content');\n    },\n\n    getAdsHide = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"ads:hide\"]').attr('content');\n    },\n\n    getGaId = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"gaId\"]').attr('content');\n    },\n\n    getYaMetrikaId = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"yaMetrikaId\"]').attr('content');\n    },\n\n    getCustomLiveinternet = () => {\n\n        return $('meta[name=\"rg-data\"][property=\"customLiveinternet\"]').attr('content');\n    };\n\nmodule.exports = {\n    getEnv,\n    getSujet,\n    getMaterial,\n    getSujetTitle,\n    getPubTime,\n    getMaterialTitle,\n    getMaterialUrl,\n    getMaterialImg,\n    getSectionName,\n    getAuthorName,\n    getProjectUri,\n    getPlatform,\n    getPage,\n    getAdsHide,\n    getGaId,\n    getYaMetrikaId,\n    getCustomLiveinternet\n};","/**\n * Created by esolovyev on 12.02.2016.\n */\n\nvar components = [],\n\n    init = () => {\n\n        components = [];\n\n        components = findComponents('html');\n    },\n\n    findComponents = (parent) => {\n\n        let foundComponents = [];\n\n        _.each(_.keys(Ractive.components), component => {\n\n            $(parent).find(component).each(function(i, el) {\n\n                var tag = this.tagName.toLowerCase();\n\n                if(Ractive.components[tag]) {\n\n                    RG.logger.warn(`Parser found ${tag} component`);\n\n                    let data = getAttributes(el);\n\n                    foundComponents.push({\n                        tag,\n                        el,\n                        data\n                    });\n                }\n            });\n        });\n\n        return _.sortBy(foundComponents, item => {\n            return item.data.sort;\n        });\n    },\n\n    /**\n     * Возвращает атрибуты элемента в виде объекта\n     **/\n    getAttributes = (el) => {        \n\n        var attributes = {};\n\n        if(_.isObject(el) && el.attributes) {\n\n            attributes = _.object(_.map(Array.prototype.slice.call(el.attributes), item => {\n\n                let value = item.value,\n                    itemValue = $(el).attr(item.name).toString();\n\n                try {\n\n                    if(/^[\\[\\{].*?[\\]\\}]/.test(itemValue)) {\n\n                        value = JSON.parse(itemValue);\n                    } else {\n\n                        throw false;\n                    }\n                } catch (e) {\n\n                    if(itemValue.match(/'(.+)'$/)) {\n\n                        value = itemValue.replace(/['\"]+/g, '');\n/*                    } else if(!isNaN(itemValue)) {\n\n                        value = parseFloat(itemValue);\n                        RG.logger.trace('NUMBER');*/\n                    } else if(itemValue === \"true\" || itemValue === \"false\") {\n\n                        value = (itemValue === \"true\");\n                    } else if(item.name === 'class') {\n\n                        value = itemValue.split(' ');\n                    } else {\n                        \n                        value = itemValue;\n                    }\n                }\n\n                return [item.name, value];\n            }));\n        }\n\n        attributes.content = $(el).text();\n\n        return attributes;\n    },\n\n    getComponents = (component) => {\n\n        return _.where(components, {tag: component});\n    },\n\n    render = (component, options) => {\n\n        let foundComponents = [],\n            instances = []; \n\n        if(!_.isEmpty(component)) {\n\n            foundComponents = _.where(components, {tag: component});\n\n            if(foundComponents.length) {\n\n                _.each(foundComponents, item => {\n\n                    let settings = _.extend({\n                            el: item.el,\n                            data: item.data\n                        }, options || {}),\n\n                        instance = new Ractive.components[component](settings);\n\n                    instances.push(instance);\n                });\n            }\n        }\n\n        return instances;\n    };\n\nmodule.exports = {\n    init,\n    render,\n    getAttributes,\n    getComponents,\n    findComponents\n};","/**\r\n * Created by esolovyev on 22.11.2015.\r\n */\r\n\r\nvar Query = {\r\n\r\n/*    get() {\r\n\r\n        let data = new QueryData();\r\n        return data;\r\n    },*/\r\n\r\n/*    set(data) {\r\n        \r\n        let query = $.param(data);\r\n        \r\n        if (history.pushState) {\r\n            var newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}?${query}`;\r\n            window.history.pushState({path:newurl},'',newurl);\r\n        } else {\r\n\r\n            document.location = `?${query}`;\r\n        }\r\n    },*/\r\n\r\n    set(parameters) {\r\n        \r\n        var queryString = _.reduce(\r\n            parameters,\r\n            (components, value, key) => {\r\n                if(value) {\r\n                    components.push(key + '=' + encodeURIComponent(value));\r\n                }\r\n                return components;\r\n            },\r\n            []\r\n        ).join('&');\r\n        \r\n        if(queryString.length > 0) {\r\n\r\n            queryString = '?' + queryString;\r\n        }\r\n\r\n        if (history.pushState) {\r\n\r\n            let newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}${queryString}`;\r\n            window.history.pushState({path:newurl},'',newurl);\r\n        } else {\r\n\r\n            document.location = queryString;\r\n        }\r\n        return queryString;\r\n    },\r\n    \r\n    get(queryString) {\r\n\r\n        var queryString = queryString || (window.location.search || null);\r\n\r\n        if(queryString) {\r\n\r\n            return _.reduce(\r\n                queryString\r\n                    .replace('?', '')\r\n                    .split('&'),\r\n                (parameters, parameter) => {\r\n                    \r\n                    if(parameter.length > 0) {\r\n                        _.extend(\r\n                            parameters,\r\n                            _.object([_.map(parameter.split('='),\r\n                                        decodeURIComponent)]));\r\n                    }\r\n                \r\n                    return parameters;\r\n                }, {});\r\n        }\r\n    }\r\n    ///\r\n};\r\n\r\nmodule.exports = Query;","/*\n * Screen Viewer\n * Модуль проверки экрана браузера\n *\n * @ScreenViewer.ready\n * @ScreenViewer.check - события подписки на вызов функции определения типа экрана\n * \n */\n\nvar \n    /*\n     * Свойства\n     * \n     */\n    \n    // Префикс событий\n    _modulePrefix = 'ScreenViewer',\n\n    // Настройки для работы с экраном\n    _screenSettings = {\n\n        // Карта соответствия разрешения и типа девайса\n        // Она соответствует медиазапросам в sass\n        map: {\n            tablet: 768,\n            //tabletLandscape: 1024,\n            tabletLandscape: 990,\n            //desktop: 1366,\n            desktop: 1260,\n            //desktopFull: 1700\n            desktopFull: 1760\n        } \n    },\n\n    // Хранилище полученной информации\n    // о типе экрана\n    _screenInfo = null,\n\n    /*\n     * Методы\n     * \n     */\n\n    // Определяем тип разрешения экрана\n    detectScreenSizeType = () => {\n\n        var screenWidth = getScreenSize(),\n            screenMap = _screenSettings.map,\n\n            // Объект с собранной информацией, потом пойдет в публикацию события\n            screenInfo = {\n                type: null,\n                screenWidth: null,\n\n                // Информация о экране, полученная ранее\n                infoBefore: null\n            };\n\n        try {\n\n            // Устанавливаем ширину экрана\n            if (!!screenWidth) {\n                screenInfo.screenWidth = screenWidth;\n            } else {\n                throw new Error('Ширина экрана не получена, значение выводится, как: ' + screenWidth)\n            }\n\n            // Сама проверка\n            if (screenWidth < screenMap.tablet) {\n                \n                // Телефон\n                screenInfo.type = 'mobile';\n\n            } else if (screenWidth >= screenMap.tablet && screenWidth < screenMap.tabletLandscape) {\n\n                // Планшет\n                screenInfo.type = 'tablet';\n\n            } else if (screenWidth >= screenMap.tabletLandscape && screenWidth < screenMap.desktop) {\n\n                // Планшет: Ландшафтная ориентация\n                screenInfo.type = 'tabletLandscape';\n\n            } else if (screenWidth >= screenMap.desktop && screenWidth < screenMap.desktopFull) {\n\n                // Десктоп\n                screenInfo.type = 'desktop';\n\n            } else if (screenWidth >= screenMap.desktopFull) {\n\n                // Десктоп: Фулскрин\n                screenInfo.type = 'desktopFull';\n\n            }\n\n            //if(!_screenInfo || _screenInfo.type !== screenInfo.type) {\n\n                // Записываем предыдущую информацию о экране\n                screenInfo.infoBefore = getScreenInfo();\n\n                // Сохраняем определенную ширину в хранилище\n                return screenInfo;\n\n/*                // Публикуем событие о определении ширины окна браузера\n                RG.events.publish(_modulePrefix + '.update', _screenInfo);\n\n                RG.logger.trace(_screenInfo);*/\n            //}\n\n        } catch (err) {\n            RG.logger.error('Модуль ' + _modulePrefix + ', функция detectScreenSizeType.\\nОшибка: ' + err);\n        }\n\n    },\n\n    checkScreenInfo = (topic) => {\n\n        RG.logger.info(topic);\n\n        var screenInfo = detectScreenSizeType();\n\n        if(!_screenInfo || _screenInfo.type !== screenInfo.type) {\n\n                // Записываем предыдущую информацию о экране\n                screenInfo.infoBefore = getScreenInfo();\n\n                // Сохраняем определенную ширину в хранилище\n                _screenInfo = screenInfo;\n\n                // Публикуем событие о определении ширины окна браузера\n                RG.events.publish(_modulePrefix + '.update', _screenInfo);\n\n                RG.logger.trace(_screenInfo);\n        }\n    },\n\n    // Получаем разрешение экрана\n    // jQuery отдает ширину без ширины скроллбара.\n    // Чтобы было соответствие с медиазапросами\n    // используем функцию innerWidth\n    // Для старых браузеров, используем jQuery (IE8)\n    getScreenSize = () => {\n        return window.innerWidth || $(window).width();\n    },\n\n    // Получить информацию о экране\n    getScreenInfo = () => {\n\n        return _screenInfo;\n    },\n\n    /*\n     * Инициализация подписчиков модуля\n     *\n     */\n\n    init = () => {\n\n        let registerList = {};\n\n        _screenInfo = detectScreenSizeType();\n\n        registerList[_modulePrefix + '.ready'] = checkScreenInfo;\n        registerList[_modulePrefix + '.check'] = checkScreenInfo;\n        registerList['window.resize'] = checkScreenInfo;\n\n        RG.events.registerList(registerList);\n    };\n\n// Экспортируем как модуль\nmodule.exports = {\n    _modulePrefix,\n    getScreenInfo,\n    init\n};","/**\n * Created by esolovyev on 02.11.2015.\n */\n\nvar getSelected = () => {\n\n        if(window.getSelection) {\n\n            return window.getSelection();\n        } else if(document.getSelection) {\n\n            return document.getSelection();\n        } else {\n\n            var selection = document.selection && document.selection.createRange();\n            if(selection.text) {\n                return selection.text;\n            }\n            return false;\n        }\n        return false;\n    },\n\n    selectText = id => {\n\n        let node = $(id)[0], // document.getElementById(id),\n            range = null;\n\n        if (document.selection) {\n\n            range = document.body.createTextRange();\n            range.moveToElementText(node);\n            range.select();\n        } else if (window.getSelection) {\n\n            range = document.createRange();\n            range.selectNodeContents(node);\n            window.getSelection().removeAllRanges();\n            window.getSelection().addRange(range);\n        }\n    };\n\n  module.exports = {\n\n      getSelected,\n      selectText\n  };\n","/**\r\n * Created by esolovyev on 21.01.2016.\r\n */\r\n\r\nvar paths = require('./config').geolocationPaths,\r\n\r\n    getGeolocation = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.getRegion}`).then(data => {\r\n\r\n            RG.events.publish('geolocation.list', data);\r\n        });\r\n    },\r\n\r\n    changeRegion = (topic, region) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.changeRegion}${region.id}`).then(() => {\r\n\r\n            //Cookies.set('rg_user_region', JSON.stringify(region));\r\n\r\n            RG.events.publish('geolocation.region.changed', region);\r\n        });\r\n    },\r\n\r\n    getRegions = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        $.get(`${paths.getRegions}`).then(regions => {\r\n\r\n            RG.events.publish('geolocation.region.update', regions);\r\n        });\r\n    },\r\n\r\n    init = () => {\r\n\r\n        RG.events.registerList({\r\n            'geolocation.region.get': getGeolocation,\r\n            'geolocation.region.change': changeRegion,\r\n            'geolocation.region.all': getRegions\r\n        });\r\n    };\r\n\r\nmodule.exports = {\r\n    init\r\n};","/*\n * Модуль получения данных площадок\n * На момент получения данных, отдает событие с этими данными\n *\n */\n\nvar \n\n    // Префикс модуля\n    _modulePrefix = 'Place',\n\n    _placeMap = {},\n\n    // Получение площадок\n    getPlaces = () => {\n\n        var rootPath = RG.config.paths.root,\n            platform = RG.meta.getPlatform() || '/static/main/ind';\n\n        // Отправляем запрос\n        $.get(`${rootPath}ads/platform${platform}`)\n            .done(data => {\n                RG.logger.info(`${_modulePrefix}.places.loaded`);\n                RG.events.publish(`${_modulePrefix}.places.loaded`, data);\n            })\n            .fail(error => {\n                throw new Error(`Ошибка при получении площадок. Сервис Place, error: ${error}`);                 \n            });\n\n    },\n\n    // ОБработка площадок\n    // Сохраняем в конечный объект\n    // - placeSrc - все площадки\n    // - placeFiltered = отфильтрованные по экрану\n    preparePlace = (topic, places) => {\n\n        // Сохраняем все площадки\n        _placeMap.placeSrc = places;\n\n        // Отфильтрованные по экрану\n        _placeMap.placeFiltered = places;\n\n    },\n\n    // Инициализация сервиса\n    init = (topic, screenInfo) => {\n\n        //getPlaces();\n\n        RG.events.subscribe(`${_modulePrefix}.places.loaded`, preparePlace);\n    };\n\nmodule.exports = {\n    _modulePrefix,\n    init\n};","/**\n * Created by esolovyev on 11.02.2016.\n */\n\nvar currentRegion = null,\n    news = [],\n    template = null,\n    components = [],\n\n    init = () => {\n\n        /**\n         * TODO Все колбэки в одно место\n         **/\n        RG.BlocksShifter.setCallback([\n            {\n                blockId: 'rgb_feed_last-news',\n                screenType: 'mobile',\n                callback: ($target, $active) => {\n\n                    RG.events.publish('regional.render');\n                    RG.events.publish('scroll.init', $('.b-feed__list_scrolled'));\n                }\n            },\n            {\n                blockId: 'rgb_feed_last-news',\n                screenType: 'tablet tabletLandscape desktop desktopFull',\n                callback: ($target, $active) => {\n\n                    RG.events.publish('regional.render');\n                    RG.events.publish('scroll.init', $('.b-feed__list_scrolled'));\n                }\n            }\n        ]);\n\n        RG.events.registerList({\n\n            'regional.run': run,\n            'regional.template.get': getTemplate,\n            'regional.news.get': getNews,\n            'regional.render': renderComponent,\n            'geolocation.region.changed': (topic, region) => {\n\n                RG.logger.info(topic);\n\n                if(region) {\n\n                    currentRegion = region;\n\n                    RG.events.publish('regional.news.get');\n                }\n            },\n            'geolocation.list': (topic) => {\n\n                RG.events.publish('regional.run');\n            },\n        });\n\n        RG.events.publish('regional.run');\n    },\n\n    run = (topic) => {\n\n        RG.logger.info(topic);\n\n        currentRegion = RG.session.getUserRegion();\n\n        $('.b-feed__list_reg').hide();\n    },\n\n\n    getTemplate = (topic) => {\n\n        RG.logger.info(topic);\n\n        $.get(RG.config.paths.tmpl.bFeed).then(html => {\n\n            template = html;\n            RG.events.publish('regional.news.get');\n        });\n    },\n\n    getNews = (topic) => {\n\n        RG.logger.info(topic);\n\n        if(currentRegion.rgId) {\n\n            $.get(`${RG.config.paths.lastNews}region-${currentRegion.rgId}.json`).then(response => {\n\n                news = response.result;\n                RG.events.publish('regional.render');\n            });\n        }\n    },\n\n    initEvents = () => {\n\n        if(!_.isEmpty(currentRegion) && _.isString(currentRegion.rubricPrepositionalName)) {\n\n            $('.b-feed__name_reg-link, .b-feed__name_com').off('click');\n\n            $('.b-feed__name_reg-link').attr('href', currentRegion.link).text(`в ${currentRegion.rubricPrepositionalName}`).on('click', function(event) {\n\n                if($(this).parent().hasClass('is-active')) {\n\n                    window.location = currentRegion.link;\n                }\n\n                $('.b-feed__list_com').hide();\n                $('.b-feed__list_reg').show();\n\n                $(this).parent().addClass('is-active');\n                $('.b-feed__name_com-link').parent().removeClass('is-active');\n\n                event.preventDefault();\n            });\n\n            $('.b-feed__name_com-link').on('click', event => {\n\n                $('.b-feed__list_com').show();\n                $('.b-feed__list_reg').hide();\n\n                $('.b-feed__name_reg-link').parent().removeClass('is-active');\n                $('.b-feed__name_com-link').parent().addClass('is-active');\n\n                event.preventDefault();\n            });\n        }\n    },\n\n    renderComponent = () => {\n\n        if(template) {\n\n            initEvents();\n\n            $('.b-feed__list_reg').each(function(i, element) {\n\n                var id = $(this).attr('data-id');\n\n                if(id) {\n\n                    components[id].set('items', news);\n                } else {\n\n                    id = Math.random().toString(36).substring(6);\n\n                    components[id] = new Ractive({\n\n                        el: element,\n                        template: `{{#items}}${template}{{/items}}`,\n                        data() {\n                            return {\n                                items: news,\n                                dateFormat: RG.datetime.parseVmDate\n                            }\n                        }\n                    });\n\n                    $(this).attr('data-id', id);\n                }\n            });\n        } else {\n\n            RG.events.publish('regional.template.get');\n        }\n    };\n\n\nmodule.exports = {\n\n    init // 13.02.16 Max: до разбирательства, отправляет кучу запросов\n};","/**\n * Created by esolovyev on 15.12.2015.\n */\n\nvar paths = require('./config').savedPaths,\n\n    add = (topic, id) => {\n\n        RG.logger.info(topic);\n\n        $.get(`${paths.add}${id}`).then(data => {\n\n            RG.events.publish('subscribe.saved.added', id);\n        });\n    },\n\n    remove = (topic, id) => {\n\n        RG.logger.info(topic);\n\n        $.get(`${paths.remove}${id}`).then(data => {\n            \n            RG.events.publish('subscribe.saved.removed', id);\n        });\n    },\n\n    toggle = (topic, id) => {\n\n        RG.logger.info(topic);\n        \n        $.get(`${paths.toggle}${id}`).then(data => {\n\n            RG.events.publish('subscribe.saved.toggled', id);\n        });\n    },\n\n    init = () => {\n\n        RG.events.registerList({\n            'subscribe.saved.toggle': toggle,\n            'subscribe.saved.remove': remove,\n            'subscribe.saved.add': add,\n        });\n    }\n\nmodule.exports = {\n    init\n};\n","/**\n * Created by esolovyev on 16.12.2015.\n */\n\nvar sujetsPaths = require('./config').sujetsPaths,\n    commentsPaths = require('./config').commentsPaths,\n    freshPaths = require('./config').freshPaths,\n    docPaths = require('./config').docPaths,\n\n    removeSujet = (topic, id) => {\n\n        RG.logger.info(topic);\n\n/*\n        $.mockjax({\n            url: `${paths.remove}/${id}`,\n            responseText: {}\n        });\n*/\n\n        $.get(`${sujetsPaths.remove}${id}`).then(sujet => {\n\n            sujet.id = parseInt(sujet.id);\n\n            RG.events.publish('subscribe.sujet.removed', sujet);\n        });\n    },\n\n    addSujet = (topic, id) => {\n\n        RG.logger.info(topic);\n/*\n        $.mockjax({\n            url: `${paths.add}/${id}`,\n            responseText: {}\n        });*/\n\n        $.get(`${sujetsPaths.add}${id}`).then(sujet => {\n\n            sujet.id = parseInt(sujet.id);\n\n            RG.events.publish('subscribe.sujet.added', sujet);\n        });\n    },\n\n    getMaterials = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${sujetsPaths.getMaterials}${id}`).then(data => {\n\n            RG.events.publish('subscribe.sujet.set', data.items);\n        });\n    },\n\n    removeComments = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${commentsPaths.remove}${id}`).then(data => {\n\n            RG.events.publish('subscribe.comments.removed', id);\n        });\n    },\n\n    addComments = (topic, id) => {\n\n        RG.logger.info(topic);\n        /*\n         $.mockjax({\n         url: `${paths.add}/${id}`,\n         responseText: {}\n         });*/\n\n        $.get(`${commentsPaths.add}${id}`).then(() => {\n\n            RG.events.publish('subscribe.comments.added', id);\n        });\n    },\n\n    getFollowed = topic => {\n\n        RG.logger.info(topic);\n\n        var followedList = [],\n            sujet = +RG.meta.getSujet();\n\n        $.get(`${sujetsPaths.getFollowed}`).then(response => {\n\n            followedList = response.items;\n\n            if (_.findIndex(followedList, {id: sujet}) !== -1) {\n\n                RG.events.publish('subscribe.sujet.added', _.findWhere(followedList, {id: sujet}));\n            }\n\n            RG.events.publish('subscribe.sujet.list', response);\n        });\n    },\n\n    getTopSujets = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${sujetsPaths.getTopSujets}`).then(data => {\n\n            RG.events.publish('subscribe.sujets.toped', data);\n        });\n    },\n\n    addFresh = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${freshPaths.add}`).then(data => {\n\n            RG.events.publish('subscribe.fresh.added', data);\n        });\n    },\n\n    removeFresh = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${freshPaths.remove}`).then(data => {\n\n            RG.events.publish('subscribe.fresh.removed', data);\n        });\n    },\n\n    checkFresh = topic => {\n\n        RG.logger.info(topic);\n\n        if(RG.session.isAuthorized()) {\n            $.get(`${freshPaths.check}`).then(data => {\n\n                if (data.status === 'OK') {\n\n                    RG.events.publish('subscribe.fresh.added', data);\n                } else {\n\n                    RG.events.publish('subscribe.fresh.removed', data);\n                }\n            });\n        }\n    },\n\n    addDoc = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${docPaths.add}`).then(data => {\n\n            RG.events.publish('subscribe.doc.added', data);\n        });\n    },\n\n    removeDoc = topic => {\n\n        RG.logger.info(topic);\n\n        $.get(`${docPaths.remove}`).then(data => {\n\n            RG.events.publish('subscribe.doc.removed', data);\n        });\n    },\n\n    checkDoc = topic => {\n\n        RG.logger.info(topic);\n\n        if(RG.session.isAuthorized()) {\n\n            $.get(`${docPaths.check}`).then(data => {\n\n                if (data.status === 'OK') {\n\n                    RG.events.publish('subscribe.doc.added', data);\n                } else {\n\n                    RG.logger.trace(data);\n\n                    RG.events.publish('subscribe.doc.removed', data);\n                }\n            });\n        }\n    },\n\n    init = () => {\n\n        RG.events.registerList({\n            'subscribe.sujet.remove': removeSujet,\n            'subscribe.sujet.fetch': getFollowed,\n            'subscribe.sujet.add': addSujet,\n            'subscribe.sujet.get': getMaterials,\n            'subscribe.sujets.top': getTopSujets,\n\n            'subscribe.comments.remove': removeComments,\n            'subscribe.comments.add': addComments,\n\n            'subscribe.fresh.add': addFresh,\n            'subscribe.fresh.remove': removeFresh,\n            'subscribe.fresh.check': checkFresh,\n\n            'subscribe.doc.add': addDoc,\n            'subscribe.doc.remove': removeDoc,\n            'subscribe.doc.check': checkDoc,\n        });\n    }\n\nmodule.exports = {\n    init\n};","/**\r\n * Created by esolovyev on 21.01.2016.\r\n */\r\n\r\nvar paths = require('./config').viewedPaths,\r\n\r\n    getViewed = (topic) => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        /*\r\n         $.mockjax({\r\n         url: `${paths.remove}/${id}`,\r\n         responseText: {}\r\n         });\r\n         */\r\n\r\n        $.get(`${paths.getViewed}`).then(materials => {\r\n\r\n            RG.events.publish('viewed.list', materials);\r\n        });\r\n    },\r\n\r\n    setViewed = (topic) => {\r\n\r\n\r\n        RG.logger.info(topic);\r\n\r\n        var materialId = RG.meta.getMaterial();\r\n        /*\r\n         $.mockjax({\r\n         url: `${paths.remove}/${id}`,\r\n         responseText: {}\r\n         });\r\n         */\r\n\r\n        $.get(`${paths.setViewed}${materialId}`).then(data => {\r\n\r\n            if(data.current_saved) {\r\n                RG.events.publish('subscribe.saved.added', RG.meta.getMaterial());\r\n            }\r\n        });\r\n    },\r\n\r\n    init = () => {\r\n\r\n        RG.events.registerList({\r\n            'viewed.get': getViewed,\r\n            'viewed.set': setViewed,\r\n        });\r\n    };\r\n\r\nmodule.exports = {\r\n    init\r\n};","/**\n * Created by esolovyev on 15.12.2015.\n */\n\n/**\n * Конфигурационный\n * @type {string}\n */\nvar rootPath = RG.config.paths.root,\n    subscribe = `${rootPath}subscribe/`,\n    add = `${subscribe}add/`,\n    remove = `${subscribe}remove/`,\n    account = `${rootPath}account/`,\n    geolocation = `${rootPath}geo/`,\n\n    check = `${subscribe}check/`,\n\n    typo = `${rootPath}app/send_error`,\n\n    sujetsPaths = {\n        add: `${add}sujet/`,\n        remove: `${remove}sujet/`,\n        getMaterials: `${subscribe}articles/`,\n        getFollowed: `${subscribe}sujets`,\n        getTopSujets: `${subscribe}top_sujets`\n    },\n\n    commentsPaths = {\n        add: `${add}comments/`,\n        remove: `${remove}comments/`\n    },\n\n    savedPaths = {\n        add: `${account}set_favorite/`,\n        remove: `${account}remove_favorite/`,\n        toggle: `${account}toggle_read_page/`\n    },\n\n    viewedPaths = {\n        getViewed: `${account}list_viewed`,\n        setViewed: `${account}set_viewed/`\n    },\n\n    geolocationPaths = {\n        getRegion: `${geolocation}`,\n        changeRegion: `${geolocation}change/`,\n        getRegions: `${geolocation}regions`\n    },\n\n    freshPaths = {\n        add: `${add}fresh`,\n        remove: `${remove}fresh`,\n        check: `${check}fresh`\n    },\n\n    docPaths = {\n        add: `${add}doc`,\n        remove: `${remove}doc`,\n        check: `${check}doc`\n    };\n\nmodule.exports = {\n    commentsPaths,\n    sujetsPaths,\n    savedPaths,\n    typo,\n    viewedPaths,\n    geolocationPaths,\n    freshPaths,\n    docPaths\n};","/**\r\n * Created by esolovyev on 09.10.2015.\r\n */\r\nvar fixData = obj => {\r\n\r\n        if(!_.isEmpty(obj)) {\r\n            return _.object(_.map(obj, (prop, key) => {\r\n\r\n                let val = prop;\r\n\r\n                if(_.isString(val)) {\r\n                    val = val.replace(/\\+/g, ' ');\r\n                }\r\n\r\n                return [key, val];\r\n            }));\r\n        }\r\n    },\r\n\r\n    cookie = Cookies,//require('cookies-js'),\r\n\r\n    /**\r\n     * Проверяет включенны ли куки\r\n     * @returns {Function|enabled|ga.selectors.pseudos.enabled}\r\n     */\r\n    enabled = () => {\r\n\r\n        return cookie.enabled;\r\n    },\r\n\r\n    /**\r\n     * Возвращает хэш авторизованного пользователя\r\n     * @returns {*}\r\n     */\r\n    isAuthorized = () => {\r\n\r\n        return !!cookie.get('rg_user_hash');\r\n    },\r\n\r\n    /**\r\n     * Возвращает регион пользователя\r\n     * @returns {*}\r\n     */\r\n    getUserRegion = () => {\r\n\r\n        var cookieCurrent = Cookies.get('rg_user_region');\r\n\r\n        cookieCurrent = cookieCurrent ? fixData(JSON.parse(cookieCurrent) || null) : {};\r\n\r\n        return cookieCurrent;\r\n    },\r\n\r\n    /**\r\n     * Возвращает возвращает найленый регион\r\n     * @returns {*}\r\n     */\r\n    getCurrentRegion = () => {\r\n\r\n        var cookieNew = Cookies.get('rg_geo_data');\r\n\r\n        cookieNew = cookieNew ? fixData(JSON.parse(cookieNew) || null) : {};\r\n\r\n        return cookieNew;\r\n    },\r\n\r\n    /**\r\n     * Возвращает хэш пользователя авторизиующегося через социальные сети\r\n     * @returns {*}\r\n     */\r\n    confirmData = () => {\r\n\r\n        return cookie.get('rg_thash');\r\n    },\r\n\r\n    check = topic => {\r\n\r\n        RG.logger.info(topic);\r\n\r\n        if(enabled()) {\r\n\r\n            if(confirmData()) {\r\n\r\n                RG.logger.warn('User avaitnig conformation');\r\n                RG.events.publish('session.confirm.required');\r\n\r\n            } else if(isAuthorized()) {\r\n\r\n                RG.logger.warn('User is authorized');\r\n                RG.events.publish('session.user.authorized');\r\n\r\n            } else {\r\n\r\n                RG.logger.warn('User is NOT authorized');\r\n                RG.events.publish('session.user.logedout');\r\n            }\r\n        } else {\r\n\r\n            RG.logger.error('Cookies disabled');\r\n            RG.events.publish('session.cookie.disabled');\r\n        }\r\n    },\r\n\r\n    getUserData = () => {\r\n\r\n        let userData = {},\r\n            user = {};\r\n\r\n        try{\r\n\r\n            userData = cookie.get('rg_user_info');\r\n\r\n            if(userData) {\r\n\r\n                user = JSON.parse(userData);\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n            RG.logger.error(`${e.toString()}`);\r\n        }\r\n\r\n        return user;\r\n    },\r\n\r\n    init = () => {\r\n\r\n        //check();\r\n        RG.events.subscribe('session.check', check);\r\n\r\n        var interval = window.setInterval(() => {\r\n\r\n            if(isAuthorized()) {\r\n                window.clearInterval(interval);\r\n\r\n                RG.events.publish('session.check');\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\nmodule.exports = {\r\n    enabled,\r\n    isAuthorized,\r\n    confirmData,\r\n    init,\r\n    getUserData,\r\n    getUserRegion,\r\n    getCurrentRegion\r\n};","/**\r\n * Created by esolovyev on 12.11.2015.\r\n */\r\n\r\n/**\r\n * TODO\r\n * Add cookie storage if local is not supported\r\n */\r\nvar Storage = {\r\n\r\n    get(name) {\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    set(name, value) {\r\n\r\n        Lockr.set(name, value);\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    add() {\r\n\r\n        Lockr.sadd(name, value);\r\n\r\n        return Lockr.get(name);\r\n    },\r\n\r\n    all() {\r\n\r\n        return Lockr.getAll();\r\n    }\r\n};\r\n\r\n    \r\n\r\nmodule.exports = Storage;"],"sourceRoot":"/source/"}