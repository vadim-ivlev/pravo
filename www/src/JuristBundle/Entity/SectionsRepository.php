<?php

namespace JuristBundle\Entity;

use Doctrine\ORM\EntityRepository;
use JuristBundle\Entity\Sections;

use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
/**
 * SectionsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SectionsRepository extends \Doctrine\ORM\EntityRepository
    implements ContainerAwareInterface
{
    public $result = [];

    const routeBundle = '/jurists';
    const mainPageProject = 'main';//без / так как используется регулярка

    private $connect_to_Jurists_bd, $container;

    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }



    ///*$this->result['breadcrumbs'] = */$this->getBreadCrumbs();

    /*$Sections = $this->connect_to_Jurists_bd
        ->getRepository('JuristBundle:Sections')
        ->getBreadCrumbs($this->container->get('request'));

    $this->result['breadcrumbs'] = $Sections;*/
    
    public function getBreadCrumbs($request){
        //$request = $this->container->get('request');
        $routeURL = $request->getRequestUri(); //получаем текущий роут

        $exceptions = [//исключения расширений, если они есть
            'json',
            'html'
        ];

        $beginning_of_line = strpos($routeURL, self::routeBundle);//определяем начальную поцизию строки для вырезания
        $row = substr($routeURL, $beginning_of_line+strlen(self::routeBundle));

        if(preg_match('/(\d+)/', $row, $matches)){//смотрим, есть ли id
            $end_line = strpos($row, $matches[0]);

            $row = substr($row, 0, $end_line);
        }

        foreach($exceptions as $exception){//если url исключения
            if($exception_cut_line = strpos($row, $exception)){
                $row = substr($row, 0, $exception_cut_line);
            }
        }

        preg_match_all('/(\/\w+)/', $row, $matches);//если вложенность url поялвяется /question/info


        $repo = $this
            ->getEntityManager()
            ->getRepository('JuristBundle:Sections');

        preg_match('/\/' . self::mainPageProject . '/', $row, $check_main);//смотрим, главная ли это страница
        if(!$check_main){//если не главная страница
            $main = $repo
                ->findOneByRoute('/' . self::mainPageProject);
            $this->result/*['breadcrumbs']*/[] = [
                'main' => true,
                'title' => $main->getTitle(),
                'route' => $main->getRoute(),
            ];
        }

        foreach ($matches[0] as $key => $match){
            $Sections = $repo
                ->findOneByRoute($match);
            if($key === 0){
                $this->result/*['breadcrumbs']*/[] = [
                    'title' => $Sections->getTitle(),
                    'route' => $Sections->getRoute(),
                ];
            } else {
                $this->result/*['breadcrumbs']*/[] = [
                    'title' => $Sections->getTitle(),
                    'route' => $this->result/*['breadcrumbs']*/[$key]['route'] . $Sections->getRoute(),
                ];
            }
        }
        return $this->result;
    }
}
