{"version":3,"sources":["common.js","../node_modules/browser-pack/_prelude.js","app/Resources/public/scripts/list.js","app/Resources/public/scripts/modules/LoadChain.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","/var/www/pravo/www/app/Resources/public/scripts/list.js","module","RG","LoadChain","$","./modules/LoadChain","/var/www/pravo/www/app/Resources/public/scripts/modules/LoadChain.js","rootEl","document","getElementById","addToChain","Ractive","el","template","tmpl","tmplValue","this","get","tmplType","self","done","response","resetTemplate","set","data","items","uri","getAttribute","limit","offset","search","requestUri","show","count","onrender","on","querySym","window","location","href","indexOf","fetch","then","status","console","log","json","items_list","concat"],"mappings":"AAAA,cCAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,2DAAA,SAAAT,EAAAU,EAAAJ,GCSAK,GAAAC,UAAAD,GAAAC,WAAAZ,EAAA,uBAAAa,EAEA,WAEA,GAAAF,IAAAC,cFIGE,sBAAsB,yEAAyEC,wEAAwE,SAASf,EAAQU,EAAOJ,GGZlM,GAAAM,GAAA,WAEA,GAAAI,GAAAC,SAAAC,eAAA,aAEAC,EAAA,GAAAC,UACAC,GAAA,aACAC,SAAA,WACA,GAAAC,GAAA,GACAC,EAAAC,KAAAC,IAAA,aACAC,EAAA,KAAAH,EAAA,UAAA,YACAI,EAAAH,IAQA,OALAZ,GAAAa,IAAA,6CAAAC,EAAA,cACAE,KAAA,SAAAC,GAEAF,EAAAG,cAAA,QAAAD,EAAA,yKAAAF,EACAI,IAAA,UAAAJ,EAAAF,IAAA,YAAAE,EAAAF,IAAA,YAEAH,GAEAU,KAAA,WACA,OACAC,MAAA,KACAC,IAAAnB,EAAAoB,aAAA,YACAC,MAAArB,EAAAoB,aAAA,cACAE,OAAAtB,EAAAoB,aAAA,eACAZ,UAAAR,EAAAoB,aAAA,cACAG,OAAAvB,EAAAoB,aAAA,eACAI,WAAAxB,EAAAoB,aAAA,oBACAK,MAAA,EACAC,MAAA1B,EAAAoB,aAAA,gBAGAO,SAAA,WAEA,GAAAD,IAAAjB,KAAAC,IAAA,SACAW,GAAAZ,KAAAC,IAAA,QAAAD,MAEAO,IAAA,QAAA,MACAU,GAAAA,EAAAL,IACAZ,KAAAO,IAAA,QAAA,KAqBAb,GAEAyB,GAAA,WAAA,WACA,GAAAL,GAAAd,KAAAC,IAAA,UACAmB,EAAAC,OAAAC,SAAAC,KAAAC,QAAA,UAAA,IAAA,IACAX,GAAAb,KAAAC,IAAA,UACAW,GAAAZ,KAAAC,IAAA,SACAc,EAAAf,KAAAC,IAAA,cACAS,EAAA,GAAAI,EAAAd,KAAAC,IAAA,OAAAmB,EAAA,UAAAP,EAAA,UAAAD,EAAA,eAAAG,EAAA,UAAAH,EAAA,WAAAC,EAAA,0BACAV,EAAAH,IAGAa,IAAAD,EAAAT,EAEAI,IAAA,WAAA,GAGAkB,MAAAf,GACAgB,KAAA,SAAArB,GACA,MAAA,OAAAA,EAAAsB,QACAC,QAAAC,IAAA,8BAAAxB,EAAAsB,YAAAxB,GACAI,IAAA,QAAA,QAEAF,GACAyB,OAAAJ,KAAA,SAAAlB,GACA,IAAAd,EAAAO,IAAA,SACAE,EAAAI,IAAA,QAAAC,EAAAuB,YAEA5B,EAAAI,IAAA,QAAAb,EAAAO,IAAA,SAAA+B,OAAAxB,EAAAuB,aACA5B,EACAI,IAAA,SAAAM,GAAAV,EACAI,IAAA,WAAA,GAIAC,EAAAuB,WAAAhD,OAAA6B,GACAT,EAAAI,IAAA,QAAA,SAYAtB,GAEAJ,QAAAM,YHmBW","file":"list.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/var/www/pravo/www/app/Resources/public/scripts/list.js\":[function(require,module,exports){\n\r\n/**************************************************************************************\r\n МОДУЛИ\r\n *************************************************************************************/\r\n\r\n/**\r\n * Подключение модуля бесконечной подгрузки\r\n */\r\n\r\nRG.LoadChain = RG.LoadChain || require('./modules/LoadChain');\r\n\r\n$(function() {\r\n\r\n    new RG.LoadChain();\r\n\r\n});\n},{\"./modules/LoadChain\":\"/var/www/pravo/www/app/Resources/public/scripts/modules/LoadChain.js\"}],\"/var/www/pravo/www/app/Resources/public/scripts/modules/LoadChain.js\":[function(require,module,exports){\n/*\r\n * Модуль бесконечной подгрузки\r\n *\r\n */\r\n\r\nvar LoadChain = function() {\r\n\r\n\tvar rootEl = document.getElementById('loadChain');\r\n\r\n    var addToChain = new Ractive ({\r\n        el: '#loadChain',\r\n        template: function() {\r\n            let tmpl = '',\r\n            \ttmplValue = this.get('tmplValue'),\r\n            \ttmplType = (tmplValue == '1') ? 'jurists' : 'questions',\r\n                self = this;\r\n\r\n            // Определяем, какой шаблон использовать - список вопросов или список юристов\r\n            $.get('https://pravo.rg.ru/views/includeTemplate/' + tmplType + '_list.html')\r\n                .done(function(response) {\r\n                    // После получения шаблона генерим его\r\n                    self.resetTemplate('<div>' + response + '</div>{{#show}}<div class=\"b-load-more\"><div class=\"b-load-more__button{{# loading}} has-loading{{/ loading}}\" on-click=\"activate\">Загрузить еще</div></div>{{/show}}');\r\n                    self.set('offset', (+self.get('offset') + +self.get('limit')));\r\n                });\r\n            return tmpl;\r\n        },\r\n        data: function() {\r\n            return {\r\n                items: null,\r\n                uri: rootEl.getAttribute('data-uri'),\r\n                limit: rootEl.getAttribute('data-limit'),\r\n                offset: rootEl.getAttribute('data-offset'),\r\n                tmplValue: rootEl.getAttribute('data-value'),\r\n                search: rootEl.getAttribute('data-search'),\r\n                requestUri: rootEl.getAttribute('data-request-uri'),\r\n                show: true,\r\n                count: rootEl.getAttribute('data-count')\r\n            }\r\n        },\r\n        onrender() {\r\n\r\n            var count = +this.get('count'),\r\n                limit = +this.get('limit');\r\n\r\n            this.set('items', '');\r\n            if (!count || (count < limit)) {\r\n                this.set('show', false);\r\n            }\r\n            /*var self = this,\r\n                querySym = (window.location.href.indexOf('?') !== -1) ? '&' : '?';\r\n\r\n            // Запрашиваем данные для вывода при отрисовке шаблона\r\n            fetch(window.location.href + querySym + 'format=json')\r\n                .then(function(response) {\r\n                    if (response.status !== 200) {\r\n                        console.log('Данные не получены. Ошибка ' + response.status);\r\n                        return;\r\n                    }\r\n                    response.json().then(function(data) {\r\n                        self.set('items', '');\r\n                        // Если вопросов/юристов нет или меньше лимита, кнопку \"Загрузить ещё\" не показываем\r\n                        if (!data.items_list || (data.items_list.length < self.get('limit'))) {\r\n                        \tself.set('show', false);\r\n                        }\r\n                    });\r\n                });*/\r\n        }\r\n    });\r\n\r\n    addToChain.on('activate', function() {\r\n        var search = this.get('search'),\r\n            querySym = (window.location.href.indexOf('?') !== -1) ? '&' : '?',\r\n            offset = +this.get('offset'),\r\n            limit = +this.get('limit'),\r\n            requestUri = this.get('requestUri'),\r\n            uri = (search == true) ? (this.get('uri') + querySym + 'offset=' + offset + '&limit=' + limit + '&format=json') : (requestUri + '/limit-' + limit + '/offset-' + offset + '/index.html?format=json'),\r\n        \tself = this;\r\n\r\n        // Вычисляем, на сколько блоков сдвинуться при выводе\r\n        offset += limit;\r\n\r\n        self.set('loading', true);\r\n\r\n        // Запрашиваем новые данные, вставляем блоки и перезаписываем оффсет\r\n        fetch(uri)\r\n            .then(function(response) {\r\n                if (response.status !== 200) {\r\n                    console.log('Данные не получены. Ошибка ' + response.status);\r\n                    self.set('show', false);\r\n                    return;\r\n                }\r\n                response.json().then(function(data) {\r\n                    if (addToChain.get('items') == '') {\r\n                        self.set('items', data.items_list);\r\n                    } else {\r\n                        self.set('items', addToChain.get('items').concat(data.items_list));\r\n                    }\r\n                    self.set('offset', offset);\r\n                    self.set('loading', false);\r\n\r\n                    // Если данных больше не осталось, скрываем кнопку \"Загрузить ещё\"\r\n                    // if (self.get('tmplValue') == '1') {\r\n                    \tif (data.items_list.length < limit) {\r\n                    \t\tself.set('show', false);\r\n                    \t}\r\n                \t/*} else {\r\n                \t\tif (data.items_list.length < (limit + 1)) {\r\n                    \t\tself.set('show', false);\r\n                    \t}\r\n                \t}*/\r\n                });\r\n            });\r\n\r\n\r\n    });\r\n};\r\n\r\nmodule.exports = LoadChain;\n},{}]},{},[\"/var/www/pravo/www/app/Resources/public/scripts/list.js\"])\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\n/**************************************************************************************\r\n МОДУЛИ\r\n *************************************************************************************/\r\n\r\n/**\r\n * Подключение модуля бесконечной подгрузки\r\n */\r\n\r\nRG.LoadChain = RG.LoadChain || require('./modules/LoadChain');\r\n\r\n$(function() {\r\n\r\n    new RG.LoadChain();\r\n\r\n});","/*\r\n * Модуль бесконечной подгрузки\r\n *\r\n */\r\n\r\nvar LoadChain = function() {\r\n\r\n\tvar rootEl = document.getElementById('loadChain');\r\n\r\n    var addToChain = new Ractive ({\r\n        el: '#loadChain',\r\n        template: function() {\r\n            let tmpl = '',\r\n            \ttmplValue = this.get('tmplValue'),\r\n            \ttmplType = (tmplValue == '1') ? 'jurists' : 'questions',\r\n                self = this;\r\n\r\n            // Определяем, какой шаблон использовать - список вопросов или список юристов\r\n            $.get('https://pravo.rg.ru/views/includeTemplate/' + tmplType + '_list.html')\r\n                .done(function(response) {\r\n                    // После получения шаблона генерим его\r\n                    self.resetTemplate('<div>' + response + '</div>{{#show}}<div class=\"b-load-more\"><div class=\"b-load-more__button{{# loading}} has-loading{{/ loading}}\" on-click=\"activate\">Загрузить еще</div></div>{{/show}}');\r\n                    self.set('offset', (+self.get('offset') + +self.get('limit')));\r\n                });\r\n            return tmpl;\r\n        },\r\n        data: function() {\r\n            return {\r\n                items: null,\r\n                uri: rootEl.getAttribute('data-uri'),\r\n                limit: rootEl.getAttribute('data-limit'),\r\n                offset: rootEl.getAttribute('data-offset'),\r\n                tmplValue: rootEl.getAttribute('data-value'),\r\n                search: rootEl.getAttribute('data-search'),\r\n                requestUri: rootEl.getAttribute('data-request-uri'),\r\n                show: true,\r\n                count: rootEl.getAttribute('data-count')\r\n            }\r\n        },\r\n        onrender() {\r\n\r\n            var count = +this.get('count'),\r\n                limit = +this.get('limit');\r\n\r\n            this.set('items', '');\r\n            if (!count || (count < limit)) {\r\n                this.set('show', false);\r\n            }\r\n            /*var self = this,\r\n                querySym = (window.location.href.indexOf('?') !== -1) ? '&' : '?';\r\n\r\n            // Запрашиваем данные для вывода при отрисовке шаблона\r\n            fetch(window.location.href + querySym + 'format=json')\r\n                .then(function(response) {\r\n                    if (response.status !== 200) {\r\n                        console.log('Данные не получены. Ошибка ' + response.status);\r\n                        return;\r\n                    }\r\n                    response.json().then(function(data) {\r\n                        self.set('items', '');\r\n                        // Если вопросов/юристов нет или меньше лимита, кнопку \"Загрузить ещё\" не показываем\r\n                        if (!data.items_list || (data.items_list.length < self.get('limit'))) {\r\n                        \tself.set('show', false);\r\n                        }\r\n                    });\r\n                });*/\r\n        }\r\n    });\r\n\r\n    addToChain.on('activate', function() {\r\n        var search = this.get('search'),\r\n            querySym = (window.location.href.indexOf('?') !== -1) ? '&' : '?',\r\n            offset = +this.get('offset'),\r\n            limit = +this.get('limit'),\r\n            requestUri = this.get('requestUri'),\r\n            uri = (search == true) ? (this.get('uri') + querySym + 'offset=' + offset + '&limit=' + limit + '&format=json') : (requestUri + '/limit-' + limit + '/offset-' + offset + '/index.html?format=json'),\r\n        \tself = this;\r\n\r\n        // Вычисляем, на сколько блоков сдвинуться при выводе\r\n        offset += limit;\r\n\r\n        self.set('loading', true);\r\n\r\n        // Запрашиваем новые данные, вставляем блоки и перезаписываем оффсет\r\n        fetch(uri)\r\n            .then(function(response) {\r\n                if (response.status !== 200) {\r\n                    console.log('Данные не получены. Ошибка ' + response.status);\r\n                    self.set('show', false);\r\n                    return;\r\n                }\r\n                response.json().then(function(data) {\r\n                    if (addToChain.get('items') == '') {\r\n                        self.set('items', data.items_list);\r\n                    } else {\r\n                        self.set('items', addToChain.get('items').concat(data.items_list));\r\n                    }\r\n                    self.set('offset', offset);\r\n                    self.set('loading', false);\r\n\r\n                    // Если данных больше не осталось, скрываем кнопку \"Загрузить ещё\"\r\n                    // if (self.get('tmplValue') == '1') {\r\n                    \tif (data.items_list.length < limit) {\r\n                    \t\tself.set('show', false);\r\n                    \t}\r\n                \t/*} else {\r\n                \t\tif (data.items_list.length < (limit + 1)) {\r\n                    \t\tself.set('show', false);\r\n                    \t}\r\n                \t}*/\r\n                });\r\n            });\r\n\r\n\r\n    });\r\n};\r\n\r\nmodule.exports = LoadChain;"],"sourceRoot":"/source/"}